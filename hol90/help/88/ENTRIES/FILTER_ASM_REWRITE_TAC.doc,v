head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.33.56;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.33.56;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC FILTER_ASM_REWRITE_TAC

\TYPE {FILTER_ASM_REWRITE_TAC : ((term -> bool) -> thm list -> tactic)}

\SYNOPSIS
Rewrites a goal including built-in rewrites and some of the goal's assumptions.

\KEYWORDS
tactic, selective.

\DESCRIBE
This function implements selective rewriting with a subset of the assumptions
of the goal. The first argument (a predicate on terms) is applied to all
assumptions, and the ones which return {true} are used (along with the set of
basic tautologies and the given theorem list) to rewrite the goal. See
{GEN_REWRITE_TAC} for more information on rewriting.

\FAILURE
{FILTER_ASM_REWRITE_TAC} does not fail, but it can result in an invalid tactic
if the rewrite is invalid. This happens when a theorem used for rewriting has
assumptions which are not alpha-convertible to assumptions of the goal. Using
{FILTER_ASM_REWRITE_TAC} may result in a diverging sequence of rewrites. In
such cases {FILTER_ONCE_ASM_REWRITE_TAC} may be used.

\USES
This tactic can be applied when rewriting with all assumptions results in
divergence, or in an unwanted proof state. Typically, the predicate can model
checks as to whether a certain variable appears on the left-hand side of an
equational assumption, or whether the assumption is in disjunctive form. Thus
it allows choice of assumptions to rewrite with in a position-independent
fashion.

Another use is to improve performance when there are many assumptions
which are not applicable. Rewriting, though a powerful method of
proving theorems in HOL, can result in a reduced performance due to
the pattern matching and the number of primitive inferences involved.

\SEEALSO
ASM_REWRITE_TAC, FILTER_ONCE_ASM_REWRITE_TAC, FILTER_PURE_ASM_REWRITE_TAC,
FILTER_PURE_ONCE_ASM_REWRITE_TAC, GEN_REWRITE_TAC, ONCE_REWRITE_TAC,
PURE_REWRITE_TAC, REWRITE_TAC.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
