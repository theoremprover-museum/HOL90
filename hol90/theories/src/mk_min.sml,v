head	1.4;
access;
symbols
	HOL97:1.3.0.4
	bpHOL97:1.3
	hol90_9_alpha:1.3
	hol90_pre8_for_multiple_compilers:1.3.0.2
	hol90_pre8_after_donalds_separate_compilation_changes:1.3
	hol90_8_after_merging_Konrad_Elsa:1.2
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.4
date	96.01.04.21.50.31;	author drs1004;	state Exp;
branches;
next	1.3;

1.3
date	95.10.31.14.01.17;	author drs1004;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	95.10.18.16.05.23;	author drs1004;	state Exp;
branches;
next	1.1;

1.1
date	95.10.16.13.30.25;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.30.25;	author rjb;	state Exp;
branches;
next	;

1.3.4.1
date	97.07.11.16.37.38;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.4
log
@see changes file
@
text
@(* ===================================================================== *)
(* FILE          : mk_min.sml                                            *)
(* DESCRIPTION   : The Mother of All Theories.                           *)
(*                                                                       *)
(* AUTHOR        : (c) Konrad Slind, University of Calgary               *)
(* DATE          : September 11, 1991                                    *)
(* ===================================================================== *)



(*----------------------------------------------------------------------
 * I modified this to make it a simple structure instead of a
 * functor.  I couldn't see any benefit accruing out of the use of a
 * functor here, parameterized over Term, Theorem, Parser etc.  
 * Maybe theories could be parameterized over
 * other things (e.g. other theories), but not these core things surely?
 *                         DRS
 *--------------------------------------------------------------------*)

new_theory "min";
new_type{Name = "bool", Arity = 0};
new_type{Name = "ind", Arity = 0};
new_type{Name = "fun", Arity = 2};

hol_infix 100 "=";
hol_infix 200 "==>";
hol_binder "@@";
    
new_constant{Name = "=", Ty = ==`:'a -> 'a -> bool`==};
new_constant{Name = "==>", Ty = ==`:bool->bool->bool`==};
new_constant{Name = "@@",  Ty = ==`:('a -> bool) -> 'a`==};

close_theory();
export_theory();



@


1.3
log
@First phase of hol90.8 development.  hol90 now compiles using NJSML-CM
108.5, with separate compilation of libraries.  System dependencies
have been isolated in the makefiles and "portable.sml".

This involved a large number of enhancments to the source files,
most of which are documented in the 7.changes file (or will be shortly).
See also the correpsonding email corrspondence between RJB, KLS, TFM,
JRH and DRS that happened during this development.
@
text
@d20 4
a23 3
structure Min : Min_sig = struct
open Parse;
open Theory;
d25 7
a31 4
val _ = new_theory "min";
val _ = new_type{Name = "bool", Arity = 0};
val _ = new_type{Name = "ind", Arity = 0};
val _ = new_type{Name = "fun", Arity = 2};
d33 2
a34 3
val _ = new_infix{Name = "=", Ty = ==`:'a -> 'a -> bool`==, Prec=100};
val _ = new_infix{Name = "==>", Ty = ==`:bool->bool->bool`==, Prec=200};
val _ = new_binder{Name = "@@",  Ty = ==`:('a -> bool) -> 'a`==};
a35 2
val _ = close_theory();
val _ = export_theory();
a36 2
end;

@


1.3.4.1
log
@Minor changes to accomodate requirements of CM.
@
text
@d15 2
a16 2
 * Maybe theories could be parameterized over other things 
 * (e.g. other theories), but not these core things surely?
d20 3
a22 6
structure Min : Min_sig = 
struct

val TYPE = Parse.type_parser

open CoreHol.Theory;
d26 2
a27 2
val _ = new_type{Name = "ind",  Arity = 0};
val _ = new_type{Name = "fun",  Arity = 2};
d29 3
a31 3
val _ = new_infix{Name = "=",   Ty=TYPE `: 'a -> 'a -> bool`,    Prec=100};
val _ = new_infix{Name = "==>", Ty=TYPE `: bool -> bool -> bool`, Prec=200};
val _ = new_binder{Name = "@@",  Ty=TYPE `: ('a -> bool) -> 'a`};
d33 1
d37 2
@


1.2
log
@Konrad's changes since hol90.7, merged in off a side branch.
Also some minor changes to mk_exists.sml and mk_bool.sml to
adjust them for the new "no-structures-open" compilation rule.
@
text
@d10 11
a20 8
functor MK_MIN (structure Globals : Globals_sig
		structure Theory : Theory_sig
                structure Dsyntax : Dsyntax_sig
                structure Parse : Parse_sig
                sharing
                  Theory.Thm.Term = Parse.Parse_support.Preterm.Term =
                  Dsyntax.Term) : Mk_min_sig =
struct
d22 13
d36 1
a36 15
val _ =
if Globals.remake_theory_files
    then
     (Theory.new_theory "min";
      Theory.new_type{Name = "bool", Arity = 0};
      Theory.new_type{Name = "ind", Arity = 0};
      Theory.new_type{Name = "fun", Arity = 2};

      Theory.new_infix{Name = "=", Ty = ==`:'a -> 'a -> bool`==, Prec=100};
      Theory.new_infix{Name = "==>", Ty = ==`:bool->bool->bool`==, Prec=200};
      Theory.new_binder{Name = "@@",  Ty = ==`:('a -> bool) -> 'a`==};

      Theory.close_theory())
else Theory.load_theory "min"
handle e => Exception.Raise e;
a38 1
end; (* MK_MIN *)
@


1.1
log
@Initial revision
@
text
@d33 2
a34 1
else Theory.load_theory "min";
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
