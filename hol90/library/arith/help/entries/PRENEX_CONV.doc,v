head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.31.30;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.31.30;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC PRENEX_CONV

\TYPE {PRENEX_CONV : conv}

\SYNOPSIS
Puts a formula into prenex normal form.

\LIBRARY arith

\DESCRIBE
This function puts a formula into prenex normal form, and in the process splits
any Boolean equalities (if-and-only-if) into two implications. If there is a
Boolean-valued subterm present as the condition of a conditional, the subterm
will be put in prenex normal form, but quantifiers will not be moved out of the
condition. Some renaming of variables may take place.

\FAILURE
Never fails.

\EXAMPLE
{
#PRENEX_CONV "!m n. (m <= n) ==> !p. (m < SUC(n + p))";;
|- (!m n. m <= n ==> (!p. m < (SUC(n + p)))) =
   (!m n p. m <= n ==> m < (SUC(n + p)))

#PRENEX_CONV "!p. (!m. m >= p) = (p = 0)";;
|- (!p. (!m. m >= p) = (p = 0)) =
   (!p m. ?m'. (m' >= p ==> (p = 0)) /\ ((p = 0) ==> m >= p))

#PRENEX_CONV "!m. (((m = 0) ==> (!n. m <= n)) => 0 | m) + m = m";;
|- (!m. (((m = 0) ==> (!n. m <= n)) => 0 | m) + m = m) =
   (!m. ((!n. (m = 0) ==> m <= n) => 0 | m) + m = m)
}
\USES
Useful as a preprocessor to decision procedures which require their argument
formula to be in prenex normal form.

\SEEALSO
is_prenex.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
