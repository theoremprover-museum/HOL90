head	1.2;
access;
symbols
	HOL97:1.2.0.4
	bpHOL97:1.2
	hol90_9_alpha:1.2
	hol90_pre8_for_multiple_compilers:1.2.0.2
	hol90_pre8_after_donalds_separate_compilation_changes:1.2
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.2
date	95.10.31.14.01.59;	author drs1004;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	95.10.16.13.31.35;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.31.35;	author rjb;	state Exp;
branches;
next	;

1.2.4.1
date	97.07.11.19.28.54;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.2
log
@First phase of hol90.8 development.  hol90 now compiles using NJSML-CM
108.5, with separate compilation of libraries.  System dependencies
have been isolated in the makefiles and "portable.sml".

This involved a large number of enhancments to the source files,
most of which are documented in the 7.changes file (or will be shortly).
See also the correpsonding email corrspondence between RJB, KLS, TFM,
JRH and DRS that happened during this development.
@
text
@(*****************************************************************************)
(* FILE          : prenex.sml                                                *)
(* DESCRIPTION   : Putting formulae in Prenex Normal Form                    *)
(*                                                                           *)
(* READS FILES   : <none>                                                    *)
(* WRITES FILES  : <none>                                                    *)
(*                                                                           *)
(* AUTHOR        : R.J.Boulton, University of Cambridge                      *)
(* DATE          : 19th June 1992                                            *)
(*                                                                           *)
(* TRANSLATOR    : R.J.Boulton, University of Cambridge                      *)
(* DATE          : 16th February 1993                                        *)
(*                                                                           *)
(* LAST MODIFIED : R.J.Boulton                                               *)
(* DATE          : 16th February 1993                                        *)
(*****************************************************************************)

structure Prenex : Prenex_sig =
struct

open Core; (* open up all of the HOL 0/1 Core - could be replaced by more *)
           (* explicit opens to avoid endless recompilation of libraries  *)
           (* during system development                                   *)

fun failwith function = raise HOL_ERR{origin_structure = "Prenex",
                                      origin_function = function,
                                      message = ""};
open Rsyntax;
open Qconv;

(*---------------------------------------------------------------------------*)
(* QUANT_EQ_IMP_CONV : conv                                                  *)
(*---------------------------------------------------------------------------*)

fun QUANT_EQ_IMP_CONV tm =
 (let val {lhs,rhs} = dest_eq tm
  in  if (is_forall lhs) orelse (is_exists lhs) orelse
         (is_forall rhs) orelse (is_exists rhs)
      then SPECL [lhs,rhs] EQ_IMP_THM
      else failwith "fail"
  end
 ) handle (HOL_ERR _) => failwith "QUANT_EQ_IMP_CONV";

(*---------------------------------------------------------------------------*)
(* is_prenex : term -> bool                                                  *)
(*---------------------------------------------------------------------------*)

fun is_prenex tm =
   let fun contains_quant tm =
          if (is_forall tm) orelse (is_exists tm)
          then true
          else (let val {Rator = f,Rand = x} = dest_comb tm
                in  (contains_quant f) orelse (contains_quant x)
                end)
               handle _ => (contains_quant (body tm))
               handle _ => false
   in  is_prenex (#Body (dest_forall tm)) handle _ =>
       is_prenex (#Body (dest_exists tm)) handle _ =>
       not (contains_quant tm)
   end;

(*---------------------------------------------------------------------------*)
(* PRENEX_CONV : conv                                                        *)
(*---------------------------------------------------------------------------*)

fun PRENEX_CONV tm =
 if (is_prenex tm)
 then ALL_CONV tm
 else
 TOP_DEPTH_CONV
  (fn tm =>
   if (is_neg tm) then (NOT_FORALL_CONV ORELSEC NOT_EXISTS_CONV) tm
   else if (is_conj tm) then
      (AND_FORALL_CONV ORELSEC
       LEFT_AND_FORALL_CONV ORELSEC RIGHT_AND_FORALL_CONV ORELSEC
       AND_EXISTS_CONV ORELSEC
       LEFT_AND_EXISTS_CONV ORELSEC RIGHT_AND_EXISTS_CONV) tm
   else if (is_disj tm) then
      (OR_FORALL_CONV ORELSEC
       LEFT_OR_FORALL_CONV ORELSEC RIGHT_OR_FORALL_CONV ORELSEC
       OR_EXISTS_CONV ORELSEC
       LEFT_OR_EXISTS_CONV ORELSEC RIGHT_OR_EXISTS_CONV) tm
   else if (is_imp tm) then
      (LEFT_IMP_FORALL_CONV ORELSEC RIGHT_IMP_FORALL_CONV ORELSEC
       LEFT_IMP_EXISTS_CONV ORELSEC RIGHT_IMP_EXISTS_CONV) tm
   else if (is_eq tm) then QUANT_EQ_IMP_CONV tm
   else failwith "fail")
 tm;

end
@


1.2.4.1
log
@Changes to accomodate CM, and also the differences between  SML'90 and SML'97.
@
text
@d21 3
a23 31
type term = CoreHol.Term.term
type conv = Abbrev.conv;

open Rsyntax;
open Qconv; infix THENC; infix ORELSEC;
open CoreHol.Term;
open CoreHol.Dsyntax;
open Drule;
open Exception;

(* Bindings from Conv structure *)
val TOP_DEPTH_CONV = Conv.TOP_DEPTH_CONV;
val EQ_IMP_THM = Taut_thms.EQ_IMP_THM;
val NOT_EXISTS_CONV = Conv.NOT_EXISTS_CONV
val NOT_FORALL_CONV = Conv.NOT_FORALL_CONV
val RIGHT_AND_EXISTS_CONV = Conv.RIGHT_AND_EXISTS_CONV
val LEFT_AND_EXISTS_CONV = Conv.LEFT_AND_EXISTS_CONV
val RIGHT_AND_FORALL_CONV = Conv.RIGHT_AND_FORALL_CONV
val LEFT_AND_FORALL_CONV = Conv.LEFT_AND_FORALL_CONV
val AND_EXISTS_CONV = Conv.AND_EXISTS_CONV
val AND_FORALL_CONV = Conv.AND_FORALL_CONV
val LEFT_OR_FORALL_CONV = Conv.LEFT_OR_FORALL_CONV
val RIGHT_OR_FORALL_CONV = Conv.RIGHT_OR_FORALL_CONV
val OR_FORALL_CONV = Conv.OR_FORALL_CONV
val LEFT_OR_EXISTS_CONV = Conv.LEFT_OR_EXISTS_CONV
val RIGHT_OR_EXISTS_CONV = Conv.RIGHT_OR_EXISTS_CONV
val OR_EXISTS_CONV = Conv.OR_EXISTS_CONV
val RIGHT_IMP_FORALL_CONV = Conv.RIGHT_IMP_FORALL_CONV
val LEFT_IMP_FORALL_CONV = Conv.LEFT_IMP_FORALL_CONV
val LEFT_IMP_EXISTS_CONV = Conv.LEFT_IMP_EXISTS_CONV
val RIGHT_IMP_EXISTS_CONV = Conv.RIGHT_IMP_EXISTS_CONV
d28 2
@


1.1
log
@Initial revision
@
text
@d21 4
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
