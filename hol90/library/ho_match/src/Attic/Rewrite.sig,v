head	1.1;
access;
symbols
	HOL97:1.1.2.1.0.2
	bpHOL97:1.1.2.1
	hol90_9_alpha:1.1.2.1
	hol90_pre8_for_multiple_compilers:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	96.08.06.11.35.36;	author rjb;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.08.06.11.35.37;	author rjb;	state Exp;
branches
	1.1.2.1.2.1;
next	;

1.1.2.1.2.1
date	97.07.11.19.49.51;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file Rewrite.sig was initially added on branch hol90_pre8_for_multiple_compilers.
@
text
@@


1.1.2.1
log
@New library ho-match.
@
text
@a0 57
(* ===================================================================== 
 * FILE          : rewrite.sig                                           
 * DESCRIPTION   : Signature for the rewriting routines. 
 *  Now higher order rewriting.
 * ===================================================================== *)


signature Ho_rewrite_sig =
sig

    val implicit_rewrites : unit -> thm list
    val set_implicit_rewrites : thm list -> unit
    val add_implicit_rewrites : thm list -> unit

    val mk_rewrites : thm -> thm list;
	
    val REWR_CONV : thm -> conv 
    val GEN_REWRITE_CONV : (conv -> conv) -> thm list -> conv
    val GEN_REWRITE_RULE : (conv -> conv) -> thm list -> thm -> thm
    val GEN_REWRITE_TAC : (conv -> conv) -> thm list -> tactic

    val PURE_REWRITE_CONV : thm list -> conv
    val REWRITE_CONV : thm list -> conv
    val PURE_ONCE_REWRITE_CONV : thm list -> conv
    val ONCE_REWRITE_CONV : thm list -> conv
	
    val PURE_REWRITE_RULE : thm list -> thm -> thm
    val REWRITE_RULE : thm list -> thm -> thm
    val PURE_ONCE_REWRITE_RULE : thm list -> thm -> thm
    val ONCE_REWRITE_RULE : thm list -> thm -> thm
    val PURE_ASM_REWRITE_RULE : thm list -> thm -> thm
    val ASM_REWRITE_RULE : thm list -> thm -> thm
    val PURE_ONCE_ASM_REWRITE_RULE : thm list -> thm -> thm
    val ONCE_ASM_REWRITE_RULE : thm list -> thm -> thm
	
    val PURE_REWRITE_TAC : thm list -> tactic
    val REWRITE_TAC : thm list -> tactic
    val PURE_ONCE_REWRITE_TAC : thm list -> tactic
    val ONCE_REWRITE_TAC : thm list -> tactic
    val PURE_ASM_REWRITE_TAC : thm list -> tactic
    val ASM_REWRITE_TAC : thm list -> tactic
    val PURE_ONCE_ASM_REWRITE_TAC : thm list -> tactic
    val ONCE_ASM_REWRITE_TAC : thm list -> tactic
	
    val FILTER_PURE_ASM_REWRITE_RULE :(term -> bool) -> thm list -> thm -> thm
    val FILTER_ASM_REWRITE_RULE :(term -> bool) -> thm list -> thm -> thm
    val FILTER_PURE_ONCE_ASM_REWRITE_RULE :(term -> bool) -> thm list -> thm -> thm
    val FILTER_ONCE_ASM_REWRITE_RULE :(term -> bool) -> thm list -> thm -> thm
    val FILTER_PURE_ASM_REWRITE_TAC :(term -> bool) -> thm list -> tactic
    val FILTER_ASM_REWRITE_TAC :(term -> bool) -> thm list -> tactic
    val FILTER_PURE_ONCE_ASM_REWRITE_TAC :(term -> bool) -> thm list -> tactic
    val FILTER_ONCE_ASM_REWRITE_TAC :(term -> bool) -> thm list -> tactic
	
    val SUBST_MATCH : thm -> thm -> thm
	
    val TAUT : term -> thm
end (* sig *)
@


1.1.2.1.2.1
log
@CM upgrade. Added ho_matchLib.sml to give a single point-of-delivery for the
library.
@
text
@a9 4
  type term
  type thm
  type conv 
  type tactic
d47 1
a47 1
    val FILTER_PURE_ONCE_ASM_REWRITE_RULE :(term->bool)->thm list -> thm -> thm
d55 1
@
