head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.33.47;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.33.47;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC CONJ_SET_CONV

\TYPE {CONJ_SET_CONV : (term list -> term list -> thm)}

\SYNOPSIS
Proves the equivalence of the conjunctions of two equal sets of terms.

\KEYWORDS
conversion, conjunction.

\DESCRIBE
The arguments to {CONJ_SET_CONV} are two lists of terms {[t1;...;tn]} and
{[u1;...;um]}.  If these are equal when considered as sets, that is if the sets
{
   {{t1,...,tn}} and {{u1,...,um}}
}
\noindent are equal, then {CONJ_SET_CONV} returns the theorem:
{
   |- (t1 /\ ... /\ tn) = (u1 /\ ... /\ um)
}
\noindent Otherwise {CONJ_SET_CONV} fails.

\FAILURE
{CONJ_SET_CONV [t1;...;tn] [u1;...;um]} fails if {[t1,...,tn]} and
{[u1,...,um]}, regarded as sets of terms, are not equal. Also fails
if any {ti} or {ui} does not have type {bool}.

\USES
Used to order conjuncts.  First sort a list of conjuncts {l1} into the
desired order to get a new list {l2}, then call {CONJ_SET_CONV l1 l2}.

\COMMENTS
This is not a true conversion, so perhaps it ought to be called something else.

\SEEALSO
CONJUNCTS_CONV.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
