\DOC GEN_PALPHA_CONV

\KEYWORDS
conversion, alpha.

\LIBRARY pair

\TYPE {GEN_PALPHA_CONV : (term -> conv)}

\SYNOPSIS
Renames the bound pair of a paired abstraction, quantified term,
or other binder.

\DESCRIBE
The conversion {GEN_PALPHA_CONV} provides alpha conversion for lambda
abstractions of the form {"\p.t"}, quantified terms of the forms {"!p.t"},
{"?p.t"} or {"?!p.t"}, and epsilon terms of the form {"@p.t"}.  In general,
if {B} is a binder constant, then {GEN_ALPHA_CONV} implements alpha
conversion for applications of the form {"B p.t"}.  
The function {is_binder} determines what is regarded as a binder in this 
context.

The renaming of pairs is as described for {PALPHA_CONV}.

\FAILURE
{GEN_PALPHA_CONV q tm} fails if {q} is not a variable,
or if {tm} does not have one of the forms {"\p.t"} or {"B p.t"},
where {B} is a binder (that is, {is_binder `B`} returns {true}).
{GEN_ALPHA_CONV q tm} also fails if {tm} does have one of these forms,
but types of the variables {p} and {q} differ.

\SEEALSO
GEN_ALPHA_CONV, PALPHA, PALPHA_CONV, is_binder.

\ENDDOC
