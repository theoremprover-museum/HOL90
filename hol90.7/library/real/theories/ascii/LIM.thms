thid = (LIM, 784060550, 1422)
axioms = []
definitions =
[((differentiable),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   (((= :bool -> bool -> bool) ((differentiable $1) $0))
   ((? :(real -> bool) -> bool) (\(l :real). (((diffl $2) $0)
   $1))))))))`),
 ((contl),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   (((= :bool -> bool -> bool) ((contl $1) $0)) (((-> (\(h :real). ($2
   ((|+| $1) $0)))) ($1 $0)) (& 0)))))))`),
 ((diffl),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real).
   (((= :bool -> bool -> bool) (((diffl $2) $1) $0)) (((->
   (\(h :real). ((/ ((|-| ($3 ((|+| $1) $0))) ($3 $1))) $0))) $1) (&
   0)))))))))`),
 ((tends_real_real),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x0 :real).
   (((= :bool -> bool -> bool) (((-> $2) $1) $0))
   ((((tends :(real -> real) -> real ->
              real topology # (real -> real -> bool) -> bool) $2) $1)
   (((, :real topology -> (real -> real -> bool) ->
         real topology # (real -> real -> bool))
   ((mtop :real metric -> real topology) mr1))
   ((tendsto :real metric # real -> real -> real -> bool)
   (((, :real metric -> real -> real metric # real) mr1)
   $0)))))))))))`)]
theorems =
[((DIFF_INVERSE_OPEN),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<| $2) $1))
   ((/\ ((|<| $1) $0)) ((/\ ((! :(real -> bool) -> bool) (\(z :real).
   ((==> ((/\ ((|<| $3) $0)) ((|<| $0) $1))) ((/\
   (((= :real -> real -> bool) ($5 ($6 $0))) $0)) ((contl $6) $0))))))
   ((/\ (((diffl $5) $3) $1)) (~ (((= :real -> real -> bool) $3) (&
   0)))))))) (((diffl $4) (inv $3)) ($5 $1)))))))))))))))`),
 ((INTERVAL_CLEMMA),
  [],
  `((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<| $2) $0))
   ((|<| $0) $1))) ((? :(real -> bool) -> bool) (\(d :real). ((/\
   ((|<| (& 0)) $0)) ((! :(real -> bool) -> bool) (\(y :real). ((==>
   ((|<=| (abs ((|-| $0) $2))) $1)) ((/\ ((|<| $4) $0)) ((|<| $0)
   $3)))))))))))))))`),
 ((DIFF_INVERSE),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((/\ ((|<| (& 0))
   $0)) ((/\ ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=|
   (abs ((|-| $0) $2))) $1)) (((= :real -> real -> bool) ($4 ($5 $0)))
   $0))))) ((/\ ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=|
   (abs ((|-| $0) $2))) $1)) ((contl $5) $0))))) ((/\ (((diffl $4) $2)
   $1)) (~ (((= :real -> real -> bool) $2) (& 0)))))))) (((diffl $3)
   (inv $2)) ($4 $1)))))))))))))`),
 ((CONT_INVERSE),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((/\ ((|<| (& 0))
   $0)) ((/\ ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=|
   (abs ((|-| $0) $2))) $1)) (((= :real -> real -> bool) ($3 ($4 $0)))
   $0))))) ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=| (abs
   ((|-| $0) $2))) $1)) ((contl $4) $0))))))) ((contl $2) ($3
   $1)))))))))))`),
 ((CONT_INJ_RANGE),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((/\ ((|<| (& 0))
   $0)) ((/\ ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=|
   (abs ((|-| $0) $2))) $1)) (((= :real -> real -> bool) ($3 ($4 $0)))
   $0))))) ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=| (abs
   ((|-| $0) $2))) $1)) ((contl $4) $0)))))))
   ((? :(real -> bool) -> bool) (\(e :real). ((/\ ((|<| (& 0)) $0))
   ((! :(real -> bool) -> bool) (\(y :real). ((==> ((|<=| (abs ((|-|
   $0) ($5 $3)))) $1)) ((? :(real -> bool) -> bool) (\(z :real). ((/\
   ((|<=| (abs ((|-| $0) $4))) $3)) (((= :real -> real -> bool) ($6
   $0)) $1)))))))))))))))))))`),
 ((CONT_INJ_LEMMA2),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((/\ ((|<| (& 0))
   $0)) ((/\ ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=|
   (abs ((|-| $0) $2))) $1)) (((= :real -> real -> bool) ($3 ($4 $0)))
   $0))))) ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=| (abs
   ((|-| $0) $2))) $1)) ((contl $4) $0))))))) (~
   ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=| (abs ((|-|
   $0) $2))) $1)) ((|<=| ($4 $2)) ($4 $0)))))))))))))))`),
 ((CONT_INJ_LEMMA),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((/\ ((|<| (& 0))
   $0)) ((/\ ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=|
   (abs ((|-| $0) $2))) $1)) (((= :real -> real -> bool) ($3 ($4 $0)))
   $0))))) ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=| (abs
   ((|-| $0) $2))) $1)) ((contl $4) $0))))))) (~
   ((! :(real -> bool) -> bool) (\(z :real). ((==> ((|<=| (abs ((|-|
   $0) $2))) $1)) ((|<=| ($4 $0)) ($4 $2)))))))))))))))`),
 ((INTERVAL_ABS),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(z :real).
   ((! :(real -> bool) -> bool) (\(d :real).
   (((= :bool -> bool -> bool) ((/\ ((|<=| ((|-| $2) $0)) $1)) ((|<=|
   $1) ((|+| $2) $0)))) ((|<=| (abs ((|-| $1) $2))) $0))))))))`),
 ((DIFF_ISCONST_ALL),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real). ((==>
   ((! :(real -> bool) -> bool) (\(x :real). (((diffl $1) (& 0))
   $0)))) ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(y :real).
   (((= :real -> real -> bool) ($2 $1)) ($2 $0)))))))))`),
 ((DIFF_ISCONST),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<| $1) $0))
   ((/\ ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=|
   $2) $0)) ((|<=| $0) $1))) ((contl $3) $0)))))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<| $2) $0))
   ((|<| $0) $1))) (((diffl $3) (& 0)) $0)))))))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $2)
   $0)) ((|<=| $0) $1))) (((= :real -> real -> bool) ($3 $0)) ($3
   $2))))))))))))`),
 ((DIFF_ISCONST_END),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<| $1) $0))
   ((/\ ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=|
   $2) $0)) ((|<=| $0) $1))) ((contl $3) $0)))))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<| $2) $0))
   ((|<| $0) $1))) (((diffl $3) (& 0)) $0)))))))
   (((= :real -> real -> bool) ($2 $0)) ($2 $1)))))))))`),
 ((MVT),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<| $1) $0))
   ((/\ ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=|
   $2) $0)) ((|<=| $0) $1))) ((contl $3) $0)))))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<| $2) $0))
   ((|<| $0) $1))) ((differentiable $3) $0)))))))
   ((? :(real -> bool) -> bool) (\(l :real).
   ((? :(real -> bool) -> bool) (\(z :real). ((/\ ((|<| $3) $0)) ((/\
   ((|<| $0) $2)) ((/\ (((diffl $4) $1) $0))
   (((= :real -> real -> bool) ((|-| ($4 $2)) ($4 $3))) ((|*| ((|-|
   $2) $3)) $1))))))))))))))))`),
 ((MVT_LEMMA),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real).
   (((= :real -> real -> bool) ((\(x :real). ((|-| ($3 $0)) ((|*| ((/
   ((|-| ($3 $1)) ($3 $2))) ((|-| $1) $2))) $0))) $1)) ((\(x :real).
   ((|-| ($3 $0)) ((|*| ((/ ((|-| ($3 $1)) ($3 $2))) ((|-| $1) $2)))
   $0))) $0))))))))`),
 ((ROLLE),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<| $1) $0))
   ((/\ (((= :real -> real -> bool) ($2 $1)) ($2 $0))) ((/\
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $2)
   $0)) ((|<=| $0) $1))) ((contl $3) $0)))))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<| $2) $0))
   ((|<| $0) $1))) ((differentiable $3) $0))))))))
   ((? :(real -> bool) -> bool) (\(z :real). ((/\ ((|<| $2) $0)) ((/\
   ((|<| $0) $1)) (((diffl $3) (& 0)) $0))))))))))))`),
 ((INTERVAL_LEMMA),
  [],
  `((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<| $2) $0))
   ((|<| $0) $1))) ((? :(real -> bool) -> bool) (\(d :real). ((/\
   ((|<| (& 0)) $0)) ((! :(real -> bool) -> bool) (\(y :real). ((==>
   ((|<| (abs ((|-| $2) $0))) $1)) ((/\ ((|<=| $4) $0)) ((|<=| $0)
   $3)))))))))))))))`),
 ((DIFF_LCONST),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(l :real). ((==> ((/\ (((diffl $2)
   $0) $1)) ((? :(real -> bool) -> bool) (\(d :real). ((/\ ((|<| (&
   0)) $0)) ((! :(real -> bool) -> bool) (\(y :real). ((==> ((|<| (abs
   ((|-| $3) $0))) $1)) (((= :real -> real -> bool) ($4 $0)) ($4
   $3)))))))))) (((= :real -> real -> bool) $0) (& 0)))))))))`),
 ((DIFF_LMIN),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(l :real). ((==> ((/\ (((diffl $2)
   $0) $1)) ((? :(real -> bool) -> bool) (\(d :real). ((/\ ((|<| (&
   0)) $0)) ((! :(real -> bool) -> bool) (\(y :real). ((==> ((|<| (abs
   ((|-| $3) $0))) $1)) ((|<=| ($4 $3)) ($4 $0))))))))))
   (((= :real -> real -> bool) $0) (& 0)))))))))`),
 ((DIFF_LMAX),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(l :real). ((==> ((/\ (((diffl $2)
   $0) $1)) ((? :(real -> bool) -> bool) (\(d :real). ((/\ ((|<| (&
   0)) $0)) ((! :(real -> bool) -> bool) (\(y :real). ((==> ((|<| (abs
   ((|-| $3) $0))) $1)) ((|<=| ($4 $0)) ($4 $3))))))))))
   (((= :real -> real -> bool) $0) (& 0)))))))))`),
 ((DIFF_LDEC),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(l :real). ((==> ((/\ (((diffl $2)
   $0) $1)) ((|<| $0) (& 0)))) ((? :(real -> bool) -> bool)
   (\(d :real). ((/\ ((|<| (& 0)) $0)) ((! :(real -> bool) -> bool)
   (\(h :real). ((==> ((/\ ((|<| (& 0)) $0)) ((|<| $0) $1))) ((|<| ($4
   $3)) ($4 ((|-| $3) $0))))))))))))))))`),
 ((DIFF_LINC),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(l :real). ((==> ((/\ (((diffl $2)
   $0) $1)) ((|<| (& 0)) $0))) ((? :(real -> bool) -> bool)
   (\(d :real). ((/\ ((|<| (& 0)) $0)) ((! :(real -> bool) -> bool)
   (\(h :real). ((==> ((/\ ((|<| (& 0)) $0)) ((|<| $0) $1))) ((|<| ($4
   $3)) ($4 ((|+| $3) $0))))))))))))))))`),
 ((CONT_ATTAINS_ALL),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<=| $1)
   $0)) ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=|
   $2) $0)) ((|<=| $0) $1))) ((contl $3) $0))))))
   ((? :(real -> bool) -> bool) (\(L :real).
   ((? :(real -> bool) -> bool) (\(M :real). ((/\ ((|<=| $1) $0)) ((/\
   ((! :(real -> bool) -> bool) (\(y :real). ((==> ((/\ ((|<=| $2)
   $0)) ((|<=| $0) $1))) ((? :(real -> bool) -> bool) (\(x :real).
   ((/\ ((|<=| $5) $0)) ((/\ ((|<=| $0) $4))
   (((= :real -> real -> bool) ($6 $0)) $1)))))))))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $4)
   $0)) ((|<=| $0) $3))) ((/\ ((|<=| $2) ($5 $0))) ((|<=| ($5 $0))
   $1))))))))))))))))))`),
 ((CONT_ATTAINS2),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<=| $1)
   $0)) ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=|
   $2) $0)) ((|<=| $0) $1))) ((contl $3) $0))))))
   ((? :(real -> bool) -> bool) (\(M :real). ((/\
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $3)
   $0)) ((|<=| $0) $2))) ((|<=| $1) ($4 $0))))))
   ((? :(real -> bool) -> bool) (\(x :real). ((/\ ((|<=| $3) $0)) ((/\
   ((|<=| $0) $2)) (((= :real -> real -> bool) ($4 $0))
   $1)))))))))))))))`),
 ((CONT_ATTAINS),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<=| $1)
   $0)) ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=|
   $2) $0)) ((|<=| $0) $1))) ((contl $3) $0))))))
   ((? :(real -> bool) -> bool) (\(M :real). ((/\
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $3)
   $0)) ((|<=| $0) $2))) ((|<=| ($4 $0)) $1)))))
   ((? :(real -> bool) -> bool) (\(x :real). ((/\ ((|<=| $3) $0)) ((/\
   ((|<=| $0) $2)) (((= :real -> real -> bool) ($4 $0))
   $1)))))))))))))))`),
 ((CONT_HASSUP),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<=| $1)
   $0)) ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=|
   $2) $0)) ((|<=| $0) $1))) ((contl $3) $0))))))
   ((? :(real -> bool) -> bool) (\(M :real). ((/\
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $3)
   $0)) ((|<=| $0) $2))) ((|<=| ($4 $0)) $1)))))
   ((! :(real -> bool) -> bool) (\(N :real). ((==> ((|<| $0) $1))
   ((? :(real -> bool) -> bool) (\(x :real). ((/\ ((|<=| $4) $0)) ((/\
   ((|<=| $0) $3)) ((|<| $1) ($5 $0)))))))))))))))))))`),
 ((CONT_BOUNDED),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real). ((==> ((/\ ((|<=| $1)
   $0)) ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=|
   $2) $0)) ((|<=| $0) $1))) ((contl $3) $0))))))
   ((? :(real -> bool) -> bool) (\(M :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $3)
   $0)) ((|<=| $0) $2))) ((|<=| ($4 $0)) $1)))))))))))))`),
 ((DIFF_SUM),
  [],
  `((! :((num -> real -> real) -> bool) -> bool)
   (\(f :num -> real -> real).
   ((! :((num -> real -> real) -> bool) -> bool)
   (\(f' :num -> real -> real). ((! :(num -> bool) -> bool)
   (\(m :num). ((! :(num -> bool) -> bool) (\(n :num).
   ((! :(real -> bool) -> bool) (\(x :real). ((==>
   ((! :(num -> bool) -> bool) (\(r :num). ((==> ((/\ ((<= $3) $0))
   ((< $0) ((+ $3) $2)))) (((diffl (\(x :real). (($6 $1) $0))) (($4
   $0) $1)) $1))))) (((diffl (\(x :real). ((sum
   (((, :num -> num -> num # num) $3) $2)) (\(n :num). (($6 $0)
   $1))))) ((sum (((, :num -> num -> num # num) $2) $1)) (\(r :num).
   (($4 $0) $1)))) $0))))))))))))`),
 ((DIFF_DIV),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((diffl $4)
   $2) $0)) ((/\ (((diffl $3) $1) $0)) (~ (((= :real -> real -> bool)
   ($3 $0)) (& 0)))))) (((diffl (\(x :real). ((/ ($5 $0)) ($4 $0))))
   ((/ ((|-| ((|*| $2) ($3 $0))) ((|*| $1) ($4 $0)))) ((pow ($3 $0))
   2))) $0))))))))))))`),
 ((DIFF_INV),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((diffl $2)
   $1) $0)) (~ (((= :real -> real -> bool) ($2 $0)) (& 0))))) (((diffl
   (\(x :real). (inv ($3 $0)))) (-- ((/ $1) ((pow ($2 $0)) 2))))
   $0))))))))`),
 ((DIFF_XM1),
  [],
  `((! :(real -> bool) -> bool) (\(x :real). ((==> (~
   (((= :real -> real -> bool) $0) (& 0)))) (((diffl (\(x :real). (inv
   $0))) (-- ((pow (inv $0)) 2))) $0))))`),
 ((DIFF_POW),
  [],
  `((! :(num -> bool) -> bool) (\(n :num).
   ((! :(real -> bool) -> bool) (\(x :real). (((diffl (\(x :real).
   ((pow $0) $2))) ((|*| (& $1)) ((pow $0) ((- $1) 1)))) $0)))))`),
 ((DIFF_X),
  [],
  `((! :(real -> bool) -> bool) (\(x :real). (((diffl (\(x :real).
   $0)) (& 1)) $0)))`),
 ((DIFF_CHAIN),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((diffl $4)
   $2) ($3 $0))) (((diffl $3) $1) $0))) (((diffl (\(x :real). ($5 ($4
   $0)))) ((|*| $2) $1)) $0))))))))))))`),
 ((DIFF_SUB),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((diffl $4)
   $2) $0)) (((diffl $3) $1) $0))) (((diffl (\(x :real). ((|-| ($5
   $0)) ($4 $0)))) ((|-| $2) $1)) $0))))))))))))`),
 ((DIFF_NEG),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> (((diffl $2) $1)
   $0)) (((diffl (\(x :real). (-- ($3 $0)))) (-- $1)) $0))))))))`),
 ((DIFF_CMUL),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(c :real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> (((diffl $3) $1)
   $0)) (((diffl (\(x :real). ((|*| $3) ($4 $0)))) ((|*| $2) $1))
   $0))))))))))`),
 ((DIFF_MUL),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((diffl $4)
   $2) $0)) (((diffl $3) $1) $0))) (((diffl (\(x :real). ((|*| ($5
   $0)) ($4 $0)))) ((|+| ((|*| $2) ($3 $0))) ((|*| $1) ($4 $0))))
   $0))))))))))))`),
 ((DIFF_ADD),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((diffl $4)
   $2) $0)) (((diffl $3) $1) $0))) (((diffl (\(x :real). ((|+| ($5
   $0)) ($4 $0)))) ((|+| $2) $1)) $0))))))))))))`),
 ((DIFF_CONST),
  [],
  `((! :(real -> bool) -> bool) (\(k :real).
   ((! :(real -> bool) -> bool) (\(x :real). (((diffl (\(x :real).
   $2)) (& 0)) $0)))))`),
 ((IVT2),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real).
   ((! :(real -> bool) -> bool) (\(y :real). ((==> ((/\ ((|<=| $2)
   $1)) ((/\ ((/\ ((|<=| ($3 $1)) $0)) ((|<=| $0) ($3 $2))))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $3)
   $0)) ((|<=| $0) $2))) ((contl $4) $0)))))))
   ((? :(real -> bool) -> bool) (\(x :real). ((/\ ((|<=| $3) $0)) ((/\
   ((|<=| $0) $2)) (((= :real -> real -> bool) ($4 $0))
   $1))))))))))))))`),
 ((IVT),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(a :real).
   ((! :(real -> bool) -> bool) (\(b :real).
   ((! :(real -> bool) -> bool) (\(y :real). ((==> ((/\ ((|<=| $2)
   $1)) ((/\ ((/\ ((|<=| ($3 $2)) $0)) ((|<=| $0) ($3 $1))))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<=| $3)
   $0)) ((|<=| $0) $2))) ((contl $4) $0)))))))
   ((? :(real -> bool) -> bool) (\(x :real). ((/\ ((|<=| $3) $0)) ((/\
   ((|<=| $0) $2)) (((= :real -> real -> bool) ($4 $0))
   $1))))))))))))))`),
 ((CONT_COMPOSE),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((contl $2)
   $0)) ((contl $1) ($2 $0)))) ((contl (\(x :real). ($2 ($3 $0))))
   $0))))))))`),
 ((CONT_DIV),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((contl $2)
   $0)) ((/\ ((contl $1) $0)) (~ (((= :real -> real -> bool) ($1 $0))
   (& 0)))))) ((contl (\(x :real). ((/ ($3 $0)) ($2 $0))))
   $0))))))))`),
 ((CONT_SUB),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((contl $2)
   $0)) ((contl $1) $0))) ((contl (\(x :real). ((|-| ($3 $0)) ($2
   $0)))) $0))))))))`),
 ((CONT_INV),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((contl $1)
   $0)) (~ (((= :real -> real -> bool) ($1 $0)) (& 0))))) ((contl
   (\(x :real). (inv ($2 $0)))) $0))))))`),
 ((CONT_NEG),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((contl $1) $0))
   ((contl (\(x :real). (-- ($2 $0)))) $0))))))`),
 ((CONT_MUL),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((contl $2)
   $0)) ((contl $1) $0))) ((contl (\(x :real). ((|*| ($3 $0)) ($2
   $0)))) $0))))))))`),
 ((CONT_ADD),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((contl $2)
   $0)) ((contl $1) $0))) ((contl (\(x :real). ((|+| ($3 $0)) ($2
   $0)))) $0))))))))`),
 ((CONT_CONST),
  [],
  `((! :(real -> bool) -> bool) (\(k :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((contl (\(x :real). $2))
   $0)))))`),
 ((DIFF_CARAT),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real).
   (((= :bool -> bool -> bool) (((diffl $2) $1) $0))
   ((? :((real -> real) -> bool) -> bool) (\(g :real -> real). ((/\
   ((! :(real -> bool) -> bool) (\(z :real).
   (((= :real -> real -> bool) ((|-| ($4 $0)) ($4 $2))) ((|*| ($1 $0))
   ((|-| $0) $2)))))) ((/\ ((contl $0) $1))
   (((= :real -> real -> bool) ($0 $1)) $2))))))))))))`),
 ((CONTL_LIM),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(x :real).
   (((= :bool -> bool -> bool) ((contl $1) $0)) (((-> $1) ($1 $0))
   $0))))))`),
 ((DIFF_CONT),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> (((diffl $2) $1)
   $0)) ((contl $2) $0))))))))`),
 ((DIFF_UNIQ),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((diffl $3)
   $2) $0)) (((diffl $3) $1) $0))) (((= :real -> real -> bool) $2)
   $1))))))))))`),
 ((LIM_TRANSFORM),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(x0 :real).
   ((! :(real -> bool) -> bool) (\(l :real). ((==> ((/\ (((->
   (\(x :real). ((|-| ($4 $0)) ($3 $0)))) (& 0)) $1)) (((-> $2) $0)
   $1))) (((-> $3) $0) $1))))))))))`),
 ((LIM_EQUAL),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x0 :real). ((==>
   ((! :(real -> bool) -> bool) (\(x :real). ((==> (~
   (((= :real -> real -> bool) $0) $1))) (((= :real -> real -> bool)
   ($4 $0)) ($3 $0)))))) (((= :bool -> bool -> bool) (((-> $3) $1)
   $0)) (((-> $2) $1) $0)))))))))))`),
 ((LIM_UNIQ),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((-> $3) $2)
   $0)) (((-> $3) $1) $0))) (((= :real -> real -> bool) $2)
   $1))))))))))`),
 ((LIM_X),
  [],
  `((! :(real -> bool) -> bool) (\(x0 :real). (((-> (\(x :real). $0))
   $0) $0)))`),
 ((LIM_NULL),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real).
   (((= :bool -> bool -> bool) (((-> $2) $1) $0)) (((-> (\(x :real).
   ((|-| ($3 $0)) $2))) (& 0)) $0))))))))`),
 ((LIM_DIV),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((-> $4) $2)
   $0)) ((/\ (((-> $3) $1) $0)) (~ (((= :real -> real -> bool) $1) (&
   0)))))) (((-> (\(x :real). ((/ ($5 $0)) ($4 $0)))) ((/ $2) $1))
   $0))))))))))))`),
 ((LIM_SUB),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((-> $4) $2)
   $0)) (((-> $3) $1) $0))) (((-> (\(x :real). ((|-| ($5 $0)) ($4
   $0)))) ((|-| $2) $1)) $0))))))))))))`),
 ((LIM_INV),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((-> $2) $1)
   $0)) (~ (((= :real -> real -> bool) $1) (& 0))))) (((->
   (\(x :real). (inv ($3 $0)))) (inv $1)) $0))))))))`),
 ((LIM_NEG),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(x :real).
   (((= :bool -> bool -> bool) (((-> $2) $1) $0)) (((-> (\(x :real).
   (-- ($3 $0)))) (-- $1)) $0))))))))`),
 ((LIM_MUL),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((-> $4) $2)
   $0)) (((-> $3) $1) $0))) (((-> (\(x :real). ((|*| ($5 $0)) ($4
   $0)))) ((|*| $2) $1)) $0))))))))))))`),
 ((LIM_ADD),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :((real -> real) -> bool) -> bool) (\(g :real -> real).
   ((! :(real -> bool) -> bool) (\(l :real).
   ((! :(real -> bool) -> bool) (\(m :real).
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ (((-> $4) $2)
   $0)) (((-> $3) $1) $0))) (((-> (\(x :real). ((|+| ($5 $0)) ($4
   $0)))) ((|+| $2) $1)) $0))))))))))))`),
 ((LIM_CONST),
  [],
  `((! :(real -> bool) -> bool) (\(k :real).
   ((! :(real -> bool) -> bool) (\(x :real). (((-> (\(x :real). $2))
   $1) $0)))))`),
 ((LIM),
  [],
  `((! :((real -> real) -> bool) -> bool) (\(f :real -> real).
   ((! :(real -> bool) -> bool) (\(y0 :real).
   ((! :(real -> bool) -> bool) (\(x0 :real).
   (((= :bool -> bool -> bool) (((-> $2) $1) $0))
   ((! :(real -> bool) -> bool) (\(e :real). ((==> ((|<| (& 0)) $0))
   ((? :(real -> bool) -> bool) (\(d :real). ((/\ ((|<| (& 0)) $0))
   ((! :(real -> bool) -> bool) (\(x :real). ((==> ((/\ ((|<| (& 0))
   (abs ((|-| $0) $3)))) ((|<| (abs ((|-| $0) $3))) $1))) ((|<| (abs
   ((|-| ($5 $0)) $4))) $2)))))))))))))))))`)]
