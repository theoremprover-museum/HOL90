head	1.1;
access;
symbols
	HOL97:1.1.2.1.0.2
	bpHOL97:1.1.2.1
	hol90_9_alpha:1.1.2.1
	hol90_pre8_for_multiple_compilers:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	96.08.23.09.15.09;	author rjb;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.08.23.09.15.10;	author rjb;	state Exp;
branches
	1.1.2.1.2.1;
next	;

1.1.2.1.2.1
date	97.06.11.18.22.34;	author kxs;	state Exp;
branches;
next	1.1.2.1.2.2;

1.1.2.1.2.2
date	97.07.11.19.39.08;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file arith_cons.sig was initially added on branch hol90_pre8_for_multiple_compilers.
@
text
@@


1.1.2.1
log
@Initial version.
@
text
@a0 55
signature NUMBER_HOL_TYPE =
sig
   type num
   val num_ty : Term.Type.hol_type
   val term_of_num : num -> Term.term
   val num_of_term : Term.term -> num
   val plus : string
   val minus : string
   val mult : string
   val less : string
   val leq : string
   val great : string
   val geq : string
   val suc : string
   val pre : string
   val zero : string
   val one : string
end;

signature ARITH_CONS =
sig
   structure NumberHOLType : NUMBER_HOL_TYPE
   val mk_plus : term * term -> term
   val mk_minus : term * term -> term
   val mk_mult : term * term -> term
   val dest_plus : term -> term * term
   val dest_minus : term -> term * term
   val dest_mult : term -> term * term
   val is_plus : term -> bool
   val is_minus : term -> bool
   val is_mult : term -> bool
   val mk_less : term * term -> term
   val mk_leq : term * term -> term
   val mk_great : term * term -> term
   val mk_geq : term * term -> term
   val dest_less : term -> term * term
   val dest_leq : term -> term * term
   val dest_great : term -> term * term
   val dest_geq : term -> term * term
   val is_less : term -> bool
   val is_leq : term -> bool
   val is_great : term -> bool
   val is_geq : term -> bool
   val is_num_reln : term -> bool
   val mk_suc : term -> term
   val dest_suc : term -> term
   val is_suc : term -> bool
   val mk_pre : term -> term
   val dest_pre : term -> term
   val is_pre : term -> bool
   val is_num_const : term -> bool
   val is_zero : term -> bool
   val is_num_var : term -> bool
   val mk_num_var : string -> term
end;
@


1.1.2.1.2.1
log
@Changes to accomodate move to SML/NJ 109.26
@
text
@d3 1
a3 1
   eqtype num
@


1.1.2.1.2.2
log
@Making the library CM friendly.
@
text
@d4 3
a6 4
   
   val num_ty : CoreHol.Type.hol_type
   val term_of_num : num -> CoreHol.Term.term
   val num_of_term : CoreHol.Term.term -> num
a21 4
(*   type term sharing type term = CoreHol.Term.term *)

   type term

@
