head	1.4;
access;
symbols
	HOL97:1.4.0.4
	bpHOL97:1.4
	hol90_9_alpha:1.4
	hol90_pre8_for_multiple_compilers:1.4.0.2
	hol90_pre8_after_donalds_separate_compilation_changes:1.3
	hol90_8_after_merging_Konrad_Elsa:1.2
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.4
date	95.11.15.13.24.21;	author rjb;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	95.10.31.13.56.09;	author drs1004;	state Exp;
branches;
next	1.2;

1.2
date	95.10.17.17.06.53;	author drs1004;	state Exp;
branches;
next	1.1;

1.1
date	95.10.16.13.30.02;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.30.02;	author rjb;	state Exp;
branches;
next	;

1.4.4.1
date	97.06.11.17.23.55;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.4
log
@The HOL90 sources have been changed to allow for the use of different
Standard ML compilers (possibly simultaneously).

 * Many files in "src/0" changed to make them more portable across different
   ML compilers. Various additions have been made to the Portable structure
   and files changed to access identifiers in the Portable structure rather
   than from the global environment. Worthy of special note are:

   - The pointer equality used in "src/0/term.sml" has been made into a
     function in the Portable structure.

   - The ML-Lex and ML-Yacc files for the various parsers have been changed
     to access the Portable structure. Both the source files and the SML
     produced from them have been changed but I have not verified that the
     source files would reproduce the new SML versions if ML-Lex and ML-Yacc
     were to be rerun on them. The changes involve some hacks that exploit the
     way ML-Lex and ML-Yacc work. See the sources for details.

R.J.Boulton, 15th November 1995.
@
text
@(* ===================================================================== *)
(* FILE          : help.sml                                              *)
(* DESCRIPTION   : The online help facility. I have copied the sed script*)
(*                 from hol88.                                           *)
(*                                                                       *)
(* AUTHOR        : (c) Konrad Slind, University of Calgary               *)
(* DATE          : December 13, 1991                                     *)
(* ===================================================================== *)

functor HELP() : Help_sig =
struct

fun HELP_ERR{function,message} = 
    Exception.HOL_ERR{origin_structure = "Help",
		      origin_function = function,
		      message = message}

fun find_file s = 
   let fun find [] = raise (HELP_ERR{function = "find_file",
                     message = "Unable to find documentation for \""^s^"\"\n"})
         | find (h::t) = 
             let val fname = h^s^".doc"
             in if (Lib.file_exists_for_reading fname)
                then fname
                else find_file s t
             end
   in find
   end;

fun helper path s = 
   ( (* sml/nj 93 System.Unsafe.CInterface.system *)
     (* sml/nj 102 System.system *)
      Portable.system
        (Portable.String.concat
	 ["/bin/sed -f ",
	  !Globals.HOLdir, "tools/", "doc-to-help.sed ",
	  "'", (find_file s path), "'",
	  " | ",
	  !Globals.output_help, "\n"]);
     ())
   handle e as Exception.HOL_ERR _ => Exception.Raise e
(*        | Portable.SysError(i,m) =>
	      Exception.Raise (HELP_ERR{function = "help",
             message = "System error: unable to sed the documentation for \""^
                       s^"\" because of: "^m^"\n"});*)
          | _ => Exception.Raise (HELP_ERR{function = "help",
             message = "System error: unable to sed the documentation for \""^
                       s^"\".\n"});

fun help s = helper (!Globals.help_path) s;


(* If you don't have a lot of memory, the above version of help may not
   spawn a process, i.e., will fail, while this version will always work.
*)
fun help1 s =
   let val instr = open_in (find_file s (!Globals.help_path))
   in
     while (not (end_of_stream instr))
     do output(std_out, Portable.input_line instr);
     close_in instr
   end;

end; (* HELP *)
@


1.4.4.1
log
@Removed files are parse files and portability files that have
effectively been moved elsewhere.

Modified files are up to date for ML 109.26.
@
text
@d10 1
a10 1
structure Help : Help_sig =
a12 2
open Portable;

d19 2
a20 2
   let fun find [] = raise HELP_ERR{function = "find_file",
                     message = "Unable to find documentation for \""^s^"\"\n"}
d23 3
a25 2
             in if (Lib.file_exists_for_reading fname) then fname 
                 else find_file s t
d31 3
a33 1
    ( Portable.system
d42 4
d53 3
a55 4
(*---------------------------------------------------------------------------
 * If you don't have a lot of memory, the above version of help may not
 * spawn a process, i.e., will fail, while this version will always work.
 *---------------------------------------------------------------------------*)
@


1.3
log
@First phase of hol90.8 development.  hol90 now compiles using NJSML-CM
108.5, with separate compilation of libraries.  System dependencies
have been isolated in the makefiles and "portable.sml".

This involved a large number of enhancments to the source files,
most of which are documented in the 7.changes file (or will be shortly).
See also the correpsonding email corrspondence between RJB, KLS, TFM,
JRH and DRS that happened during this development.
@
text
@d60 1
a60 1
     do output(std_out, input_line instr);
@


1.2
log
@Keeping you up to date:

I'm about to do a checkin of elsa's modifications to the hol90.7
sources to create her hol90.pre8.  To recap what I've done:
	- I checked out hol90 (in /usr/groups/hol/drs1004/hol90)
		cvs co hol90
	  (Well, to be honest, I only checked out those
	  parts of hol90 I knew I'd be changing, e.g. not the
	  Manual, and only parts of the library.  Checking out the
	  entire source takes a while, mainly due to the enormous number
	  of help files.  The limiting factor is files/second, which
         runs at around 5 when CVS is working on nfs over a network, not
         KB/second, which you might at first think it would be).

	- By doing a recursive diff between Elsa's source and the
	hol90.7 source I found all the changes Elsa had made to
	source files.  I copied relevant files from Elsa's source
	into my checked out version.  The only new files were
		- the sml_system files in src/0
		- some make scripts in src/.
	Changed files were in:
		src/{0,1,2,3}
		library/arith/src/thm_convs.sml
		library/list/src/list_conv1.sml
		library/num/src/num_lib.sml
		library/prog_logic/src/halts_logic.sml
		library/prog_logic/src/translation.sml
		library/prog_logic/theories/src/mk_halts.sml
		library/real/theories/src/Make
		library/real/theories/src/equiv.sml
		library/real/theories/src/seq.sml
		library/reduce/src/arithconv.sml
		library/string/src/string_conv.sml
		library/unity/theories/src/aux_definitions.sml
		library/word/theories/src/*

	- I will now commit these changes, with this email as the log message.
		cvs commit

	- Tomorrow I will get this version compiling
	with NJSML 108 (I will probably add
	the files to enable the NJSML compilation manager to make
	this easier), then check those changes in.  I think it's
	good to get things in a working state.
@
text
@d10 1
a10 2
functor HELP(
	     structure Globals : Globals_sig) : Help_sig =
d33 2
a34 2
      Sml_system.system
        (Sml_system.String.concat
d42 1
a42 1
(*        | Sml_system.SysError(i,m) =>
@


1.1
log
@Initial revision
@
text
@d10 2
a11 1
functor HELP(structure Globals : Globals_sig) : Help_sig =
d14 4
a17 3
fun HELP_ERR{function,message} = HOL_ERR{origin_structure = "Help",
					 origin_function = function,
					 message = message}
d34 7
a40 6
      System.Unsafe.CInterface.system
        (implode ["/bin/sed -f ",
                  !Globals.HOLdir, "tools/", "doc-to-help.sed ",
                  "'", (find_file s path), "'",
                  " | ",
                  !Globals.output_help, "\n"]);
d42 3
a44 3
   handle e as HOL_ERR _ => Raise e
        | System.Unsafe.CInterface.SysError(i,m) =>
	      Raise (HELP_ERR{function = "help",
d46 4
a49 1
                       s^"\" because of: "^m^"\n"});
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
