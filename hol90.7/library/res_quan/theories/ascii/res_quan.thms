thid = (res_quan, 783977024, 523186)
axioms = []
definitions = []
theorems =
[((RESQ_EXISTS_REORDER),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(Q :'b -> bool).
   ((! :(('a -> 'b -> bool) -> bool) -> bool) (\(R :'a -> 'b -> bool).
   (((= :bool -> bool -> bool)
   (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   (((RES_EXISTS :('b -> bool) -> ('b -> bool) -> bool) $2) (\(j :'b).
   (($2 $1) $0))))))
   (((RES_EXISTS :('b -> bool) -> ('b -> bool) -> bool) $1) (\(j :'b).
   (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool) $3) (\(i :'a).
   (($2 $0) $1))))))))))))`),
 ((RESQ_EXISTS_UNIQUE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :('a -> bool) -> bool) (\(j :'a). (((= :bool -> bool -> bool)
   (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool)
   ((= :'a -> 'a -> bool) $0)) (\(i :'a). ($2 $0)))) ($1 $0))))))`),
 ((RESQ_DISJ_EXISTS_DIST),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(R :'a -> bool).
   (((= :bool -> bool -> bool)
   (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool) (\(i :'a).
   ((\/ ($3 $0)) ($2 $0)))) (\(i :'a). ($1 $0)))) ((\/
   (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   ($1 $0)))) (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool) $1)
   (\(i :'a). ($1 $0)))))))))))`),
 ((RESQ_EXISTS_DISJ_DIST),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(R :'a -> bool).
   (((= :bool -> bool -> bool)
   (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   ((\/ ($2 $0)) ($1 $0))))) ((\/
   (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   ($2 $0)))) (((RES_EXISTS :('a -> bool) -> ('a -> bool) -> bool) $2)
   (\(i :'a). ($1 $0)))))))))))`),
 ((RESQ_FORALL_REORDER),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(Q :'b -> bool).
   ((! :(('a -> 'b -> bool) -> bool) -> bool) (\(R :'a -> 'b -> bool).
   (((= :bool -> bool -> bool)
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   (((RES_FORALL :('b -> bool) -> ('b -> bool) -> bool) $2) (\(j :'b).
   (($2 $1) $0))))))
   (((RES_FORALL :('b -> bool) -> ('b -> bool) -> bool) $1) (\(j :'b).
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $3) (\(i :'a).
   (($2 $0) $1))))))))))))`),
 ((RESQ_FORALL_FORALL),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> 'b -> bool) -> bool) -> bool) (\(R :'a -> 'b -> bool).
   ((! :('b -> bool) -> bool) (\(x :'b). (((= :bool -> bool -> bool)
   ((! :('b -> bool) -> bool) (\(x :'b).
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $3) (\(i :'a).
   (($3 $0) $1))))))
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   ((! :('b -> bool) -> bool) (\(x :'b). (($3 $1) $0))))))))))))`),
 ((RESQ_FORALL_UNIQUE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :('a -> bool) -> bool) (\(j :'a). (((= :bool -> bool -> bool)
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool)
   ((= :'a -> 'a -> bool) $0)) (\(i :'a). ($2 $0)))) ($1 $0))))))`),
 ((RESQ_FORALL_DISJ_DIST),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(R :'a -> bool).
   (((= :bool -> bool -> bool)
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) (\(i :'a).
   ((\/ ($3 $0)) ($2 $0)))) (\(i :'a). ($1 $0)))) ((/\
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   ($1 $0)))) (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $1)
   (\(i :'a). ($1 $0)))))))))))`),
 ((RESQ_FORALL_CONJ_DIST),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(R :'a -> bool).
   (((= :bool -> bool -> bool)
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   ((/\ ($2 $0)) ($1 $0))))) ((/\
   (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $2) (\(i :'a).
   ($2 $0)))) (((RES_FORALL :('a -> bool) -> ('a -> bool) -> bool) $2)
   (\(i :'a). ($1 $0)))))))))))`)]
