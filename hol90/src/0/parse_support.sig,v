head	1.4;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.4
date	96.02.08.00.31.38;	author drs1004;	state Exp;
branches;
next	1.3;

1.3
date	96.01.04.13.45.31;	author drs1004;	state Exp;
branches;
next	1.2;

1.2
date	95.12.18.11.34.55;	author drs1004;	state Exp;
branches;
next	1.1;

1.1
date	95.10.16.13.29.55;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.29.55;	author rjb;	state Exp;
branches
	1.1.1.1.6.1;
next	;

1.1.1.1.6.1
date	97.06.11.17.24.21;	author kxs;	state Exp;
branches;
next	1.1.1.1.6.2;

1.1.1.1.6.2
date	97.07.10.20.33.33;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.4
log
@New theory mechanism, by Donald Syme, and many other enhancements.
@
text
@signature Parse_support_sig =
sig

    structure Preterm : Preterm_sig	

    datatype arg = Rec_occ 
      | Hty of Preterm.pretype
    datatype parse = 
	PTM of Preterm.preterm
      | PTY of Preterm.pretype
      | TY_SPEC of {ty_name: string,
		    clauses: {constructor:string, 
			      args:arg list} list}
    type binding;
    type preterm sharing type preterm = Preterm.preterm;
    type pretype sharing type pretype = Preterm.pretype;
    type term sharing type term = Preterm.Term.term;
						  
    val make_aq : term -> preterm
    val make_binding : string -> binding
    val make_aq_binding : term -> binding
    val make_atom: string -> preterm
    val make_string: string -> preterm
    val list_make_comb : preterm list -> preterm
    val make_constrained : preterm -> pretype -> preterm
    val bind_term : string -> binding list -> preterm ->  preterm
    val bind_restr_term : string -> binding list
	-> preterm -> preterm
	-> preterm
    val make_vstruct : binding list -> binding
    val make_constrained_vstruct : binding -> pretype -> binding
    val make_let : (binding list * preterm) list -> preterm -> preterm
    val make_list : preterm list -> preterm
    val make_set : preterm list -> preterm
    val make_set_abs : preterm * preterm -> preterm
    val make_atomic_type : string -> pretype
    val make_type_app : (string * (pretype list)) -> pretype
	
    val is_binder : string -> bool
    val extract_type_antiq : term -> pretype

(*-------------------------------------------------------------------
 * Precedence parsing
 *------------------------------------------------------------------*)

val prec_parse : preterm list -> preterm

(*-------------------------------------------------------------------
 * For parsing datatype declarations
 *------------------------------------------------------------------*)

val make_type_clause: {constructor:string, 
                       args:pretype list} 
                      -> {constructor:string, args : arg list}

val rec_occ : pretype

end;
@


1.3
log
@Fixed types, pretypes, fixities, parsing.
@
text
@a2 2
type preterm_in_env
type binder_in_env
d4 1
a4 1
structure Preterm : Preterm_sig
d6 35
a40 33
datatype arg = Rec_occ 
             | Hty of Preterm.pretype
datatype parse = 
   PTM of Preterm.preterm
 | PTY of Preterm.pretype
 | TY_SPEC of {ty_name: string,
               clauses: {constructor:string, 
                         args:arg list} list}
val make_preterm : preterm_in_env -> parse
val make_aq : Preterm.Term.term -> preterm_in_env
val make_binding_occ : string -> binder_in_env
val make_aq_binding_occ : Preterm.Term.term -> binder_in_env
val make_atom: string -> preterm_in_env
val make_string: string -> preterm_in_env
val list_make_comb : preterm_in_env list -> preterm_in_env
val make_constrained : preterm_in_env -> 
                       Preterm.pretype -> preterm_in_env
val bind_term : string -> binder_in_env list -> preterm_in_env -> 
                preterm_in_env
val bind_restr_term : string -> binder_in_env list
                      -> preterm_in_env -> preterm_in_env
                      -> preterm_in_env
val make_vstruct : binder_in_env list -> binder_in_env
val make_constrained_vstruct : binder_in_env -> Preterm.pretype -> 
                               binder_in_env
val make_let : (binder_in_env list * preterm_in_env) list -> preterm_in_env ->
               preterm_in_env
val make_list : preterm_in_env list -> preterm_in_env
val make_set : preterm_in_env list -> preterm_in_env
val make_set_abs : preterm_in_env * preterm_in_env -> preterm_in_env
val make_atomic_type : string -> Preterm.pretype
val make_type_app : (string * (Preterm.pretype list)) -> 
                    Preterm.pretype
a41 3
val is_binder : string -> bool
val extract_type_antiq : Preterm.Term.term -> Preterm.pretype

d46 1
a46 1
val prec_parse : preterm_in_env list -> preterm_in_env
d53 1
a53 1
                       args:Preterm.pretype list} 
d56 1
a56 1
val rec_occ : Preterm.pretype
@


1.2
log
@Preterm and other changes, see 7.changes
@
text
@d9 1
a9 1
             | Hty of Preterm.Term.Type.typ
a40 5
val make_type_clause: {constructor:string, 
                       args:Preterm.pretype list} 
                      -> {constructor:string, args : arg list}
val rec_occ : Preterm.pretype
val prec_parse : preterm_in_env list -> preterm_in_env
d46 7
a52 2
 * Experimental - support for arbitrary fixities specified in preterms
 * These take priority over term fixities.
d55 6
a60 5
val preterm_fixities : unit -> (string * Preterm.Term.fixity) list
val preterm_infix : (string * int) -> unit
val preterm_prefix : string -> unit
val preterm_binder : string -> unit
val preterm_nonfix : string -> unit
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
structure Preterm : Public_preterm_sig
d9 1
a9 1
             | Hty of Preterm.Term.Type.hol_type
d12 1
a12 1
 | TY of Preterm.Term.Type.hol_type
d24 1
a24 1
                       Preterm.Term.Type.hol_type -> preterm_in_env
d31 1
a31 1
val make_constrained_vstruct : binder_in_env -> Preterm.Term.Type.hol_type -> 
d38 3
a40 3
val make_atomic_type : string -> Preterm.Term.Type.hol_type
val make_type_app : (string * (Preterm.Term.Type.hol_type list)) -> 
                    Preterm.Term.Type.hol_type
d42 1
a42 1
                       args:Preterm.Term.Type.hol_type list} 
d44 1
a44 1
val rec_occ : Preterm.Term.Type.hol_type
d48 12
a59 1
val extract_type_antiq : Preterm.Term.term -> Preterm.Term.Type.hol_type
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@


1.1.1.1.6.1
log
@Removed files are parse files and portability files that have
effectively been moved elsewhere.

Modified files are up to date for ML 109.26.
@
text
@a9 1

d16 1
a16 2

val make_preterm : preterm_in_env -> Preterm.preterm
d18 3
a20 6
val make_binding_occ : (int,Preterm.Term.Type.hol_type) istream
                         -> string -> binder_in_env
val make_aq_binding_occ : (int,Preterm.Term.Type.hol_type) istream 
                           -> Preterm.Term.term -> binder_in_env
val make_atom: (int,Preterm.Term.Type.hol_type)istream 
                 -> string -> preterm_in_env
a22 12
val bind_term : string -> binder_in_env list -> preterm_in_env 
                   -> preterm_in_env
val bind_restr_term : (int,Preterm.Term.Type.hol_type) istream
                      -> string 
                      -> binder_in_env list
                      -> preterm_in_env 
                      -> preterm_in_env
                      -> preterm_in_env
val make_vstruct : (int,Preterm.Term.Type.hol_type) istream
                    -> binder_in_env list -> binder_in_env
val make_constrained_vstruct 
  : binder_in_env -> Preterm.Term.Type.hol_type -> binder_in_env
d25 14
a38 11
val make_let : (int,Preterm.Term.Type.hol_type) istream
                -> (binder_in_env list * preterm_in_env) list
                  -> preterm_in_env -> preterm_in_env
val make_list : (int,Preterm.Term.Type.hol_type) istream
                  -> preterm_in_env list -> preterm_in_env
val make_set : (int,Preterm.Term.Type.hol_type) istream
                -> preterm_in_env list -> preterm_in_env
val make_set_abs : (int,Preterm.Term.Type.hol_type) istream
                    -> preterm_in_env * preterm_in_env -> preterm_in_env

val make_atomic_type : string * string option -> Preterm.Term.Type.hol_type
a48 1

@


1.1.1.1.6.2
log
@Changes to reflect use of tyvar streams in parsing.
@
text
@d20 1
a20 1
val make_binding_occ : (int,Preterm.Term.Type.hol_type) Lib.istream
d22 1
a22 1
val make_aq_binding_occ : (int,Preterm.Term.Type.hol_type) Lib.istream 
d24 1
a24 1
val make_atom: (int,Preterm.Term.Type.hol_type)Lib.istream 
d30 1
a30 1
val bind_restr_term : (int,Preterm.Term.Type.hol_type) Lib.istream
d36 1
a36 1
val make_vstruct : (int,Preterm.Term.Type.hol_type) Lib.istream
d42 1
a42 1
val make_let : (int,Preterm.Term.Type.hol_type) Lib.istream
d45 1
a45 1
val make_list : (int,Preterm.Term.Type.hol_type) Lib.istream
d47 1
a47 1
val make_set : (int,Preterm.Term.Type.hol_type) Lib.istream
d49 1
a49 1
val make_set_abs : (int,Preterm.Term.Type.hol_type) Lib.istream
@
