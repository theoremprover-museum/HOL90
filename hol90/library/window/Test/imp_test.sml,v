head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.33.17;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.33.17;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@BEGIN_STACK "test" (--`($==>) (A /\ B)`--) [] [];
DO (OPEN_WIN [RATOR,RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`B:bool`--)],(--`A ==> C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (A /\ B)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`A:bool`--)],(--`B ==> C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (A ==> B)`--) [] [];
DO (OPEN_WIN [RATOR,RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`~B`--)],(--`A <== C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (A ==> B)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`A:bool`--)],(--`B ==> C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (A <== B)`--) [] [];
DO (OPEN_WIN [RATOR,RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`B:bool`--)],(--`A ==> C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (A <== B)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`~A`--)],(--`B <== C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (A \/ B)`--) [] [];
DO (OPEN_WIN [RATOR,RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`~B`--)],(--`A ==> C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (A \/ B)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`~A`--)],(--`B ==> C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (~A)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([],(--`A <== B`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (!v:'a.A v)`--) [] [];
DO (OPEN_WIN [RAND,BODY]);
DO (TRANSFORM_WIN (mk_thm([],(--`(A (v:'a)) ==> B v`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($==>) (?v:'a.A v)`--) [] [];
DO (OPEN_WIN [RAND,BODY]);
DO (TRANSFORM_WIN (mk_thm([],(--`(A (v:'a)) ==> B v`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (A /\ B)`--) [] [];
DO (OPEN_WIN [RATOR,RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`B:bool`--)],(--`A <== C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (A /\ B)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`A:bool`--)],(--`B <== C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (A ==> B)`--) [] [];
DO (OPEN_WIN [RATOR,RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`~B`--)],(--`A ==> C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (A ==> B)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`A:bool`--)],(--`B <== C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (A <== B)`--) [] [];
DO (OPEN_WIN [RATOR,RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`B:bool`--)],(--`A <== C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (A <== B)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`~A`--)],(--`B ==> C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (A \/ B)`--) [] [];
DO (OPEN_WIN [RATOR,RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`~B`--)],(--`A <== C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (A \/ B)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([(--`~A`--)],(--`B <== C`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (~A)`--) [] [];
DO (OPEN_WIN [RAND]);
DO (TRANSFORM_WIN (mk_thm([],(--`A ==> B`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (!v:'a.A v)`--) [] [];
DO (OPEN_WIN [RAND,BODY]);
DO (TRANSFORM_WIN (mk_thm([],(--`(A (v:'a)) <== B v`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";

BEGIN_STACK "test" (--`($<==) (?v:'a.A v)`--) [] [];
DO (OPEN_WIN [RAND,BODY]);
DO (TRANSFORM_WIN (mk_thm([],(--`(A (v:'a)) <== B v`--))));
DO CLOSE_WIN;
WIN_THM ();
END_STACK "test";
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
