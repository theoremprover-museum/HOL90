head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.34.47;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.34.47;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC free_in

\TYPE {free_in : (term -> term -> bool)}

\SYNOPSIS
Tests if one term is free in another.

\DESCRIBE
When applied to two terms {t1} and {t2}, the function {free_in} returns
{true} if {t1} is free in {t2}, and {false} otherwise. It is not necessary
that {t1} be simply a variable.

\FAILURE
Never fails.

\EXAMPLE
In the following example {free_in} returns {false} because the {x} in {SUC x}
in the second term is bound:
{
   #free_in "SUC x" "!x. SUC x = x + 1";;
   false : bool
}
\noindent whereas the following call returns {true} because the first instance
of {x} in the second term is free, even though there is also a bound instance:
{
   #free_in "x:bool" "x /\ (?x. x=T)";;
   true : bool
}
\SEEALSO
frees, freesl, thm_frees.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
