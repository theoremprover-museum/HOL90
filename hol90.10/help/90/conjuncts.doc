\DOC conjuncts

\TYPE {Compat.conjuncts : term -> term list}

\SYNOPSIS
Iteratively splits conjunctions into a list of conjuncts.

\DESCRIBE

Found in the hol88 library. {conjuncts (--`t1 /\ ... /\ tn`--)} 
returns {[t1,...,tn]}. The argument term may be any tree of conjunctions. 
It need not have the form 

    {--`t1 /\ (t2 /\ ( ... /\ tn)...)`--}.

A term that is not a conjunction is simply returned as the sole element
of a list. Note that
{
   conjuncts(list_mk_conj([t1,...,tn]))
}
\noindent will not return {[t1,...,tn]} if any of {t1},...,{tn} are
conjunctions.

\FAILURE
Never fails. Unless, that is, the library hol88 has not bee loaded

\EXAMPLE
{
  - list_mk_conj [(--`a /\ b`--),(--`c /\ d`--),(--`e /\ f`--)];
  (--`(a /\ b) /\ (c /\ d) /\ e /\ f`--) : term

  - conjuncts it,
  [(--`a`--),(--`b`--),(--`c`--),(--`d`--),(--`e`--),(--`f`--)] : term list

  - list_mk_conj it,
  (--`a /\ b /\ c /\ d /\ e /\ f`--) : term

  - conjuncts (--`1`--);
  [--`1`--] : term list
}
\COMMENTS
{conjuncts} is not in hol90. There, somewhat misleadingly, it is called
{strip_conj}, in order to be consistent with all the other {strip_}
routines. Because {conjuncts} splits both the left and right sides of a
conjunction, this operation is not the inverse of {list_mk_conj}. It may
be useful to introduce {list_dest_conj} for splitting only the right
tails of a conjunction.

\SEEALSO
list_mk_conj, dest_conj.

\ENDDOC
