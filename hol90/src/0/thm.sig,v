head	1.5;
access;
symbols
	HOL97:1.3.0.4
	bpHOL97:1.3
	hol90_9_alpha:1.3
	hol90_pre8_for_multiple_compilers:1.3.0.2
	hol90_pre8_after_donalds_separate_compilation_changes:1.3
	hol90_8_after_merging_Konrad_Elsa:1.3
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.5
date	96.02.08.00.32.16;	author drs1004;	state Exp;
branches;
next	1.4;

1.4
date	95.12.18.11.35.29;	author drs1004;	state Exp;
branches;
next	1.3;

1.3
date	95.10.18.16.37.17;	author drs1004;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	95.10.17.17.07.31;	author drs1004;	state Exp;
branches;
next	1.1;

1.1
date	95.10.16.13.29.58;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.29.58;	author rjb;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	95.10.17.18.43.10;	author drs1004;	state Exp;
branches;
next	;

1.3.4.1
date	97.06.11.17.24.45;	author kxs;	state Exp;
branches;
next	1.3.4.2;

1.3.4.2
date	97.07.11.15.05.37;	author kxs;	state Exp;
branches;
next	1.3.4.3;

1.3.4.3
date	98.02.23.20.54.56;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.5
log
@New theory mechanism, by Donald Syme, and many other enhancements.
@
text
@(* ===================================================================== *)
(* FILE          : thm.sig                                               *)
(* DESCRIPTION   : Signature for the "abstract data type" of theorems.   *)
(*                 Most of the inference rules have been translated from *)
(*                 hol88.                                                *)
(*                                                                       *)
(* AUTHORS       : (c) Mike Gordon, University of Cambridge              *)
(*                     Konrad Slind, University of Calgary               *)
(* DATE          : September 10, 1991                                    *)
(* ===================================================================== *)


signature Thm_sig =
sig
  structure Term : Public_term_sig
  eqtype thm

  (* Counting theorem production *)
  val reset_thm_count : unit -> unit
  (* Toggles switch that says whether to count inferences or not. *)
  val counting_thms : bool -> unit
  val thm_count : unit -> {ASSUME : int, REFL : int, BETA_CONV : int,
                           SUBST : int,  ABS : int,   DISCH : int,
                           MP : int, INST_TYPE : int, drule : int,
                           definition : int, axiom : int,
                           from_disk : int, valid_tac : int, other : int}

  val hyp : thm -> Term.term list
  val concl : thm -> Term.term
  val dest_thm : thm -> (Term.term list * Term.term)
  val thm_free_vars : thm -> Term.term list
  val hyp_union : thm list -> Term.term list
  val pp_thm : PP.ppstream -> thm -> unit
  val thm_to_string : thm -> string
  val print_thm : thm -> unit

  (* The primitive rules of inference *)
  val ASSUME    : Term.term -> thm
  val REFL      : Term.term -> thm
  val BETA_CONV : Term.term -> thm
  val SUBST     : {var:Term.term, thm:thm} list -> Term.term -> thm -> thm
  val ABS       : Term.term -> thm -> thm
  val INST_TYPE : Term.Type.hol_type Lib.subst -> thm -> thm
  val DISCH     : Term.term -> thm -> thm
  val MP        : thm -> thm -> thm

  val mk_axiom_thm      : (Term.term list * Term.term) -> thm
  val mk_definition_thm : (Term.term list * Term.term) -> thm
  val mk_drule_thm      : (Term.term list * Term.term) -> thm
  val mk_disk_thm       : (Term.term list * Term.term) -> thm
  val mk_tac_thm        : (Term.term list * Term.term) -> thm
  val mk_thm            : (Term.term list * Term.term) -> thm

  (* calling optimize_thm returns the same theorem value but potentially
     reduces the storage used for that theorem.  It may be useful
     to call this for theorems which will become persistent, e.g.
     theorems passed to save_thm.

     Semantics: optimize_thm = I
  *)

  val optimize_thm : thm -> thm

end;
        
@


1.4
log
@Preterm and other changes, see 7.changes
@
text
@d16 1
a16 1
  type thm
@


1.3
log
@Check in after merging in Konrad's changes made after
the release of hol90.7.  This involved creating a side branch
in which to check in Konrad's changes, then merging in that
side branch into the main development (which contains changes
made by Elsa Gunter).

Some other small modification have been made to the source code,
as I begun to try to make this version into a working version:
	- hol90 will now be compiled in an environment were no
structures can be considered opn.  This means many structures
now need "open Lib" and other such commands at their head.
This has not yet been completed, but has been begun.
	- "rotl" and "rotr" have been added to Lib, something
which I just did impulsively.   Documentation files
have also been added in help/90.
@
text
@d53 11
@


1.3.4.1
log
@Removed files are parse files and portability files that have
effectively been moved elsewhere.

Modified files are up to date for ML 109.26.
@
text
@d43 1
a43 1
  val INST_TYPE : Term.Type.hol_type subst -> thm -> thm
@


1.3.4.2
log
@Massive minor changes to close HOL up so as to make it CM-friendly and
some changes to accomodate SML'97.
@
text
@d43 1
a43 1
  val INST_TYPE : Term.Type.hol_type Lib.subst -> thm -> thm
@


1.3.4.3
log
@Addition of inference tracking for Wai Wong. Also, changed hol_pp.extensible
so that it would compile! (It had obsolete paths to pr_list.)
@
text
@a8 1
(*                     Wai Wong, Hong Kong Baptist University            *)
d47 6
a52 25
  val mk_axiom_thm      : Term.term list * Term.term -> thm
  val mk_definition_thm : Term.term list * Term.term -> thm
  val mk_drule_thm      : Term.term list * Term.term -> thm
  val mk_disk_thm       : Term.term list * Term.term -> thm
  val mk_tac_thm        : Term.term list * Term.term -> thm
  val mk_thm            : Term.term list * Term.term -> thm

  (* For proof recording : WW *)
  datatype just_arg = JA_THM of thm
                    | JA_TERM of Term.term
                    | JA_TYPE of Term.Type.hol_type
                    | JA_STRING of string
                    | JA_INT of int
                    | JA_INTLIST of int list
                    | JA_PAIR of just_arg * just_arg

  datatype step = STEP of {Name:string, Just: just_arg list, Thm: thm }
  val record_step : (step -> thm) ref
  val record_proof : bool -> unit
  val suspend_recording : unit -> unit
  val resume_recording : unit -> unit
  val is_recording_proof : unit -> bool

  val note : step * thm -> thm

@


1.2
log
@Keeping you up to date:

I'm about to do a checkin of elsa's modifications to the hol90.7
sources to create her hol90.pre8.  To recap what I've done:
	- I checked out hol90 (in /usr/groups/hol/drs1004/hol90)
		cvs co hol90
	  (Well, to be honest, I only checked out those
	  parts of hol90 I knew I'd be changing, e.g. not the
	  Manual, and only parts of the library.  Checking out the
	  entire source takes a while, mainly due to the enormous number
	  of help files.  The limiting factor is files/second, which
         runs at around 5 when CVS is working on nfs over a network, not
         KB/second, which you might at first think it would be).

	- By doing a recursive diff between Elsa's source and the
	hol90.7 source I found all the changes Elsa had made to
	source files.  I copied relevant files from Elsa's source
	into my checked out version.  The only new files were
		- the sml_system files in src/0
		- some make scripts in src/.
	Changed files were in:
		src/{0,1,2,3}
		library/arith/src/thm_convs.sml
		library/list/src/list_conv1.sml
		library/num/src/num_lib.sml
		library/prog_logic/src/halts_logic.sml
		library/prog_logic/src/translation.sml
		library/prog_logic/theories/src/mk_halts.sml
		library/real/theories/src/Make
		library/real/theories/src/equiv.sml
		library/real/theories/src/seq.sml
		library/reduce/src/arithconv.sml
		library/string/src/string_conv.sml
		library/unity/theories/src/aux_definitions.sml
		library/word/theories/src/*

	- I will now commit these changes, with this email as the log message.
		cvs commit

	- Tomorrow I will get this version compiling
	with NJSML 108 (I will probably add
	the files to enable the NJSML compilation manager to make
	this easier), then check those changes in.  I think it's
	good to get things in a working state.
@
text
@d15 2
a16 2
structure Term : Public_term_sig
type thm
d18 9
a26 17
(* Counting theorem production *)
val reset_thm_count : unit -> unit
(* Toggles switch that says whether to count inferences or not. *)
val counting_thms : bool -> unit
val thm_count : unit -> {ASSUME : int, REFL : int, BETA_CONV : int,
                         SUBST : int,  ABS : int,   DISCH : int,
                         MP : int, INST_TYPE : int, drule : int,
                         definition : int, axiom : int,
                         from_disk : int, valid_tac : int, other : int}
val hyp : thm -> Term.term list
val concl : thm -> Term.term
val dest_thm : thm -> (Term.term list * Term.term)
val thm_free_vars : thm -> Term.term list
val hyp_union : thm list -> Term.term list
val pp_thm : PP.ppstream -> thm -> unit
val thm_to_string : thm -> string
val print_thm : thm -> unit
d28 8
a35 9
(* The primitive rules of inference *)
val ASSUME : Term.term -> thm
val REFL : Term.term -> thm
val BETA_CONV : Term.term -> thm
val SUBST : {var:Term.term, thm:thm} list -> Term.term -> thm -> thm
val ABS : Term.term -> thm -> thm
val INST_TYPE : Term.Type.hol_type Lib.subst -> thm -> thm
val DISCH : Term.term -> thm -> thm
val MP : thm -> thm -> thm
d37 16
a52 6
val mk_axiom_thm : (Term.term list * Term.term) -> thm
val mk_definition_thm  : (Term.term list * Term.term) -> thm
val mk_drule_thm : (Term.term list * Term.term) -> thm
val mk_disk_thm  : (Term.term list * Term.term) -> thm
val mk_tac_thm  : (Term.term list * Term.term) -> thm
val mk_thm : (Term.term list * Term.term) -> thm
d54 1
@


1.1
log
@Initial revision
@
text
@d42 1
a42 1
val INST_TYPE : Term.Type.hol_type subst -> thm -> thm
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@


1.1.1.1.2.1
log
@Konrad's bug fixes up to start of serious
hol90.8 devel;opment.  Checked into branch revision for
later merging with trunk (elsa's work).  See
doc/7.chages for a full description of what's been done.
@
text
@d15 2
a16 2
  structure Term : Public_term_sig
  type thm
d18 17
a34 9
  (* Counting theorem production *)
  val reset_thm_count : unit -> unit
  (* Toggles switch that says whether to count inferences or not. *)
  val counting_thms : bool -> unit
  val thm_count : unit -> {ASSUME : int, REFL : int, BETA_CONV : int,
                           SUBST : int,  ABS : int,   DISCH : int,
                           MP : int, INST_TYPE : int, drule : int,
                           definition : int, axiom : int,
                           from_disk : int, valid_tac : int, other : int}
d36 9
a44 8
  val hyp : thm -> Term.term list
  val concl : thm -> Term.term
  val dest_thm : thm -> (Term.term list * Term.term)
  val thm_free_vars : thm -> Term.term list
  val hyp_union : thm list -> Term.term list
  val pp_thm : PP.ppstream -> thm -> unit
  val thm_to_string : thm -> string
  val print_thm : thm -> unit
d46 6
a51 16
  (* The primitive rules of inference *)
  val ASSUME    : Term.term -> thm
  val REFL      : Term.term -> thm
  val BETA_CONV : Term.term -> thm
  val SUBST     : {var:Term.term, thm:thm} list -> Term.term -> thm -> thm
  val ABS       : Term.term -> thm -> thm
  val INST_TYPE : Term.Type.hol_type subst -> thm -> thm
  val DISCH     : Term.term -> thm -> thm
  val MP        : thm -> thm -> thm

  val mk_axiom_thm      : (Term.term list * Term.term) -> thm
  val mk_definition_thm : (Term.term list * Term.term) -> thm
  val mk_drule_thm      : (Term.term list * Term.term) -> thm
  val mk_disk_thm       : (Term.term list * Term.term) -> thm
  val mk_tac_thm        : (Term.term list * Term.term) -> thm
  val mk_thm            : (Term.term list * Term.term) -> thm
a52 1
        
@
