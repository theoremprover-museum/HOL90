head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.35.48;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.35.48;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC mk_let

\TYPE {mk_let : {{func : term, arg : term}} -> term}

\SYNOPSIS
Constructs a {let} term.

\DESCRIBE
{mk_let {{func = f, arg = x)} returns {--`LET f x`--}. If {func} is of the form
{--`\y. t`--} then the result will be pretty-printed as {--`let y = x in t`--}.

\FAILURE
Fails with 

    HOL_ERR{{origin_structure = "Dsyntax", origin_function = "mk_let", 
            message = ""}}

if the types of {func} and {arg} are such that {--`LET func arg`--} is
not well-typed. {--`LET`--} has most general type:
{
   ==`:('a -> 'b) -> 'a -> 'b`==
}

\EXAMPLE
{
- mk_let{{func = --`$= 1`--, arg = --`2`--}};
(--`LET ($= 1) 2`--) : term

- mk_let{{func= --`\y. y = 1`--, arg = --`2`--}};
val it = (--`let y = 2 in (y = 1)`--) : term
}
\SEEALSO
dest_let, is_let.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
