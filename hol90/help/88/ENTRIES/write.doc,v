head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.35.39;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.35.39;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC write

\TYPE {write : ((string # string) -> void)}

\SYNOPSIS
Writes characters to a file.

\KEYWORDS
file.

\DESCRIBE
The call {write(port,`characters`)}, where {characters} is a string of
characters to write, and {port} is a string describing a port (a port is the
standard ML file descriptor, normally obtained from a call to {openw} or
{append_openw}), will write the given characters to the file corresponding to
the port.

\FAILURE
May fail or hang in system-dependent ways when given an invalid port
descriptor.

\EXAMPLE
The following assumes that HOL is being run under Unix. It will overwrite any
existing file {test-file} in the current directory. Notice that the actual
string returned by {openw} may vary on other systems.
{
   #let port = openw `test-file`;;
   port = `%test-file` : string

   #write(port,`Hello world`);;
   () : void

   #close port;;
   () : void

   #system `cat test-file`;;
   Hello world0 : int
}
\SEEALSO
append_openw, close, openi, openw, read, tty_read, tty_write.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
