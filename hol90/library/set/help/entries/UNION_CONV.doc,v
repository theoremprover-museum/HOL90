head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.31.13;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.31.13;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC UNION_CONV

\TYPE {UNION_CONV : conv -> conv}

\SYNOPSIS
Reduce {{{t1,...,tn}} UNION s} to {t1 INSERT (... (tn INSERT s))}.

\LIBRARY sets

\DESCRIBE 
The function {UNION_CONV} is a parameterized conversion for reducing sets of
the form {"{{t1,...,tn}} UNION s"}, where {{{t1,...,tn}}} and {s} are sets of
type {(ty)set}. The first argument to {UNION_CONV} is expected to be a
conversion that decides equality between values of the base type {ty}.  Given
an equation {"e1 = e2"}, where {e1} and {e2} are terms of type {ty}, this
conversion should return the theorem {|- (e1 = e2) = T} or the theorem
{|- (e1 = e2) = F}, as appropriate.

Given such a conversion, the function {UNION_CONV} returns a conversion that
maps a term of the form {"{{t1,...,tn}} UNION s"} to the theorem
{
   |- t UNION {{t1,...,tn}} = ti INSERT ... (tj INSERT s)
}
\noindent where {{{ti,...,tj}}} is the set of all terms {t} that occur as
elements of {{{t1,...,tn}}} for which the conversion {IN_CONV conv} fails to
prove that {|- (t IN s) = T} (that is, either by proving {|- (t IN s) = F}
instead, or by failing outright).

\EXAMPLE
In the following example, {num_EQ_CONV} is supplied as a parameter to
{UNION_CONV} and used to test for membership of each element of the first
finite set {{{1,2,3}}} of the union in the second finite set {{{SUC 0,3,4}}}.
{
   #UNION_CONV num_EQ_CONV "{{1,2,3}} UNION {{SUC 0,3,4}}";;
   |- {{1,2,3}} UNION {{SUC 0,3,4}} = {{2,SUC 0,3,4}}
}
\noindent The result is {{{2,SUC 0,3,4}}}, rather than {{{1,2,SUC 0,3,4}}},
because {UNION_CONV} is able by means of a call to 
{
   IN_CONV num_EQ_CONV "1 IN {{SUC 0,3,4}}"
}
\noindent to prove that {1} is already an element of the set {{{SUC 0,3,4}}}.

The conversion supplied to {UNION_CONV} need not actually prove equality of
elements, if simplification of the resulting set is not desired.  For example:
{
   #UNION_CONV NO_CONV "{{1,2,3}} UNION {{SUC 0,3,4}}";;
   |- {{1,2,3}} UNION {{SUC 0,3,4}} = {{1,2,SUC 0,3,4}}
}
\noindent In this case, the resulting set is just left unsimplified. Moreover,
the second set argument to {UNION} need not be a finite set:
{
   #UNION_CONV NO_CONV "{{1,2,3}} UNION s";;
   |- {{1,2,3}} UNION s = 1 INSERT (2 INSERT (3 INSERT s))
}
\noindent And, of course, in this case the conversion argument to {UNION_CONV}
is irrelevant.

\FAILURE 
{UNION_CONV conv} fails if applied to a term not of the form
{"{{t1,...,tn}} UNION s"}.

\SEEALSO
IN_CONV.

\ENDDOC

@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
