head	1.3;
access;
symbols
	HOL97:1.3.0.4
	bpHOL97:1.3
	hol90_9_alpha:1.3
	hol90_pre8_for_multiple_compilers:1.3.0.2
	hol90_pre8_after_donalds_separate_compilation_changes:1.2
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.3
date	95.11.16.16.53.02;	author rjb;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	95.10.31.14.01.33;	author drs1004;	state Exp;
branches;
next	1.1;

1.1
date	95.10.16.13.31.31;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.31.31;	author rjb;	state Exp;
branches;
next	;

1.3.4.1
date	97.07.11.19.28.25;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Support for the predecessor function, PRE, has been added to the arith
library. It is eliminated in the pre-processing phase along with natural
number subtraction. The modifications are due to Kim Dam Petersen of
Tele Danmark Research.

R.J.Boulton, 16th November 1995.
@
text
@signature Arith_cons_sig =
sig
   type term sharing type term = Term.term

   val mk_plus : term * term -> term
   val mk_minus : term * term -> term
   val mk_mult : term * term -> term
   val dest_plus : term -> term * term
   val dest_minus : term -> term * term
   val dest_mult : term -> term * term
   val is_plus : term -> bool
   val is_minus : term -> bool
   val is_mult : term -> bool
   val mk_less : term * term -> term
   val mk_leq : term * term -> term
   val mk_great : term * term -> term
   val mk_geq : term * term -> term
   val dest_less : term -> term * term
   val dest_leq : term -> term * term
   val dest_great : term -> term * term
   val dest_geq : term -> term * term
   val is_less : term -> bool
   val is_leq : term -> bool
   val is_great : term -> bool
   val is_geq : term -> bool
   val is_num_reln : term -> bool
   val mk_suc : term -> term
   val dest_suc : term -> term
   val is_suc : term -> bool
   val mk_pre : term -> term
   val dest_pre : term -> term
   val is_pre : term -> bool
   val is_num_const : term -> bool
   val is_zero : term -> bool
   val int_of_term : term -> int
   val term_of_int : int -> term
   val mk_num_var : string -> term
   val arg1 : term -> term
   val arg2 : term -> term
end
@


1.3.4.1
log
@Changes to accomodate CM, and also the differences between  SML'90 and SML'97.
@
text
@d3 2
a4 1
 type term
@


1.2
log
@First phase of hol90.8 development.  hol90 now compiles using NJSML-CM
108.5, with separate compilation of libraries.  System dependencies
have been isolated in the makefiles and "portable.sml".

This involved a large number of enhancments to the source files,
most of which are documented in the 7.changes file (or will be shortly).
See also the correpsonding email corrspondence between RJB, KLS, TFM,
JRH and DRS that happened during this development.
@
text
@d30 3
@


1.1
log
@Initial revision
@
text
@d3 2
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
