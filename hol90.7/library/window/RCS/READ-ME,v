head	4.1;
access;
symbols
	HOL90-7:4.1;
locks; strict;
comment	@# @;


4.1
date	94.09.10.03.37.05;	author jim;	state Exp;
branches;
next	0.0;

0.0
date	94.05.11.23.47.46;	author jug;	state Exp;
branches;
next	;


desc
@This is the READ-ME file for the HOL90 version of the window library.
@


4.1
log
@This is the version released with HOL90.7
@
text
@+ =====================================================================	+
|									|
| LIBRARY	: window						|
|									|
| DESCRIPTION   : This library provides support for a transformational  |
|                 style of reasoning. Users can transform an expression |
|                 or focus their attention on a subexpression and       |
|                 transform that. The system allows you to assume       |
|                 information from the context of a subexpression. This |
|                 library is designed to be customised and extended.    |
|									|
| AUTHOR	: Jim Grundy                                            |
|									|
| VERSION       : 1.1                                                   |
| DATE		: 8 October 1991                                        |
|									|
| VERSION       : 2.1                                                   |
| DATE		: 20 November 1992                                      |
|									|
| VERSION       : 3.1                                                   |
| DATE		: 7 December 1993                                       |
|									|
| VERSION       : 4.1                                                   |
| DATE		: 10 September 1994					|
+ =====================================================================	+


+ --------------------------------------------------------------------- +
|									|
| FILES:								|
|									|
+ --------------------------------------------------------------------- +

   src/
   basic_close.sml      Generic window inference rules.
   defined.sml		Datatype for things that may be undefined.
   eq_close.sml         Window inference rules that preserve equality.
   history.sml		Generic history mechanism.
   hol_ext.sml		Miscelaneous HOL utility functions.
   imp_close.sml	Window inference rules that preserve implication.
   inter.sml		Provides the interactive front end to the libarary.
   ml_ext.sml		Generic ml functions for lists and sets and stuff.
   relations.sml	Sets up tables of data on refexivity & trasitivity.
   rules.sml		Sets up storage for window rules.
   signal.sml		Set up a sort of signal mechanism.
   tactic.sml		Defines a tactic interface to the window library
   tty.sml		Set up the command line interface.
   win.ml		The window stack manipulation functions.
   win_core.sml		The window manipulation functions.
   window.ml		Announces the loading of the system.

   theories/src/
   mk_win_th.ml		Makes win.th

+ --------------------------------------------------------------------- +
|									|
| TO BUILD THE LIBRARY:							|
|									|
+ --------------------------------------------------------------------- +

   1) edit the pathnames in the Makefile and in install.sml.

   2) type `make clean'.

   3) type `make install'.

+ --------------------------------------------------------------------- +
|									|
| TO USE THE LIBRARY:							|
|									|
+ --------------------------------------------------------------------- +

   1) start hol90.

   2) type `load_library{lib=window_lib,theory="foo"};'.

@


0.0
log
@*** empty log message ***
@
text
@d24 1
a24 1
| DATE		: Coming soon, this is an alpha release.		|
d34 1
a41 1
   mk_win_th.ml		Makes win.th - defines reverse implication.
d48 1
a49 1
   win.ml		The window stack manipulation functions.
d52 3
d57 1
a57 1
| TO REBUILD THE LIBRARY:						|
d61 1
a61 1
   1) edit the pathnames in the Makefile (if necessary)
d63 1
a63 1
   2) type `make clean'
d65 1
a65 4
   3) type `make'

   (If you are fortunate enough to be using RCS, why not uncomment the  )
   (relevant entries from the Makefile.                                 )
d73 1
a73 7
   1) start hol90

   2) type `use "install.sml";'
      This should define the library.

   3) type `load_library{lib=window_lib,theory="WhatEverYouWantToCallIt"};'
      This should define the library.
d75 1
a75 1
Good Luck.
@
