head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.35.11;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.35.11;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC new_gen_definition

\TYPE {new_gen_definition : (string -> (string # term) -> thm)}

\SYNOPSIS
Defines a new constant, infix constant, or binder constant.

\DESCRIBE
The function {new_gen_definition} provides a facility for definitional
extensions to the current theory.  It takes two arguments.  The first is a flag
which can have one of three values: {`constant`}, {`infix`}, or {`binder`},
indicating the status of the object being defined.  The second argument is a
pair consisting of the name under which the resulting definition will be saved
in the current theory segment, and a term giving the desired definition.  The
value returned by {new_gen_definition} is a theorem which states the definition
requested by the user.

Let {v_1},...,{v_n} be tuples of distinct variables, containing the variables
{x_1,...,x_m}.  Evaluating {new_gen_definition flag (`name`, "c v_1 ... v_n =
t")}, where {c} is not already a constant, declares the sequent {({{}},"\v_1
... v_n. t")} to be a definition in the current theory, and declares {c} to be
a new constant in the current theory with this definition as its specification.
This constant specification is returned as a theorem, generally of the form {|-
!x_1 ... x_m. c v_1 ... v_n = t} , and is saved in the current theory under
(the name) {name}.  If {flag} is {`infix`} or {`binder`}, the constant is given
infix or binder status accordingly.  Optionally, the definitional term argument
may have any of its variables universally quantified.

\FAILURE
{new_gen_definition} fails if called when HOL is not in draft mode.  It also
fails if there is already an axiom, definition or specification of the given
name in the current theory segment; if {c} is already a constant in the
current theory or is not an allowed name for a constant; if {t} contains free
variables that are not in any of the variable structures {v_1}, ..., {v_n}
(this is equivalent to requiring {\v_1 ... v_n. t} to be a closed term); or if
any variable occurs more than once in {v_1, ..., v_n}.  Failure also occurs if
{flag} is not one of {`constant`}, {`infix`} or {`binder`} or if the type of {c}
is not suitable for a constant with the syntactic status specified by {flag}.
Finally, failure occurs if there is a type variable in {v_1}, ..., {v_n} or {t}
that does not occur in the type of {c}.

\USES
Used to define the special purpose functions {new_definition},
{new_infix_definition}, and {new_binder_definition}, which are used for
defining objects with a particular status.

\SEEALSO
DEF_EXISTS_RULE, new_binder_definition, new_definition, new_infix_definition,
new_specification.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
