head	1.7;
access;
symbols
	HOL97:1.3.0.4
	bpHOL97:1.3
	hol90_9_alpha:1.3
	hol90_pre8_for_multiple_compilers:1.3.0.2
	hol90_pre8_after_donalds_separate_compilation_changes:1.3
	hol90_8_after_merging_Konrad_Elsa:1.3
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.7
date	96.02.08.00.32.05;	author drs1004;	state Exp;
branches;
next	1.6;

1.6
date	96.01.04.22.06.58;	author drs1004;	state Exp;
branches;
next	1.5;

1.5
date	96.01.04.13.45.50;	author drs1004;	state Exp;
branches;
next	1.4;

1.4
date	95.12.18.11.35.24;	author drs1004;	state Exp;
branches;
next	1.3;

1.3
date	95.10.18.16.37.14;	author drs1004;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	95.10.17.17.07.28;	author drs1004;	state Exp;
branches;
next	1.1;

1.1
date	95.10.16.13.29.58;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.29.58;	author rjb;	state Exp;
branches
	1.1.1.1.2.1;
next	;

1.1.1.1.2.1
date	95.10.17.18.43.07;	author drs1004;	state Exp;
branches;
next	;

1.3.4.1
date	97.07.18.11.51.05;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.7
log
@New theory mechanism, by Donald Syme, and many other enhancements.
@
text
@(* ===================================================================== 
 * FILE          : term.sig                                              
 * DESCRIPTION   : Simply typed lambda terms.                            
 *                                                                       
 * AUTHOR        : (c) Konrad Slind, University of Calgary               
 * DATE          : August 26, 1991                                       
 * UPDATE        : October 94. Term signature implementation moved from  
 *                 symtab.sml, which is now gone.                        
 *               : December 95.  Term hashing implemented by DRS	 
 *               : December 95.  Fixity information removed by DRS	 
 * ===================================================================== *)

signature Public_term_sig =
sig
  structure Type : Public_type_sig

  type typ sharing type typ = Type.typ;

  eqtype term 

  (*------------------------------------------------------------------------
   * The term constant symbol table
   *----------------------------------------------------------------------*)
  val const_decl : string -> {const : term}
  val is_constant : string -> bool
  val is_polymorphic : string -> bool
  val all_constants : unit -> string list	

  (*------------------------------------------------------------------------
   * General ops
   *----------------------------------------------------------------------*)
  datatype lambda = VAR of {Name : string, Ty : typ}
                  | CONST of {Name : string, Ty : typ}
                  | COMB of {Rator : term, Rand : term}
                  | LAMB of {Bvar : term, Body : term};

  val free_vars : term -> term list
  val free_in : term -> term -> bool
  val all_vars : term -> term list
  val free_varsl : term list -> term list
  val all_varsl : term list -> term list

  val term_lt :term -> term -> bool
  val term_ord :term * term -> order

  val genvar : typ -> term
  val genvars : typ -> int -> term list
  val variant : term list -> term -> term
  val type_of :term -> typ
  val type_vars_in_term : term -> typ list
  
  (* Constructors and destructors, except for mk_const *)
  val mk_var  :{Name : string, Ty : typ} -> term
  val mk_primed_var : {Name : string, Ty : typ} -> term
  val prim_mk_const : string * typ Lib.subst -> term
  val list_mk_comb : (term * term list) -> term
  val mk_comb :{Rator : term, Rand : term} -> term
  val mk_abs  :{Bvar : term, Body : term} -> term
  val dest_var  : term -> {Name : string, Ty : typ}
  val dest_const: term -> {Name : string, Ty : typ}
  val dest_comb : term -> {Rator : term, Rand : term}
  val dest_abs  : term -> {Bvar : term, Body : term}
  val is_var  : term -> bool
  val is_const: term -> bool
  val is_comb : term -> bool
  val is_abs  : term -> bool
  
  val dest_term : term -> lambda
  
  val rator : term -> term
  val rand  : term -> term
  val bvar  : term -> term
  val body  : term -> term
  
  (* Prelogic *)
  val aconv : term -> term -> bool
  val subst : term Lib.subst -> term -> term
  val inst : typ Lib.subst -> term -> term
  val beta_conv : term -> term

  (* for general use *)
  val hash_term : term -> int
  val optimize_term : term -> term

  (* Type antiquotations have type "term" for nicer top level syntax *)
  val ty_antiq : typ -> term
  val extract_ty_antiq : term -> typ
end;

(* ===================================================================== 
 *                                                                       
 * ===================================================================== *)


signature Private_term_sig =
sig
  structure Type : Private_type_sig;
  type typ sharing type typ = Type.typ;

  datatype term = Fv of {Name : string, Ty : typ}
                | Bv of int
                | Const of {Name : string, Ty : typ}
                | Comb of {Rator : term, Rand : term}
                | Abs of {Bvar : term, Body : term}
                | ty_antiq of typ
  
  datatype lambda = VAR of {Name : string, Ty : typ}
                  | CONST of {Name : string, Ty : typ}
                  | COMB of {Rator : term, Rand : term}
                  | LAMB of {Bvar : term, Body : term};

  type symtab
  val symtab_copy : unit -> symtab
  val replace_symtab : symtab -> unit
  exception TERM_SYMTAB_CLASH of string

  val lookup_const: string -> term
  val const_decl : string -> {const : term}
  val add_const : {Name:string,Ty:typ} -> unit
  val all_constants : unit -> string list	

  val is_constant : string -> bool
  val is_polymorphic : string -> bool

  val free_vars : term -> term list
  val free_in : term -> term -> bool
  val all_vars : term -> term list
  val free_varsl : term list -> term list
  val all_varsl : term list -> term list

  val term_lt :term -> term -> bool
  val term_ord :term * term -> order

  val genvar : typ -> term
  val genvars : typ -> int -> term list
  val variant : term list -> term -> term
  val type_of :term -> typ
  val type_vars_in_term : term -> typ list
  
  (* Constructors and destructors, except for mk_const *)
  val mk_var  :{Name : string, Ty : typ} -> term
  val mk_primed_var  :{Name : string, Ty : typ} -> term
  val prim_mk_const  :string * typ Lib.subst -> term
  val list_mk_comb: (term * term list) -> term
  val mk_comb :{Rator : term, Rand : term} -> term
  val mk_abs  :{Bvar : term, Body : term} -> term
  val dest_var  : term -> {Name : string, Ty : typ}
  val dest_const: term -> {Name : string, Ty : typ}
  val dest_comb : term -> {Rator : term, Rand : term}
  val dest_abs  : term -> {Bvar : term, Body : term}
  val is_var  : term -> bool
  val is_const: term -> bool
  val is_comb : term -> bool
  val is_abs  : term -> bool
  
  val dest_term : term -> lambda
  
  val rator : term -> term
  val rand  : term -> term
  val bvar  : term -> term
  val body  : term -> term
  val break_abs : term -> {Bvar : term, Body : term}
  val de_abs : term -> (term list * term)

  val is_bvar : term -> bool
  
  (* Prelogic *)
  val aconv : term -> term -> bool
  val subst : term Lib.subst -> term -> term
  val inst : typ Lib.subst -> term -> term
  val beta_conv : term -> term

  val hash_term : term -> int
  val optimize_term : term -> term

  (* Type antiquotations have type "term" for nicer top level syntax *)
  val extract_ty_antiq : term -> typ
end;


@


1.6
log
@NJML 108.19 changes
@
text
@d21 4
a24 2
  (* The term constant symbol table *)
  val const_decl : string -> {const : term, theory : string}
d27 1
d29 3
d55 1
a55 1
  val prim_mk_const : string -> typ Lib.subst -> term
d115 1
a115 2
  exception TERM_SYMTAB_CLASH of {common_name:string, 
                                  theory1:string, theory2:string}
d118 3
a120 2
  val const_decl : string -> {const : term, theory : string}
  val add_term_const : {const :term, theory :string} -> unit
d143 1
a143 1
  val prim_mk_const  :string -> typ Lib.subst -> term
@


1.5
log
@Fixed types, pretypes, fixities, parsing.
@
text
@d38 1
a38 1
  val term_ord :term * term -> ordering
d126 1
a126 1
  val term_ord :term * term -> ordering
@


1.4
log
@Preterm and other changes, see 7.changes
@
text
@d10 1
a18 2
  datatype fixity = Infix of int | Prefix | Binder

d21 3
a23 5
  val const_decl : string -> {const : term, theory : string, place: fixity}
  val fixity_of_term : string -> fixity
  val prec_of_term : string -> int
  val is_binder : string -> bool
  val is_infix : string -> bool
d30 1
a30 1
  val ty_antiq : typ -> term
d48 3
a50 2
  val mk_primed_var  :{Name : string, Ty : typ} -> term
  val list_mk_comb: (term * term list) -> term
d75 1
d79 3
a93 2
  datatype fixity = Infix of int | Prefix | Binder

d113 4
a116 10
  val const_decl : string -> {const : term, theory : string, place: fixity}
  datatype add_style = Defining | Loading
  val add_term_const 
     : add_style -> {const :term, theory :string, place :fixity} -> unit

  val is_st_term_const : string -> bool
  val fixity_of_term : string -> fixity
  val prec_of_term : string -> int
  val is_binder : string -> bool
  val is_infix : string -> bool  
d137 1
a137 1
  (* val prim_mk_const  :string -> term Lib.subst -> term *)
d170 2
@


1.3
log
@Check in after merging in Konrad's changes made after
the release of hol90.7.  This involved creating a side branch
in which to check in Konrad's changes, then merging in that
side branch into the main development (which contains changes
made by Elsa Gunter).

Some other small modification have been made to the source code,
as I begun to try to make this version into a working version:
	- hol90 will now be compiled in an environment were no
structures can be considered opn.  This means many structures
now need "open Lib" and other such commands at their head.
This has not yet been completed, but has been begun.
	- "rotl" and "rotr" have been added to Lib, something
which I just did impulsively.   Documentation files
have also been added in help/90.
@
text
@d1 10
a10 9
(* ===================================================================== *)
(* FILE          : term.sig                                              *)
(* DESCRIPTION   : Simply typed lambda terms.                            *)
(*                                                                       *)
(* AUTHOR        : (c) Konrad Slind, University of Calgary               *)
(* DATE          : August 26, 1991                                       *)
(* UPDATE        : October 94. Term signature implementation moved from  *)
(*                 symtab.sml, which is now gone.                        *)
(* ===================================================================== *)
d12 1
a12 1
signature Term_sig =
d14 4
a17 1
  structure Type : Type_sig
a18 11
  datatype term = Fv of {Name : string, Ty : Type.hol_type}
                | Bv of int
                | Const of {Name : string, Ty : Type.hol_type}
                | Comb of {Rator : term, Rand : term}
                | Abs of {Bvar : term, Body : term}
                | ty_antiq of Type.hol_type
  
  datatype lambda = VAR of {Name : string, Ty : Type.hol_type}
                  | CONST of {Name : string, Ty : Type.hol_type}
                  | COMB of {Rator : term, Rand : term}
                  | LAMB of {Bvar : term, Body : term};
d20 1
a20 5
  type symtab
  val symtab_copy : unit -> symtab
  val replace_symtab : symtab -> unit
  exception TERM_SYMTAB_CLASH of {common_name:string, 
                                  theory1:string, theory2:string}
a21 1
  val lookup_const: string -> term
a22 5
  datatype add_style = Defining | Loading
  val add_term_const 
     : add_style -> {const :term, theory :string, place :fixity} -> unit

  val is_st_term_const : string -> bool
d26 1
a26 1
  val is_infix : string -> bool  
d29 5
d39 1
d41 4
a44 2
  val genvar : Type.hol_type -> term
  val genvars : Type.hol_type -> int -> term list
d46 2
a47 2
  val type_of :term -> Type.hol_type
  val type_vars_in_term : term -> Type.hol_type list
d50 2
a51 3
  val mk_var  :{Name : string, Ty : Type.hol_type} -> term
  val mk_primed_var  :{Name : string, Ty : Type.hol_type} -> term
  (* val prim_mk_const  :string -> term Lib.subst -> term *)
d55 2
a56 2
  val dest_var  : term -> {Name : string, Ty : Type.hol_type}
  val dest_const: term -> {Name : string, Ty : Type.hol_type}
a69 2
  val break_abs : term -> {Bvar : term, Body : term}
  val is_bvar : term -> bool
d74 1
a74 1
  val inst : Type.hol_type Lib.subst -> term -> term
d76 4
d82 4
d87 1
a87 1
signature Public_term_sig =
d89 3
a91 1
  structure Type : Public_type_sig
d93 18
a110 1
  eqtype term 
d112 1
d114 5
d122 1
a122 1
  val is_infix : string -> bool
a124 5
  datatype lambda = VAR of {Name : string, Ty : Type.hol_type}
                  | CONST of {Name : string, Ty : Type.hol_type}
                  | COMB of {Rator : term, Rand : term}
                  | LAMB of {Bvar : term, Body : term};
  val ty_antiq : Type.hol_type -> term
d130 1
d132 4
a135 2
  val genvar : Type.hol_type -> term
  val genvars : Type.hol_type -> int -> term list
d137 2
a138 2
  val type_of :term -> Type.hol_type
  val type_vars_in_term : term -> Type.hol_type list
d141 3
a143 2
  val mk_var  :{Name : string, Ty : Type.hol_type} -> term
  val mk_primed_var  :{Name : string, Ty : Type.hol_type} -> term
d147 2
a148 2
  val dest_var  : term -> {Name : string, Ty : Type.hol_type}
  val dest_const: term -> {Name : string, Ty : Type.hol_type}
d162 4
d170 1
a170 1
  val inst : Type.hol_type Lib.subst -> term -> term
d172 4
d177 2
@


1.3.4.1
log
@Removed sys_params.* because it has been replaced by src/SysParams.
@
text
@d34 1
a34 1
  val const_decl : string -> {const:term, theory:string, place:fixity}
a40 1
  val fixity_to_string : fixity -> string
a98 1
  val fixity_to_string : fixity -> string
@


1.2
log
@Keeping you up to date:

I'm about to do a checkin of elsa's modifications to the hol90.7
sources to create her hol90.pre8.  To recap what I've done:
	- I checked out hol90 (in /usr/groups/hol/drs1004/hol90)
		cvs co hol90
	  (Well, to be honest, I only checked out those
	  parts of hol90 I knew I'd be changing, e.g. not the
	  Manual, and only parts of the library.  Checking out the
	  entire source takes a while, mainly due to the enormous number
	  of help files.  The limiting factor is files/second, which
         runs at around 5 when CVS is working on nfs over a network, not
         KB/second, which you might at first think it would be).

	- By doing a recursive diff between Elsa's source and the
	hol90.7 source I found all the changes Elsa had made to
	source files.  I copied relevant files from Elsa's source
	into my checked out version.  The only new files were
		- the sml_system files in src/0
		- some make scripts in src/.
	Changed files were in:
		src/{0,1,2,3}
		library/arith/src/thm_convs.sml
		library/list/src/list_conv1.sml
		library/num/src/num_lib.sml
		library/prog_logic/src/halts_logic.sml
		library/prog_logic/src/translation.sml
		library/prog_logic/theories/src/mk_halts.sml
		library/real/theories/src/Make
		library/real/theories/src/equiv.sml
		library/real/theories/src/seq.sml
		library/reduce/src/arithconv.sml
		library/string/src/string_conv.sml
		library/unity/theories/src/aux_definitions.sml
		library/word/theories/src/*

	- I will now commit these changes, with this email as the log message.
		cvs commit

	- Tomorrow I will get this version compiling
	with NJSML 108 (I will probably add
	the files to enable the NJSML compilation manager to make
	this easier), then check those changes in.  I think it's
	good to get things in a working state.
@
text
@d35 1
a35 1
  datatype add_style = Defining | Loading;
@


1.1
log
@Initial revision
@
text
@d61 1
a61 1
  (* val prim_mk_const  :string -> term subst -> term *)
d85 2
a86 2
  val subst : term subst -> term -> term
  val inst : Type.hol_type subst -> term -> term
d145 2
a146 2
  val subst : term subst -> term -> term
  val inst : Type.hol_type subst -> term -> term
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@


1.1.1.1.2.1
log
@Konrad's bug fixes up to start of serious
hol90.8 devel;opment.  Checked into branch revision for
later merging with trunk (elsa's work).  See
doc/7.chages for a full description of what's been done.
@
text
@d35 1
a35 1
  datatype add_style = Defining | Loading
@
