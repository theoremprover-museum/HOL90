thid = (automata, 866812953, 433824)
axioms = []
definitions =
[((Finite_Powerset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   (((= :('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) -> bool)
   ((Finite_Powerset :('a # 'b -> bool) #
                      ('a # 'b -> 'a # 'b -> bool) ->
                      ('a # ('b -> bool) -> bool) #
                      ('a # ('b -> bool) -> 'a # ('b -> bool) ->
                      bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   (((, :('a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   ((UNCURRY :('a -> ('b -> bool) -> bool) -> 'a # ('b -> bool) ->
              bool) (\(e :'a). (\(x :'b -> bool). ((/\
   ((! :('b -> bool) -> bool) (\(s :'b). ((==> ($1 $0)) ($4
   (((, :'a -> 'b -> 'a # 'b) $2) $0)))))) ((/\
   ((? :('b -> bool) -> bool) (\(s :'b). ($1 $0))))
   ((Finite :('b -> bool) -> bool) $0)))))))
   ((UNCURRY :('a -> ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
              'a # ('b -> bool) -> 'a # ('b -> bool) -> bool)
   (\(e :'a). (\(x :'b -> bool).
   ((UNCURRY :('a -> ('b -> bool) -> bool) -> 'a # ('b -> bool) ->
              bool) (\(e' :'a). (\(x' :'b -> bool). ((/\
   ((! :('b -> bool) -> bool) (\(s' :'b). ((==> ($1 $0))
   ((? :('b -> bool) -> bool) (\(s :'b). ((/\ ($4 $0)) (($6
   (((, :'a -> 'b -> 'a # 'b) $5) $0)) (((, :'a -> 'b -> 'a # 'b) $3)
   $1))))))))) ((/\ ((? :('b -> bool) -> bool) (\(s' :'b). ($1 $0))))
   ((Finite :('b -> bool) -> bool) $0)))))))))))))))`),
 ((Powerset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   (((= :('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) -> bool)
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   (((, :('a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   ((UNCURRY :('a -> ('b -> bool) -> bool) -> 'a # ('b -> bool) ->
              bool) (\(e :'a). (\(x :'b -> bool). ((/\
   ((! :('b -> bool) -> bool) (\(s :'b). ((==> ($1 $0)) ($4
   (((, :'a -> 'b -> 'a # 'b) $2) $0)))))) ((? :('b -> bool) -> bool)
   (\(s :'b). ($1 $0))))))))
   ((UNCURRY :('a -> ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
              'a # ('b -> bool) -> 'a # ('b -> bool) -> bool)
   (\(e :'a). (\(x :'b -> bool).
   ((UNCURRY :('a -> ('b -> bool) -> bool) -> 'a # ('b -> bool) ->
              bool) (\(e' :'a). (\(x' :'b -> bool). ((/\
   ((! :('b -> bool) -> bool) (\(s' :'b). ((==> ($1 $0))
   ((? :('b -> bool) -> bool) (\(s :'b). ((/\ ($4 $0)) (($6
   (((, :'a -> 'b -> 'a # 'b) $5) $0)) (((, :'a -> 'b -> 'a # 'b) $3)
   $1))))))))) ((? :('b -> bool) -> bool) (\(s' :'b). ($1
   $0))))))))))))))))`),
 ((Subset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   (((= :('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) -> bool)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   (((, :('a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
         ('a # ('b -> bool) -> bool) #
         ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   ((UNCURRY :('a -> ('b -> bool) -> bool) -> 'a # ('b -> bool) ->
              bool) (\(e :'a). (\(x :'b -> bool). ((/\
   ((! :('b -> bool) -> bool) (\(s :'b). (((= :bool -> bool -> bool)
   ($1 $0)) ($4 (((, :'a -> 'b -> 'a # 'b) $2) $0))))))
   ((? :('b -> bool) -> bool) (\(s :'b). ($1 $0))))))))
   ((UNCURRY :('a -> ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
              'a # ('b -> bool) -> 'a # ('b -> bool) -> bool)
   (\(e :'a). (\(x :'b -> bool).
   ((UNCURRY :('a -> ('b -> bool) -> bool) -> 'a # ('b -> bool) ->
              bool) (\(e' :'a). (\(x' :'b -> bool). ((/\
   ((! :('b -> bool) -> bool) (\(s' :'b). (((= :bool -> bool -> bool)
   ($1 $0)) ((? :('b -> bool) -> bool) (\(s :'b). ((/\ ($4 $0)) (($6
   (((, :'a -> 'b -> 'a # 'b) $5) $0)) (((, :'a -> 'b -> 'a # 'b) $3)
   $1))))))))) ((? :('b -> bool) -> bool) (\(s' :'b). ($1
   $0))))))))))))))))`),
 ((Stuttering),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   ((Stuttering :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                 bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((! :('a -> bool) -> bool) (\(e :'a). ((! :('b -> bool) -> bool)
   (\(s :'b). ((==>
   (((Reachable :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                 'a # 'b -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2))
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) (($2
   (((, :'a -> 'b -> 'a # 'b) $1) $0)) (((, :'a -> 'b -> 'a # 'b) $1)
   $0))))))))))))`),
 ((No_Dead),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   ((No_Dead :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
              bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((! :('a -> bool) -> bool) (\(e :'a). ((! :('b -> bool) -> bool)
   (\(s :'b). ((==>
   (((Reachable :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                 'a # 'b -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2))
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) ((? :('a -> bool) -> bool)
   (\(e' :'a). ((? :('b -> bool) -> bool) (\(s' :'b). (($4
   (((, :'a -> 'b -> 'a # 'b) $3) $2)) (((, :'a -> 'b -> 'a # 'b) $1)
   $0))))))))))))))))`),
 ((Fin_Non_Det),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   ((Fin_Non_Det :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                  bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((/\ ((! :('a -> bool) -> bool) (\(e :'a).
   ((Finite :('b -> bool) -> bool) (\(s :'b). ($3
   (((, :'a -> 'b -> 'a # 'b) $1) $0))))))) ((! :('a -> bool) -> bool)
   (\(e :'a). ((! :('b -> bool) -> bool) (\(s :'b).
   ((! :('a -> bool) -> bool) (\(e' :'a).
   ((Finite :('b -> bool) -> bool) (\(s' :'b). (($4
   (((, :'a -> 'b -> 'a # 'b) $3) $2)) (((, :'a -> 'b -> 'a # 'b) $1)
   $0))))))))))))))))`),
 ((Finite_State),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   ((Finite_State :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                   bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((Finite :('a # 'b -> bool) -> bool)
   ((Reachable :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                'a # 'b -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1)
   $0))))))))`),
 ((Reachable),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). ((! :('a -> bool) -> bool)
   (\(e' :'a). ((! :('b -> bool) -> bool) (\(s' :'b).
   (((= :bool -> bool -> bool)
   (((Reachable :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                 'a # 'b -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2))
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) ((? :(num -> bool) -> bool)
   (\(n :num). ((? :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   ((? :((num -> 'b) -> bool) -> bool) (\(s :num -> 'b). ((/\
   (((= :'a -> 'a -> bool) ($1 $2)) $4)) ((/\ (((= :'b -> 'b -> bool)
   ($0 $2)) $3)) ((/\ ($6 (((, :'a -> 'b -> 'a # 'b) ($1 0)) ($0 0))))
   ((! :(num -> bool) -> bool) (\(t :num). ((==> ((< $0) $3)) (($6
   (((, :'a -> 'b -> 'a # 'b) ($2 $0)) ($1 $0)))
   (((, :'a -> 'b -> 'a # 'b) ($2 (SUC $0))) ($1 (SUC
   $0)))))))))))))))))))))))))`),
 ((Limit_Trace),
  [],
  `((! :(('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) -> bool) ->
        bool) (\(G :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   (((= :bool -> bool -> bool)
   (((Limit_Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                   (num -> 'a) -> bool) $1) $0))
   ((! :(num -> bool) -> bool) (\(n :num).
   ((((Prefix_Trace :num ->
                     ('a # 'b -> bool) #
                     ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) ->
                     bool) $0) $2) $1))))))))`),
 ((Prefix_Trace),
  [],
  `((! :(num -> bool) -> bool) (\(n :num).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   (((= :bool -> bool -> bool)
   ((((Prefix_Trace :num ->
                     ('a # 'b -> bool) #
                     ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) ->
                     bool) $3)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0)) ((? :((num -> 'b) -> bool) -> bool) (\(s :num -> 'b). ((/\ ($3
   (((, :'a -> 'b -> 'a # 'b) ($1 0)) ($0 0))))
   ((! :(num -> bool) -> bool) (\(t :num). ((==> ((< $0) $5)) (($3
   (((, :'a -> 'b -> 'a # 'b) ($2 $0)) ($1 $0)))
   (((, :'a -> 'b -> 'a # 'b) ($2 (SUC $0))) ($1 (SUC
   $0)))))))))))))))))))`),
 ((Deterministic),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   ((Deterministic :('a # 'b -> bool) #
                    ('a # 'b -> 'a # 'b -> bool) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((/\ ((! :('a -> bool) -> bool) (\(e :'a).
   ((! :('b -> bool) -> bool) (\(s :'b). ((! :('b -> bool) -> bool)
   (\(s' :'b). ((==> ((/\ ($4 (((, :'a -> 'b -> 'a # 'b) $2) $1))) ($4
   (((, :'a -> 'b -> 'a # 'b) $2) $0)))) (((= :'b -> 'b -> bool) $1)
   $0))))))))) ((! :('a -> bool) -> bool) (\(e :'a).
   ((! :('b -> bool) -> bool) (\(s :'b). ((! :('a -> bool) -> bool)
   (\(e' :'a). ((! :('b -> bool) -> bool) (\(s' :'b).
   ((! :('b -> bool) -> bool) (\(s'' :'b). ((==> ((/\ (($5
   (((, :'a -> 'b -> 'a # 'b) $4) $3)) (((, :'a -> 'b -> 'a # 'b) $2)
   $1))) (($5 (((, :'a -> 'b -> 'a # 'b) $4) $3))
   (((, :'a -> 'b -> 'a # 'b) $2) $0)))) (((= :'b -> 'b -> bool) $1)
   $0))))))))))))))))))`),
 ((Trace_Inv),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(P :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   (((= :bool -> bool -> bool)
   (((Trace_Inv :('a # 'b -> bool) # ('a # 'b -> bool) #
                 ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> bool) #
         ('a # 'b -> 'a # 'b -> bool)) $3)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0)) ((? :((num -> 'b) -> bool) -> bool) (\(s :num -> 'b). ((/\ ($4
   (((, :'a -> 'b -> 'a # 'b) ($1 0)) ($0 0)))) ((/\
   ((! :(num -> bool) -> bool) (\(t :num). ($4
   (((, :'a -> 'b -> 'a # 'b) ($2 $0)) ($1 $0))))))
   ((! :(num -> bool) -> bool) (\(t :num). (($3
   (((, :'a -> 'b -> 'a # 'b) ($2 $0)) ($1 $0)))
   (((, :'a -> 'b -> 'a # 'b) ($2 (SUC $0))) ($1 (SUC
   $0)))))))))))))))))))`),
 ((Simulates),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool). (((= :bool -> bool -> bool)
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # 'a2 -> bool) #
                 ('a # 'a2 -> 'a # 'a2 -> bool) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3) $2))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $1)
   $0))) ((? :(('a -> 'a1 -> 'a2 -> bool) -> bool) -> bool)
   (\(R :'a -> 'a1 -> 'a2 -> bool). ((/\ ((! :('a -> bool) -> bool)
   (\(e :'a). ((! :('a1 -> bool) -> bool) (\(s1 :'a1). ((==> ($6
   (((, :'a -> 'a1 -> 'a # 'a1) $1) $0))) ((? :('a2 -> bool) -> bool)
   (\(s2 :'a2). ((/\ ($5 (((, :'a -> 'a2 -> 'a # 'a2) $2) $0))) ((($3
   $2) $1) $0)))))))))) ((! :('a -> bool) -> bool) (\(e :'a).
   ((! :('a -> bool) -> bool) (\(e' :'a). ((! :('a1 -> bool) -> bool)
   (\(s1 :'a1). ((! :('a1 -> bool) -> bool) (\(s1' :'a1).
   ((! :('a2 -> bool) -> bool) (\(s2 :'a2). ((==> ((/\ ((($5 $4) $2)
   $0)) (($8 (((, :'a -> 'a1 -> 'a # 'a1) $4) $2))
   (((, :'a -> 'a1 -> 'a # 'a1) $3) $1)))) ((? :('a2 -> bool) -> bool)
   (\(s2' :'a2). ((/\ ((($6 $4) $2) $0)) (($7
   (((, :'a -> 'a2 -> 'a # 'a2) $5) $1)) (((, :'a -> 'a2 -> 'a # 'a2)
   $4) $0))))))))))))))))))))))))))))`),
 ((Implements),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool). (((= :bool -> bool -> bool)
   (((Implements :('a # 'a1 -> bool) #
                  ('a # 'a1 -> 'a # 'a1 -> bool) ->
                  ('a # 'a2 -> bool) #
                  ('a # 'a2 -> 'a # 'a2 -> bool) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3) $2))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $1)
   $0))) ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $4) $3))
   $0))
   (((Trace :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $2) $1))
   $0)))))))))))))`),
 ((Trace),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   (((= :bool -> bool -> bool)
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0)) ((? :((num -> 'b) -> bool) -> bool) (\(s :num -> 'b). ((/\ ($3
   (((, :'a -> 'b -> 'a # 'b) ($1 0)) ($0 0))))
   ((! :(num -> bool) -> bool) (\(t :num). (($3
   (((, :'a -> 'b -> 'a # 'b) ($2 $0)) ($1 $0)))
   (((, :'a -> 'b -> 'a # 'b) ($2 (SUC $0))) ($1 (SUC
   $0))))))))))))))))`)]
theorems =
[((Subset_Simulates_Finite_Powerset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). ((==>
   ((Fin_Non_Det :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                  bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   (((Simulates :('a # ('b -> bool) -> bool) #
                 ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
                 ('a # ('b -> bool) -> bool) #
                 ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
                 bool)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((Finite_Powerset :('a # 'b -> bool) #
                      ('a # 'b -> 'a # 'b -> bool) ->
                      ('a # ('b -> bool) -> bool) #
                      ('a # ('b -> bool) -> 'a # ('b -> bool) ->
                      bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1)
   $0))))))))`),
 ((Complete_No_Dead),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool). ((==> ((/\
   ((No_Dead :('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool) ->
              bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3)
   $2))) ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $4) $3))
   $0))
   (((Trace :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $2) $1))
   $0))))))
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # ('a2 -> bool) -> bool) #
                 ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool) ->
                 bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3) $2))
   ((Powerset :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
               ('a # ('a2 -> bool) -> bool) #
               ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $1)
   $0))))))))))))`),
 ((Fin_Sim_Powerset_imp_Imp),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool). ((==>
   ((Fin_Non_Det :('a # 'a2 -> bool) #
                  ('a # 'a2 -> 'a # 'a2 -> bool) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $1)
   $0))) ((==>
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # ('a2 -> bool) -> bool) #
                 ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool) ->
                 bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3) $2))
   ((Powerset :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
               ('a # ('a2 -> bool) -> bool) #
               ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $1)
   $0)))) ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $4) $3))
   $0))
   (((Trace :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $2) $1))
   $0))))))))))))))`),
 ((Fin_Non_Det_Powerset_Trace),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). ((==>
   ((Fin_Non_Det :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                  bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
             (num -> 'a) -> bool)
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0))
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0)))))))))`),
 ((Limit_Unbounded),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   (((Limit_Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                   (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0))
   (e :num -> 'a)))
   (((Unbounded_Path :num # 'b -> (num # 'b -> num # 'b -> bool) ->
                      bool) (((, :num -> 'b -> num # 'b) 0) (x :'b)))
   ((UNCURRY :(num -> 'b -> num # 'b -> bool) -> num # 'b ->
              num # 'b -> bool) (\(t :num). (\(s :'b).
   ((UNCURRY :(num -> 'b -> bool) -> num # 'b -> bool) (\(t' :num).
   (\(s' :'b). ((/\ (((= :num -> num -> bool) $1) (SUC $3)))
   ((((COND :bool -> bool -> bool -> bool) (((= :num -> num -> bool)
   $3) 0)) ($5 (((, :'a -> 'b -> 'a # 'b) ((e :num -> 'a) 0)) $0)))
   (($4 (((, :'a -> 'b -> 'a # 'b) ((e :num -> 'a) (PRE $3))) $2))
   (((, :'a -> 'b -> 'a # 'b) ((e :num -> 'a) $3))
   $0))))))))))))))))`),
 ((Trace_Infinite_Path),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0))
   (e :num -> 'a)))
   (((Infinite_Path :num # 'b -> (num # 'b -> num # 'b -> bool) ->
                     bool) (((, :num -> 'b -> num # 'b) 0) (x :'b)))
   ((UNCURRY :(num -> 'b -> num # 'b -> bool) -> num # 'b ->
              num # 'b -> bool) (\(t :num). (\(s :'b).
   ((UNCURRY :(num -> 'b -> bool) -> num # 'b -> bool) (\(t' :num).
   (\(s' :'b). ((/\ (((= :num -> num -> bool) $1) (SUC $3)))
   ((((COND :bool -> bool -> bool -> bool) (((= :num -> num -> bool)
   $3) 0)) ($5 (((, :'a -> 'b -> 'a # 'b) ((e :num -> 'a) 0)) $0)))
   (($4 (((, :'a -> 'b -> 'a # 'b) ((e :num -> 'a) (PRE $3))) $2))
   (((, :'a -> 'b -> 'a # 'b) ((e :num -> 'a) $3))
   $0))))))))))))))))`),
 ((Subset_sim_Powerset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   (((Simulates :('a # ('b -> bool) -> bool) #
                 ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
                 ('a # ('b -> bool) -> bool) #
                 ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
                 bool)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1)
   $0)))))))`),
 ((Simulates_Subset_Powerset),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool). ((==>
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # ('a2 -> bool) -> bool) #
                 ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool) ->
                 bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3) $2))
   ((Subset :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
             ('a # ('a2 -> bool) -> bool) #
             ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $1)
   $0))))
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # ('a2 -> bool) -> bool) #
                 ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool) ->
                 bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3) $2))
   ((Powerset :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
               ('a # ('a2 -> bool) -> bool) #
               ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $1)
   $0))))))))))))`),
 ((Complete_Deterministic),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool). ((==> ((/\
   ((No_Dead :('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool) ->
              bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3)
   $1)))
   ((Deterministic :('a # 'a2 -> bool) #
                    ('a # 'a2 -> 'a # 'a2 -> bool) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $2)
   $0)))) ((==> ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   ((==>
   (((Trace :('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $4) $2))
   $0))
   (((Trace :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $3) $1))
   $0)))))
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # 'a2 -> bool) #
                 ('a # 'a2 -> 'a # 'a2 -> bool) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3) $1))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $2)
   $0))))))))))))`),
 ((Stutter_No_Dead),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). ((==>
   ((Stuttering :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                 bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((No_Dead :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
              bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1)
   $0)))))))`),
 ((No_Dead_THM),
  [],
  `(((= :bool -> bool -> bool)
   ((No_Dead :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
              bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool))
   (Q :'a # 'b -> bool)) (N :'a # 'b -> 'a # 'b -> bool))))
   ((! :('a -> bool) -> bool) (\(e' :'a). ((! :('b -> bool) -> bool)
   (\(s' :'b). ((==>
   (((Reachable :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                 'a # 'b -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool))
   (Q :'a # 'b -> bool)) (N :'a # 'b -> 'a # 'b -> bool)))
   (((, :'a -> 'b -> 'a # 'b) $1) $0)))
   ((? :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   ((? :((num -> 'b) -> bool) -> bool) (\(s :num -> 'b). ((/\
   (((= :'a -> 'a -> bool) ($1 0)) $3)) ((/\ (((= :'b -> 'b -> bool)
   ($0 0)) $2)) ((! :(num -> bool) -> bool) (\(t :num).
   (((N :'a # 'b -> 'a # 'b -> bool) (((, :'a -> 'b -> 'a # 'b) ($2
   $0)) ($1 $0))) (((, :'a -> 'b -> 'a # 'b) ($2 (SUC $0))) ($1 (SUC
   $0))))))))))))))))))`),
 ((Sim_imp_Imp'),
  [],
  `((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool). ((==>
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # ('a2 -> bool) -> bool) #
                 ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) -> bool) ->
                 bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $0) $1))
   ((Finite_Powerset :('a # 'a2 -> bool) #
                      ('a # 'a2 -> 'a # 'a2 -> bool) ->
                      ('a # ('a2 -> bool) -> bool) #
                      ('a # ('a2 -> bool) -> 'a # ('a2 -> bool) ->
                      bool))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $2)
   $3)))) ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $1) $2))
   $0))
   (((Trace :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $3) $4))
   $0)))))))))))))`),
 ((Trace_Finite_Powerset_eq_Trace),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   (((= :bool -> bool -> bool)
   (((Trace :('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
             (num -> 'a) -> bool)
   ((Finite_Powerset :('a # 'b -> bool) #
                      ('a # 'b -> 'a # 'b -> bool) ->
                      ('a # ('b -> bool) -> bool) #
                      ('a # ('b -> bool) -> 'a # ('b -> bool) ->
                      bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0))
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0))))))))`),
 ((Limit_Powerset_imp_Limit),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Limit_Trace :('a # ('b -> bool) -> bool) #
                   ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
                   (num -> 'a) -> bool)
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0))
   (((Limit_Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                   (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0))))))))`),
 ((Trace_Powerset_imp_Limit_Powerset),
  [],
  `((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
             (num -> 'a) -> bool)
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $2)))
   $0))
   (((Limit_Trace :('a # ('b -> bool) -> bool) #
                   ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
                   (num -> 'a) -> bool)
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $2)))
   $0))))))))`),
 ((Trace_Subset_imp_Trace_Powerset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
             (num -> 'a) -> bool)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0))
   (((Trace :('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
             (num -> 'a) -> bool)
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0))))))))`),
 ((Limit_Subset_imp_Trace_Subset),
  [],
  `((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Limit_Trace :('a # ('b -> bool) -> bool) #
                   ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
                   (num -> 'a) -> bool)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $2)))
   $0))
   (((Trace :('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
             (num -> 'a) -> bool)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $2)))
   $0))))))))`),
 ((Limit_imp_Limit_Subset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Limit_Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                   (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0))
   (((Limit_Trace :('a # ('b -> bool) -> bool) #
                   ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool) ->
                   (num -> 'a) -> bool)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0))))))))`),
 ((Prefix_Subset_imp_Prefix_Powerset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   ((! :(num -> bool) -> bool) (\(n :num). ((==>
   ((((Prefix_Trace :num ->
                     ('a # ('b -> bool) -> bool) #
                     ('a # ('b -> bool) -> 'a # ('b -> bool) ->
                     bool) -> (num -> 'a) -> bool) $0)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2)))
   $1))
   ((((Prefix_Trace :num ->
                     ('a # ('b -> bool) -> bool) #
                     ('a # ('b -> bool) -> 'a # ('b -> bool) ->
                     bool) -> (num -> 'a) -> bool) $0)
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2)))
   $1))))))))))`),
 ((Prefix_Powerset_imp_Prefix),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   ((! :(num -> bool) -> bool) (\(n :num). ((==>
   ((((Prefix_Trace :num ->
                     ('a # ('b -> bool) -> bool) #
                     ('a # ('b -> bool) -> 'a # ('b -> bool) ->
                     bool) -> (num -> 'a) -> bool) $0)
   ((Powerset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
               ('a # ('b -> bool) -> bool) #
               ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2)))
   $1))
   ((((Prefix_Trace :num ->
                     ('a # 'b -> bool) #
                     ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) ->
                     bool) $0)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2))
   $1))))))))))`),
 ((Prefix_imp_Prefix_Subset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   ((! :(num -> bool) -> bool) (\(n :num). ((==>
   ((((Prefix_Trace :num ->
                     ('a # 'b -> bool) #
                     ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) ->
                     bool) $0)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2))
   $1))
   ((((Prefix_Trace :num ->
                     ('a # ('b -> bool) -> bool) #
                     ('a # ('b -> bool) -> 'a # ('b -> bool) ->
                     bool) -> (num -> 'a) -> bool) $0)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $2)))
   $1))))))))))`),
 ((Deterministic_Subset),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((Deterministic :('a # ('b -> bool) -> bool) #
                    ('a # ('b -> bool) -> 'a # ('b -> bool) ->
                    bool) -> bool)
   ((Subset :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             ('a # ('b -> bool) -> bool) #
             ('a # ('b -> bool) -> 'a # ('b -> bool) -> bool))
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1)
   $0)))))))`),
 ((Prefix_Trace_imp_Prefix_Trace),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool). ((==>
   ((? :(('a -> 'a1 -> 'a2 -> bool) -> bool) -> bool)
   (\(R :'a -> 'a1 -> 'a2 -> bool). ((/\ ((! :('a -> bool) -> bool)
   (\(e :'a). ((! :('a1 -> bool) -> bool) (\(s1 :'a1). ((==> ($6
   (((, :'a -> 'a1 -> 'a # 'a1) $1) $0))) ((? :('a2 -> bool) -> bool)
   (\(s2 :'a2). ((/\ ($6 (((, :'a -> 'a2 -> 'a # 'a2) $2) $0))) ((($3
   $2) $1) $0)))))))))) ((! :('a -> bool) -> bool) (\(e :'a).
   ((! :('a -> bool) -> bool) (\(e' :'a). ((! :('a1 -> bool) -> bool)
   (\(s1 :'a1). ((! :('a1 -> bool) -> bool) (\(s1' :'a1).
   ((! :('a2 -> bool) -> bool) (\(s2 :'a2). ((==> ((/\ ((($5 $4) $2)
   $0)) (($7 (((, :'a -> 'a1 -> 'a # 'a1) $4) $2))
   (((, :'a -> 'a1 -> 'a # 'a1) $3) $1)))) ((? :('a2 -> bool) -> bool)
   (\(s2' :'a2). ((/\ ((($6 $4) $2) $0)) (($7
   (((, :'a -> 'a2 -> 'a # 'a2) $5) $1)) (((, :'a -> 'a2 -> 'a # 'a2)
   $4) $0)))))))))))))))))))) ((! :((num -> 'a) -> bool) -> bool)
   (\(e :num -> 'a). ((! :(num -> bool) -> bool) (\(n :num). ((==>
   ((((Prefix_Trace :num ->
                     ('a # 'a1 -> bool) #
                     ('a # 'a1 -> 'a # 'a1 -> bool) -> (num -> 'a) ->
                     bool) $0)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $5) $3))
   $1))
   ((((Prefix_Trace :num ->
                     ('a # 'a2 -> bool) #
                     ('a # 'a2 -> 'a # 'a2 -> bool) -> (num -> 'a) ->
                     bool) $0)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $4) $2))
   $1)))))))))))))))`),
 ((Deterministic_Limit_eq_Trace),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). ((==>
   ((Deterministic :('a # 'b -> bool) #
                    ('a # 'b -> 'a # 'b -> bool) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   (((= :bool -> bool -> bool)
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0))
   (((Limit_Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                   (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0)))))))))`),
 ((Deterministic_Limit_imp_Trace),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). ((==>
   ((Deterministic :('a # 'b -> bool) #
                    ('a # 'b -> 'a # 'b -> bool) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Limit_Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                   (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0))
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0)))))))))`),
 ((Trace_imp_Limit),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0))
   (((Limit_Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
                   (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1))
   $0))))))))`),
 ((Trace_eq_Trace_Inv),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(P :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). ((==> ((/\
   ((! :('a -> bool) -> bool) (\(e :'a). ((! :('b -> bool) -> bool)
   (\(s :'b). ((==> ($4 (((, :'a -> 'b -> 'a # 'b) $1) $0))) ($3
   (((, :'a -> 'b -> 'a # 'b) $1) $0))))))))
   ((! :('a -> bool) -> bool) (\(e :'a). ((! :('b -> bool) -> bool)
   (\(s :'b). ((! :('a -> bool) -> bool) (\(e' :'a).
   ((! :('b -> bool) -> bool) (\(s' :'b). ((==> ((/\ (($4
   (((, :'a -> 'b -> 'a # 'b) $3) $2)) (((, :'a -> 'b -> 'a # 'b) $1)
   $0))) ($5 (((, :'a -> 'b -> 'a # 'b) $3) $2)))) ($5
   (((, :'a -> 'b -> 'a # 'b) $1) $0)))))))))))))
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   (((= :bool -> bool -> bool)
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $1))
   $0))
   (((Trace_Inv :('a # 'b -> bool) # ('a # 'b -> bool) #
                 ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> bool) #
         ('a # 'b -> 'a # 'b -> bool)) $3)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0)))))))))))`),
 ((Trace_eq_Trace_Inv'),
  [],
  `((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(P :'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((==> ((? :(('a # 'b -> bool) -> bool) -> bool)
   (\(P' :'a # 'b -> bool). ((/\ ((! :('a -> bool) -> bool) (\(e :'a).
   ((! :('b -> bool) -> bool) (\(s :'b). ((==> ($3
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) ((/\ ($4
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) ($2 (((, :'a -> 'b -> 'a # 'b)
   $1) $0))))))))) ((! :('a -> bool) -> bool) (\(e :'a).
   ((! :('b -> bool) -> bool) (\(s :'b). ((! :('a -> bool) -> bool)
   (\(e' :'a). ((! :('b -> bool) -> bool) (\(s' :'b). ((==> ((/\ (($7
   (((, :'a -> 'b -> 'a # 'b) $3) $2)) (((, :'a -> 'b -> 'a # 'b) $1)
   $0))) ((/\ ($6 (((, :'a -> 'b -> 'a # 'b) $3) $2))) ($4
   (((, :'a -> 'b -> 'a # 'b) $3) $2))))) ((/\ ($6
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) ($4 (((, :'a -> 'b -> 'a # 'b)
   $1) $0)))))))))))))))) ((! :((num -> 'a) -> bool) -> bool)
   (\(e :num -> 'a). (((= :bool -> bool -> bool)
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $3))
   $0))
   (((Trace_Inv :('a # 'b -> bool) # ('a # 'b -> bool) #
                 ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> bool) #
         ('a # 'b -> 'a # 'b -> bool)) $1)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $3)))
   $0)))))))))))`),
 ((Trace_Inv_imp_Trace),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(P :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool).
   ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace_Inv :('a # 'b -> bool) # ('a # 'b -> bool) #
                 ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> bool) #
         ('a # 'b -> 'a # 'b -> bool)) $3)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0))
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $1))
   $0))))))))))`),
 ((Trace_imp_Trace_Inv),
  [],
  `((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(P :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). ((==>
   ((? :(('a # 'b -> bool) -> bool) -> bool) (\(P' :'a # 'b -> bool).
   ((/\ ((! :('a -> bool) -> bool) (\(e :'a).
   ((! :('b -> bool) -> bool) (\(s :'b). ((==> ($5
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) ((/\ ($4
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) ($2 (((, :'a -> 'b -> 'a # 'b)
   $1) $0))))))))) ((! :('a -> bool) -> bool) (\(e :'a).
   ((! :('b -> bool) -> bool) (\(s :'b). ((! :('a -> bool) -> bool)
   (\(e' :'a). ((! :('b -> bool) -> bool) (\(s' :'b). ((==> ((/\ (($5
   (((, :'a -> 'b -> 'a # 'b) $3) $2)) (((, :'a -> 'b -> 'a # 'b) $1)
   $0))) ((/\ ($6 (((, :'a -> 'b -> 'a # 'b) $3) $2))) ($4
   (((, :'a -> 'b -> 'a # 'b) $3) $2))))) ((/\ ($6
   (((, :'a -> 'b -> 'a # 'b) $1) $0))) ($4 (((, :'a -> 'b -> 'a # 'b)
   $1) $0)))))))))))))))) ((! :((num -> 'a) -> bool) -> bool)
   (\(e :num -> 'a). ((==>
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $3) $1))
   $0))
   (((Trace_Inv :('a # 'b -> bool) # ('a # 'b -> bool) #
                 ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> bool) #
         ('a # 'b -> 'a # 'b -> bool)) $3)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2) $1)))
   $0)))))))))))`),
 ((Trace_Inv_Trace'),
  [],
  `((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(P :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   (((Trace_Inv :('a # 'b -> bool) # ('a # 'b -> bool) #
                 ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> bool) #
         ('a # 'b -> 'a # 'b -> bool)) $2)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   $3))
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2)
   (\(s :'a # 'b). (\(s' :'a # 'b). ((/\ ($3 $1)) ((/\ ($3 $0)) (($2
   $1) $0))))))) $3))))))))))`),
 ((Trace_Inv_Trace),
  [],
  `((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(Q :'a # 'b -> bool).
   ((! :(('a # 'b -> bool) -> bool) -> bool) (\(P :'a # 'b -> bool).
   ((! :(('a # 'b -> 'a # 'b -> bool) -> bool) -> bool)
   (\(N :'a # 'b -> 'a # 'b -> bool). (((= :bool -> bool -> bool)
   (((Trace_Inv :('a # 'b -> bool) # ('a # 'b -> bool) #
                 ('a # 'b -> 'a # 'b -> bool) -> (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> bool) #
         ('a # 'b -> 'a # 'b -> bool)) $2)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $1) $0)))
   $3))
   (((Trace :('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'b -> bool) -> ('a # 'b -> 'a # 'b -> bool) ->
         ('a # 'b -> bool) # ('a # 'b -> 'a # 'b -> bool)) $2)
   (\(s :'a # 'b). (\(s' :'a # 'b). ((/\ ($3 $1)) (($2 $1) $0))))))
   $3))))))))))`),
 ((Sim_Trans),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool).
   ((! :(('a # 'a3 -> bool) -> bool) -> bool)
   (\(Q3 :'a # 'a3 -> bool).
   ((! :(('a # 'a3 -> 'a # 'a3 -> bool) -> bool) -> bool)
   (\(N3 :'a # 'a3 -> 'a # 'a3 -> bool). ((==> ((/\
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # 'a2 -> bool) #
                 ('a # 'a2 -> 'a # 'a2 -> bool) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $5) $4))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $3)
   $2)))
   (((Simulates :('a # 'a2 -> bool) #
                 ('a # 'a2 -> 'a # 'a2 -> bool) ->
                 ('a # 'a3 -> bool) #
                 ('a # 'a3 -> 'a # 'a3 -> bool) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $3) $2))
   (((, :('a # 'a3 -> bool) -> ('a # 'a3 -> 'a # 'a3 -> bool) ->
         ('a # 'a3 -> bool) # ('a # 'a3 -> 'a # 'a3 -> bool)) $1)
   $0))))
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # 'a3 -> bool) #
                 ('a # 'a3 -> 'a # 'a3 -> bool) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $5) $4))
   (((, :('a # 'a3 -> bool) -> ('a # 'a3 -> 'a # 'a3 -> bool) ->
         ('a # 'a3 -> bool) # ('a # 'a3 -> 'a # 'a3 -> bool)) $1)
   $0)))))))))))))))`),
 ((Sim_imp_Imp),
  [],
  `((! :(('a # 'a1 -> bool) -> bool) -> bool)
   (\(Q1 :'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> bool) -> bool) -> bool)
   (\(Q2 :'a # 'a2 -> bool).
   ((! :(('a # 'a1 -> 'a # 'a1 -> bool) -> bool) -> bool)
   (\(N1 :'a # 'a1 -> 'a # 'a1 -> bool).
   ((! :(('a # 'a2 -> 'a # 'a2 -> bool) -> bool) -> bool)
   (\(N2 :'a # 'a2 -> 'a # 'a2 -> bool). ((==>
   (((Simulates :('a # 'a1 -> bool) #
                 ('a # 'a1 -> 'a # 'a1 -> bool) ->
                 ('a # 'a2 -> bool) #
                 ('a # 'a2 -> 'a # 'a2 -> bool) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $3) $1))
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $2)
   $0))) ((! :((num -> 'a) -> bool) -> bool) (\(e :num -> 'a). ((==>
   (((Trace :('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a1 -> bool) -> ('a # 'a1 -> 'a # 'a1 -> bool) ->
         ('a # 'a1 -> bool) # ('a # 'a1 -> 'a # 'a1 -> bool)) $4) $2))
   $0))
   (((Trace :('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool) ->
             (num -> 'a) -> bool)
   (((, :('a # 'a2 -> bool) -> ('a # 'a2 -> 'a # 'a2 -> bool) ->
         ('a # 'a2 -> bool) # ('a # 'a2 -> 'a # 'a2 -> bool)) $3) $1))
   $0)))))))))))))`),
 ((Naive_Lemma),
  [],
  `((! :(((num -> 'a) -> bool) -> bool) -> bool)
   (\(P :(num -> 'a) -> bool).
   ((? :(('a # (num -> 'a) -> bool) -> bool) -> bool)
   (\(Q :'a # (num -> 'a) -> bool).
   ((? :(('a # (num -> 'a) -> 'a # (num -> 'a) -> bool) -> bool) ->
        bool) (\(N :'a # (num -> 'a) -> 'a # (num -> 'a) -> bool).
   (((= :((num -> 'a) -> bool) -> ((num -> 'a) -> bool) -> bool) $2)
   ((Trace :('a # (num -> 'a) -> bool) #
            ('a # (num -> 'a) -> 'a # (num -> 'a) -> bool) ->
            (num -> 'a) -> bool)
   (((, :('a # (num -> 'a) -> bool) ->
         ('a # (num -> 'a) -> 'a # (num -> 'a) -> bool) ->
         ('a # (num -> 'a) -> bool) #
         ('a # (num -> 'a) -> 'a # (num -> 'a) -> bool)) $1)
   $0)))))))))`)]
