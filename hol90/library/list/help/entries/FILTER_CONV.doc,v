head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.32.37;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.32.37;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC FILTER_CONV

\TYPE {FILTER_CONV : conv -> conv}

\SYNOPSIS
Computes by inference the result of applying a predicate to the elements of a
list.

\KEYWORDS
conversion, list.

\DESCRIBE
{FILTER_CONV} takes a conversion {conv} and a term {tm} in the following form:
{
   FILTER P [x0;...xn]
}
\noindent It returns the theorem
{
   |- FILTER P [x0;...xn] = [...xi...]
}
\noindent where for every {xi} occurring in the right-hand side of the resulting theorem, {conv (--`P xi`--)} returns a theorem {|- P xi = T}.

\FAILURE
{FILTER_CONV conv tm} fails if {tm} is not of the form described above.

\EXAMPLE
Evaluating
{
   FILTER_CONV bool_EQ_CONV (--`FILTER ($= T) [T;F;T]`--);
}
\noindent returns the following theorem:
{
   |- FILTER($= T)[T;F;T] = [T;T]
}
\noindent   In general, if the predicate {P} is an explicit lambda abstraction
{(\x. P x)}, the conversion should be in the form
{
   (BETA_CONV THENC conv')
}

\SEEALSO
FOLDL_CONV, FOLDR_CONV, list_FOLD_CONV.

\ENDDOC

@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
