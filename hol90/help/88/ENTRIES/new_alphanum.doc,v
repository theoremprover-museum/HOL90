head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.35.10;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.35.10;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC new_alphanum

\TYPE {new_alphanum : (string -> void)}

\SYNOPSIS
Defines a character to be alphanumeric.

\DESCRIBE
When given a string, which should be of length 1, {new_alphanum} extends
the scope of the definition of `alphanumeric' as used by {is_alphanum}.
(If the supplied string is null ({``}) then {new_alphanum} has no effect.)

The term `alphanumeric' initially means one of the following:
{a..z A..Z 0..9 _ '}. A call to {new_alphanum} can affect ML lexical analysis
dynamically, because the function {is_alphanum} is called by the lexical
analyzer to check for characters beyond the first in an identifier.

\EXAMPLE
Suppose we set a variable {y} as follows:
{
   #let y = 2;;
   y = 2 : int
}
\noindent then {y-1} is a numeric expression:
{
   #let x = y-1;;
   x = 1 : int
}
\noindent but after defining {-} to be alphanumeric:
{
   #new_alphanum `-`;;
   () : void
}
\noindent {y-1} counts as a single token (which is undefined).
{
   #let x = y-1;;
   unbound or non-assignable variable y-1
}
\FAILURE
Fails if the string has length greater than 1.

\SEEALSO
ascii, ascii_code, is_alphanum, is_letter, new_alphanum.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
