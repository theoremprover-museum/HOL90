thid = (comp_unity, 942752039, 42683)
axioms = []
definitions = []
theorems =
[((COMP_UNITY_cor14),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p0 :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   (((INVARIANT :('a -> bool) -> ('a -> bool) # ('a -> 'a) list ->
                 bool) $2)
   (((, :('a -> bool) -> ('a -> 'a) list ->
         ('a -> bool) # ('a -> 'a) list) $3)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0))))
   (((INVARIANT :('a -> bool) -> ('a -> bool) # ('a -> 'a) list ->
                 bool) $2)
   (((, :('a -> bool) -> ('a -> 'a) list ->
         ('a -> bool) # ('a -> 'a) list) $3)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $0) $1))))))))))))`),
 ((COMP_UNITY_cor13),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0))) (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $0) $1)))))))))`),
 ((COMP_UNITY_cor12),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(Pr1 :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(Pr2 :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   ((((LEADSTO :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))
   ((((LEADSTO :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $0) $1)))))))))))`),
 ((COMP_UNITY_cor11),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $0) $1)))))))))))`),
 ((COMP_UNITY_cor10),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $0) $1)))))))))))`),
 ((COMP_UNITY_cor9),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==> ((/\ (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool) $3)
   $1))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $0)))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))))))))))`),
 ((COMP_UNITY_cor8),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==>
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $2) ((~* :('a -> bool) -> 'a -> bool) $2)) $1))
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $2) ((~* :('a -> bool) -> 'a -> bool) $2))
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))))))))`),
 ((COMP_UNITY_cor7),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) -> bool) -> bool) (\(st :'a -> 'a).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((==>
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2)
   (((CONS :('a -> 'a) -> ('a -> 'a) list -> ('a -> 'a) list) $1)
   $0)))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $0))))))))))`),
 ((COMP_UNITY_cor6),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==>
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $1))))))))))`),
 ((COMP_UNITY_cor5),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==>
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $0))))))))))`),
 ((COMP_UNITY_cor4),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==> ((/\
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2) $1))
   (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool) $3) $0)))
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))))))))))`),
 ((COMP_UNITY_cor3),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p0 :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==> ((/\
   (((INVARIANT :('a -> bool) -> ('a -> bool) # ('a -> 'a) list ->
                 bool) $2)
   (((, :('a -> bool) -> ('a -> 'a) list ->
         ('a -> bool) # ('a -> 'a) list) $3) $1)))
   (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool) $2) $0)))
   (((INVARIANT :('a -> bool) -> ('a -> bool) # ('a -> 'a) list ->
                 bool) $2)
   (((, :('a -> bool) -> ('a -> 'a) list ->
         ('a -> bool) # ('a -> 'a) list) $3)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0))))))))))))`),
 ((COMP_UNITY_cor2),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==> ((/\
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $1))
   (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool) $3) $0)))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))))))))))`),
 ((COMP_UNITY_cor1),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0))) ((/\ (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool)
   $2) $1)) (((STABLE :('a -> bool) -> ('a -> 'a) list -> bool) $2)
   $0)))))))))`),
 ((COMP_UNITY_cor0),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p0 :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   (((INVARIANT :('a -> bool) -> ('a -> bool) # ('a -> 'a) list ->
                 bool) $2)
   (((, :('a -> bool) -> ('a -> 'a) list ->
         ('a -> bool) # ('a -> 'a) list) $3)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))) ((/\
   (((INVARIANT :('a -> bool) -> ('a -> bool) # ('a -> 'a) list ->
                 bool) $2)
   (((, :('a -> bool) -> ('a -> 'a) list ->
         ('a -> bool) # ('a -> 'a) list) $3) $1)))
   (((INVARIANT :('a -> bool) -> ('a -> bool) # ('a -> 'a) list ->
                 bool) $2)
   (((, :('a -> bool) -> ('a -> 'a) list ->
         ('a -> bool) # ('a -> 'a) list) $3) $0))))))))))))`),
 ((COMP_ENSURES_cor1),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==> ((/\
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2) $0))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $1)))
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))))))))))`),
 ((COMP_ENSURES_cor0),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   ((==> ((/\
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2) $1))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $0)))
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0)))))))))))`),
 ((COMP_ENSURES_thm1),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0))) ((\/ ((/\
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2) $1))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $0))) ((/\
   ((((ENSURES :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
                bool) $3) $2) $0))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $1))))))))))))`),
 ((COMP_UNLESS_thm1),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(q :'a -> bool).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(FPr :('a -> 'a) list).
   ((! :(('a -> 'a) list -> bool) -> bool) (\(GPr :('a -> 'a) list).
   (((= :bool -> bool -> bool)
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2)
   (((APPEND :('a -> 'a) list -> ('a -> 'a) list -> ('a -> 'a) list)
   $1) $0))) ((/\
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $1))
   ((((UNLESS :('a -> bool) -> ('a -> bool) -> ('a -> 'a) list ->
               bool) $3) $2) $0)))))))))))`)]
