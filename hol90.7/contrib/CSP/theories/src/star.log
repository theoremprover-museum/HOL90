

          HHH                 LL
          HHH                  LL
          HHH                   LL
          HHH                    LL
          HHH          OOOO       LL
          HHHHHHH     OO  OO       LL
          HHHHHHH     OO  OO       LLL
          HHH          OOOO        LLLL
          HHH                     LL  LL
          HHH                    LL    LL
          HHH                   LL      LL
          HHH                  LL        LL90.7

Created on Tue Nov 15 10:19:01 GMT 1994
using: Standard ML of New Jersey, Version 0.93, February 15, 1993


val it = () : unit
val it = () : unit
- [opening star.sml]

Declaring theory "star".

Theory "CSP_base" already consistent with disk, hence not exported.
val it = () : unit
val it = () : unit
val trace = (==`:'a list`==) : hol_type
val it = [(),()] : unit list
val NOT_LENGTH_EQ = |- !l2 l1. ~(LENGTH l1 = LENGTH l2) ==> ~(l1 = l2) : thm
val RESTRICT =
  |- (!A. RESTRICT [] A = []) /\
     (!x t A.
       RESTRICT (CONS x t) A =
       ((x IN A) => (CONS x (RESTRICT t A)) | (RESTRICT t A))) : thm
val REST_CONS_THM = |- !a A s. ~(RESTRICT s A = CONS a s) : thm
val it = [(),()] : unit list
val STAR = |- !A. STAR A = {s | RESTRICT s A = s} : thm
val NIL_IN_STAR = |- !A. [] IN STAR A : thm
val SINGLE_STAR = |- !x A. [x] IN STAR A = x IN A : thm
val CONS_STAR = |- !a t A. CONS a t IN STAR A = a IN A /\ t IN STAR A : thm
val APPEND_STAR = |- !s t A. APPEND s t IN STAR A = s IN STAR A /\ t IN STAR A
  : thm
val STAR_INDUCT = |- !A. STAR A = {t | (t = []) \/ HD t IN A /\ TL t IN STAR A}
  : thm
val SUBSET_STAR = |- !A B. A SUBSET B ==> STAR A SUBSET STAR B : thm

Theory "star" exported.
val it = () : unit
val it = () : unit
Theory: star

Parents:
    restrict
    CSP_base

Type constants:
    

Term constants:
    STAR (Prefix)   :'a set -> 'a list set

Axioms:
    

Definitions:
    STAR |- !A. STAR A = {s | RESTRICT s A = s}

Theorems:
    NIL_IN_STAR |- !A. [] IN STAR A
    SINGLE_STAR |- !x A. [x] IN STAR A = x IN A
    CONS_STAR |- !a t A. CONS a t IN STAR A = a IN A /\ t IN STAR A
    APPEND_STAR |- !s t A. APPEND s t IN STAR A = s IN STAR A /\ t IN STAR A
    STAR_INDUCT |- !A. STAR A = {t | (t = []) \/ HD t IN A /\ TL t IN STAR A}
    SUBSET_STAR |- !A B. A SUBSET B ==> STAR A SUBSET STAR B

Theory "star" is consistent with disk.
val it = () : unit
