head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.34.26;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.34.26;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC X_FUN_EQ_CONV

\TYPE {X_FUN_EQ_CONV : (term -> conv)}

\SYNOPSIS
Performs extensionality conversion for functions (function equality).

\KEYWORDS
conversion, extensionality.

\DESCRIBE
The conversion {X_FUN_EQ_CONV} embodies the fact that two functions are equal
precisely when they give the same results for all values to which they can be
applied. For any variable {"x"} and equation {"f = g"}, where {x} is of type
{ty1} and {f} and {g} are functions of type {ty1->ty2}, a call to
{X_FUN_EQ_CONV "x" "f = g"} returns the theorem:
{
   |- (f = g) = (!x. f x = g x)
}
\FAILURE
{X_FUN_EQ_CONV x tm} fails if {x} is not a variable or if {tm} is not an
equation {f = g} where {f} and {g} are functions.  Furthermore, if {f} and {g}
are functions of type {ty1->ty2}, then the variable {x} must have type {ty1};
otherwise the conversion fails.  Finally, failure also occurs if {x} is free in
either {f} or {g}.

\SEEALSO
EXT, FUN_EQ_CONV.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
