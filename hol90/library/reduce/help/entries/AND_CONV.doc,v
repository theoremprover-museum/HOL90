head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.31.23;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.31.23;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC AND_CONV

\TYPE {AND_CONV : conv}

\SYNOPSIS
Simplifies certain boolean conjunction expressions.

\LIBRARY reduce

\DESCRIBE
If {tm} corresponds to one of the forms given below, where {t} is an arbitrary
term of type {bool}, then {AND_CONV tm} returns the corresponding theorem. Note
that in the last case the conjuncts need only be alpha-equivalent rather than
strictly identical.
{
   AND_CONV "T /\ t" = |- T /\ t = t
   AND_CONV "t /\ T" = |- t /\ T = t
   AND_CONV "F /\ t" = |- F /\ t = F
   AND_CONV "t /\ F" = |- t /\ F = F
   AND_CONV "t /\ t" = |- t /\ t = t
}

\FAILURE
{AND_CONV tm} fails unless {tm} has one of the forms indicated above.

\EXAMPLE
{
#AND_CONV "(x = T) /\ F";;
|- (x = T) /\ F = F

#AND_CONV "T /\ (x = T)";;
|- T /\ (x = T) = (x = T)

#AND_CONV "(?x. x=T) /\ (?y. y=T)";;
|- (?x. x = T) /\ (?y. y = T) = (?x. x = T)
}

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
