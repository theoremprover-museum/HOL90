

          HHH                 LL
          HHH                  LL
          HHH                   LL
          HHH                    LL
          HHH          OOOO       LL
          HHHHHHH     OO  OO       LL
          HHHHHHH     OO  OO       LLL
          HHH          OOOO        LLLL
          HHH                     LL  LL
          HHH                    LL    LL
          HHH                   LL      LL
          HHH                  LL        LL90.7

Created on Tue Nov 15 10:19:01 GMT 1994
using: Standard ML of New Jersey, Version 0.93, February 15, 1993


val it = () : unit
val it = () : unit
- [opening list_lib1.sml]

Declaring theory "list_lib1".

Theory "CSP_base" already consistent with disk, hence not exported.
val it = () : unit
val APPEND_ID = |- !l l'. (l = APPEND l l') = l' = [] : thm
val APPEND_NIL = |- !l. APPEND l [] = l : thm
val LENGTH_LESS_EQ =
  |- !l1 l2. LENGTH l1 <= LENGTH l2 ==> (!a. LENGTH l1 < LENGTH (CONS a l2))
  : thm
val NOT_LENGTH_EQ = |- !l2 l1. ~(LENGTH l1 = LENGTH l2) ==> ~(l1 = l2) : thm
val APPEND_EQ_NIL = |- !l1 l2. (APPEND l1 l2 = []) = (l1 = []) /\ (l2 = [])
  : thm
val NULL_EQ_NIL = |- !l. (l = []) = NULL l : thm
val HD_APPEND = |- !l. ~(l = []) ==> (!l'. HD (APPEND l l') = HD l) : thm
val TL_APPEND = |- !l. ~(l = []) ==> (!l'. TL (APPEND l l') = APPEND (TL l) l')
  : thm
val ONE_MEMBER_LIST = |- !s t a. (APPEND s t = [a]) ==> (s = []) \/ (s = [a])
  : thm
val CONS_MEMBER_LIST =
  |- !s s' t a.
       (APPEND s t = CONS a s') ==>
       (s = []) \/ (?r. (s = CONS a r) /\ (s' = APPEND r t)) : thm
val CONS_EQ_APPEND = |- !a l. CONS a l = APPEND [a] l : thm

Theory "list_lib1" exported.
val it = () : unit
val it = () : unit
Theory: list_lib1

Parents:
    CSP_base

Type constants:
    

Term constants:
    

Axioms:
    

Definitions:
    

Theorems:
    APPEND_ID |- !l l'. (l = APPEND l l') = l' = []
    APPEND_NIL |- !l. APPEND l [] = l
    LENGTH_LESS_EQ
    |- !l1 l2. LENGTH l1 <= LENGTH l2 ==> (!a. LENGTH l1 < LENGTH (CONS a l2))
    NOT_LENGTH_EQ |- !l2 l1. ~(LENGTH l1 = LENGTH l2) ==> ~(l1 = l2)
    APPEND_EQ_NIL |- !l1 l2. (APPEND l1 l2 = []) = (l1 = []) /\ (l2 = [])
    NULL_EQ_NIL |- !l. (l = []) = NULL l
    HD_APPEND |- !l. ~(l = []) ==> (!l'. HD (APPEND l l') = HD l)
    TL_APPEND |- !l. ~(l = []) ==> (!l'. TL (APPEND l l') = APPEND (TL l) l')
    ONE_MEMBER_LIST |- !s t a. (APPEND s t = [a]) ==> (s = []) \/ (s = [a])
    CONS_MEMBER_LIST
    |- !s s' t a.
         (APPEND s t = CONS a s') ==>
         (s = []) \/ (?r. (s = CONS a r) /\ (s' = APPEND r t))
    CONS_EQ_APPEND |- !a l. CONS a l = APPEND [a] l

Theory "list_lib1" is consistent with disk.
val it = () : unit
