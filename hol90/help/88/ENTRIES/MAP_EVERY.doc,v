head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.34.07;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.34.07;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC MAP_EVERY

\TYPE {MAP_EVERY : ((* -> tactic) -> * list -> tactic)}

\SYNOPSIS
Sequentially applies all tactics given by mapping a function over a list.

\KEYWORDS
theorem-tactical, list.

\DESCRIBE
When applied to a tactic-producing function {f} and an operand list
{[x1;...;xn]}, the elements of which have the same type as {f}'s domain type,
{MAP_EVERY} maps the function {f} over the list, producing a list of
tactics, then applies these tactics in sequence as in the case of {EVERY}.
The effect is:
{
   MAP_EVERY f [x1;...;xn] = (f x1) THEN ... THEN (f xn)
}
\noindent If the operand list is empty, then {MAP_EVERY} has no effect.

\FAILURE
The application of {MAP_EVERY} to a function and operand list fails iff
the function fails when applied to any element in the list. The
resulting tactic fails iff any of the resulting tactics fails.

\EXAMPLE
A convenient way of doing case analysis over several boolean variables is:
{
   MAP_EVERY BOOL_CASES_TAC ["var1:bool";...;"varn:bool"]
}
\SEEALSO
EVERY, FIRST, MAP_FIRST, THEN.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
