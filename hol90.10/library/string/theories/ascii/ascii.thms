thid = (ascii, 942751591, 879242)
axioms = []
definitions =
[((ASCII_DEF),
  [],
  `((! :(bool -> bool) -> bool) (\(b0 :bool).
   ((! :(bool -> bool) -> bool) (\(b1 :bool).
   ((! :(bool -> bool) -> bool) (\(b2 :bool).
   ((! :(bool -> bool) -> bool) (\(b3 :bool).
   ((! :(bool -> bool) -> bool) (\(b4 :bool).
   ((! :(bool -> bool) -> bool) (\(b5 :bool).
   ((! :(bool -> bool) -> bool) (\(b6 :bool).
   ((! :(bool -> bool) -> bool) (\(b7 :bool).
   (((= :ascii -> ascii -> bool) ((((((((ASCII $7) $6) $5) $4) $3) $2)
   $1) $0)) (ABS_ascii
   (((Node :bool # bool # bool # bool # bool # bool # bool # bool ->
            (bool # bool # bool # bool # bool # bool # bool # bool)
            ltree list ->
            (bool # bool # bool # bool # bool # bool # bool # bool)
            ltree)
   (((, :bool -> bool # bool # bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool # bool # bool) $7)
   (((, :bool -> bool # bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool # bool) $6)
   (((, :bool -> bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool) $5)
   (((, :bool -> bool # bool # bool # bool ->
         bool # bool # bool # bool # bool) $4)
   (((, :bool -> bool # bool # bool -> bool # bool # bool # bool) $3)
   (((, :bool -> bool # bool -> bool # bool # bool) $2)
   (((, :bool -> bool -> bool # bool) $1) $0))))))))
   (NIL :(bool # bool # bool # bool # bool # bool # bool # bool) ltree
         list))))))))))))))))))))`),
 ((ascii_ISO_DEF),
  [],
  `((/\ ((! :(ascii -> bool) -> bool) (\(a :ascii).
   (((= :ascii -> ascii -> bool) (ABS_ascii (REP_ascii $0))) $0))))
   ((! :((bool # bool # bool # bool # bool # bool # bool # bool)
         ltree -> bool) -> bool)
   (\(r :(bool # bool # bool # bool # bool # bool # bool # bool)
         ltree). (((= :bool -> bool -> bool)
   (((TRP :(bool # bool # bool # bool # bool # bool # bool # bool ->
           (bool # bool # bool # bool # bool # bool # bool # bool)
           ltree list -> bool) ->
           (bool # bool # bool # bool # bool # bool # bool # bool)
           ltree -> bool)
   (\(v :bool # bool # bool # bool # bool # bool # bool # bool).
   (\(tl :(bool # bool # bool # bool # bool # bool # bool # bool)
          ltree list). ((/\ ((? :(bool -> bool) -> bool) (\(b0 :bool).
   ((? :(bool -> bool) -> bool) (\(b1 :bool).
   ((? :(bool -> bool) -> bool) (\(b2 :bool).
   ((? :(bool -> bool) -> bool) (\(b3 :bool).
   ((? :(bool -> bool) -> bool) (\(b4 :bool).
   ((? :(bool -> bool) -> bool) (\(b5 :bool).
   ((? :(bool -> bool) -> bool) (\(b6 :bool).
   ((? :(bool -> bool) -> bool) (\(b7 :bool).
   (((= :bool # bool # bool # bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool # bool # bool ->
         bool) $9)
   (((, :bool -> bool # bool # bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool # bool # bool) $7)
   (((, :bool -> bool # bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool # bool) $6)
   (((, :bool -> bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool) $5)
   (((, :bool -> bool # bool # bool # bool ->
         bool # bool # bool # bool # bool) $4)
   (((, :bool -> bool # bool # bool -> bool # bool # bool # bool) $3)
   (((, :bool -> bool # bool -> bool # bool # bool) $2)
   (((, :bool -> bool -> bool # bool) $1) $0)))))))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(bool # bool # bool # bool # bool # bool # bool # bool)
             ltree list -> num) $0)) 0))))) $0))
   (((= :(bool # bool # bool # bool # bool # bool # bool # bool)
         ltree ->
         (bool # bool # bool # bool # bool # bool # bool # bool)
         ltree -> bool) (REP_ascii (ABS_ascii $0))) $0)))))`),
 ((ascii_TY_DEF),
  [],
  `((? :((ascii ->
         (bool # bool # bool # bool # bool # bool # bool # bool)
         ltree) -> bool) -> bool)
   (\(rep :ascii ->
           (bool # bool # bool # bool # bool # bool # bool # bool)
           ltree).
   (((TYPE_DEFINITION :((bool # bool # bool # bool # bool # bool #
                        bool # bool) ltree -> bool) ->
                       (ascii ->
                       (bool # bool # bool # bool # bool # bool #
                       bool # bool) ltree) -> bool)
   ((TRP :(bool # bool # bool # bool # bool # bool # bool # bool ->
          (bool # bool # bool # bool # bool # bool # bool # bool)
          ltree list -> bool) ->
          (bool # bool # bool # bool # bool # bool # bool # bool)
          ltree -> bool)
   (\(v :bool # bool # bool # bool # bool # bool # bool # bool).
   (\(tl :(bool # bool # bool # bool # bool # bool # bool # bool)
          ltree list). ((/\ ((? :(bool -> bool) -> bool) (\(b0 :bool).
   ((? :(bool -> bool) -> bool) (\(b1 :bool).
   ((? :(bool -> bool) -> bool) (\(b2 :bool).
   ((? :(bool -> bool) -> bool) (\(b3 :bool).
   ((? :(bool -> bool) -> bool) (\(b4 :bool).
   ((? :(bool -> bool) -> bool) (\(b5 :bool).
   ((? :(bool -> bool) -> bool) (\(b6 :bool).
   ((? :(bool -> bool) -> bool) (\(b7 :bool).
   (((= :bool # bool # bool # bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool # bool # bool ->
         bool) $9)
   (((, :bool -> bool # bool # bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool # bool # bool) $7)
   (((, :bool -> bool # bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool # bool) $6)
   (((, :bool -> bool # bool # bool # bool # bool ->
         bool # bool # bool # bool # bool # bool) $5)
   (((, :bool -> bool # bool # bool # bool ->
         bool # bool # bool # bool # bool) $4)
   (((, :bool -> bool # bool # bool -> bool # bool # bool # bool) $3)
   (((, :bool -> bool # bool -> bool # bool # bool) $2)
   (((, :bool -> bool -> bool # bool) $1) $0)))))))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(bool # bool # bool # bool # bool # bool # bool # bool)
             ltree list -> num) $0)) 0)))))) $0)))`)]
theorems =
[((ASCII_11),
  [],
  `((! :(bool -> bool) -> bool) (\(b0 :bool).
   ((! :(bool -> bool) -> bool) (\(b1 :bool).
   ((! :(bool -> bool) -> bool) (\(b2 :bool).
   ((! :(bool -> bool) -> bool) (\(b3 :bool).
   ((! :(bool -> bool) -> bool) (\(b4 :bool).
   ((! :(bool -> bool) -> bool) (\(b5 :bool).
   ((! :(bool -> bool) -> bool) (\(b6 :bool).
   ((! :(bool -> bool) -> bool) (\(b7 :bool).
   ((! :(bool -> bool) -> bool) (\(b0' :bool).
   ((! :(bool -> bool) -> bool) (\(b1' :bool).
   ((! :(bool -> bool) -> bool) (\(b2' :bool).
   ((! :(bool -> bool) -> bool) (\(b3' :bool).
   ((! :(bool -> bool) -> bool) (\(b4' :bool).
   ((! :(bool -> bool) -> bool) (\(b5' :bool).
   ((! :(bool -> bool) -> bool) (\(b6' :bool).
   ((! :(bool -> bool) -> bool) (\(b7' :bool).
   (((= :bool -> bool -> bool) (((= :ascii -> ascii -> bool)
   ((((((((ASCII $15) $14) $13) $12) $11) $10) $9) $8)) ((((((((ASCII
   $7) $6) $5) $4) $3) $2) $1) $0))) ((/\ (((= :bool -> bool -> bool)
   $15) $7)) ((/\ (((= :bool -> bool -> bool) $14) $6)) ((/\
   (((= :bool -> bool -> bool) $13) $5)) ((/\
   (((= :bool -> bool -> bool) $12) $4)) ((/\
   (((= :bool -> bool -> bool) $11) $3)) ((/\
   (((= :bool -> bool -> bool) $10) $2)) ((/\
   (((= :bool -> bool -> bool) $9) $1)) (((= :bool -> bool -> bool)
   $8) $0)))))))))))))))))))))))))))))))))))))))))`),
 ((ascii_CASES),
  [],
  `((! :(ascii -> bool) -> bool) (\(a :ascii).
   ((? :(bool -> bool) -> bool) (\(b0 :bool).
   ((? :(bool -> bool) -> bool) (\(b1 :bool).
   ((? :(bool -> bool) -> bool) (\(b2 :bool).
   ((? :(bool -> bool) -> bool) (\(b3 :bool).
   ((? :(bool -> bool) -> bool) (\(b4 :bool).
   ((? :(bool -> bool) -> bool) (\(b5 :bool).
   ((? :(bool -> bool) -> bool) (\(b6 :bool).
   ((? :(bool -> bool) -> bool) (\(b7 :bool).
   (((= :ascii -> ascii -> bool) $8) ((((((((ASCII $7) $6) $5) $4) $3)
   $2) $1) $0))))))))))))))))))))`),
 ((ascii_Induct),
  [],
  `((! :((ascii -> bool) -> bool) -> bool) (\(P :ascii -> bool). ((==>
   ((! :(bool -> bool) -> bool) (\(b0 :bool).
   ((! :(bool -> bool) -> bool) (\(b1 :bool).
   ((! :(bool -> bool) -> bool) (\(b2 :bool).
   ((! :(bool -> bool) -> bool) (\(b3 :bool).
   ((! :(bool -> bool) -> bool) (\(b4 :bool).
   ((! :(bool -> bool) -> bool) (\(b5 :bool).
   ((! :(bool -> bool) -> bool) (\(b6 :bool).
   ((! :(bool -> bool) -> bool) (\(b7 :bool). ($8 ((((((((ASCII $7)
   $6) $5) $4) $3) $2) $1) $0)))))))))))))))))))
   ((! :(ascii -> bool) -> bool) (\(a :ascii). ($1 $0))))))`),
 ((ascii_Axiom),
  [],
  `((! :((bool -> bool -> bool -> bool -> bool -> bool -> bool ->
         bool -> 'a) -> bool) -> bool)
   (\(f :bool -> bool -> bool -> bool -> bool -> bool -> bool ->
         bool -> 'a). ((?! :((ascii -> 'a) -> bool) -> bool)
   (\(fn :ascii -> 'a). ((! :(bool -> bool) -> bool) (\(b0 :bool).
   ((! :(bool -> bool) -> bool) (\(b1 :bool).
   ((! :(bool -> bool) -> bool) (\(b2 :bool).
   ((! :(bool -> bool) -> bool) (\(b3 :bool).
   ((! :(bool -> bool) -> bool) (\(b4 :bool).
   ((! :(bool -> bool) -> bool) (\(b5 :bool).
   ((! :(bool -> bool) -> bool) (\(b6 :bool).
   ((! :(bool -> bool) -> bool) (\(b7 :bool). (((= :'a -> 'a -> bool)
   ($8 ((((((((ASCII $7) $6) $5) $4) $3) $2) $1) $0))) (((((((($9 $7)
   $6) $5) $4) $3) $2) $1) $0))))))))))))))))))))))`)]
