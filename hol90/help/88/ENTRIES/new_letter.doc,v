head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.35.12;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.35.12;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC new_letter

\TYPE {new_letter : (string -> void)}

\SYNOPSIS
Defines a character to be a letter.

\DESCRIBE
When given a string, which should be of length 1, {new_letter} extends
the scope of the definition of `letter' as used by {is_letter}.
(If the supplied string is null ({``}) {new_letter} has no effect.)

The definition of a `letter' by default includes (only)
{a..z A..Z}. A call to {new_letter} can affect ML lexical analysis dynamically,
because the function {is_letter} is called by the lexical analyzer to check for
the start of an identifier.

\EXAMPLE
In the default state, {-1} is parsed as the application of {-} to {1}:
{
   #let x = -1 ;;
   x = -1 : int
}
\noindent but if we make {-} into a letter:
{
   #new_letter(`-`);;
   () : void
}
\noindent then {-1} parses as an (undefined) identifier.
{
   #let x = -1;;
   unbound or non-assignable variable -1
}
\FAILURE
Fails if the string has length greater than 1.

\SEEALSO
ascii, ascii_code, is_alphanum, is_letter, new_alphanum.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
