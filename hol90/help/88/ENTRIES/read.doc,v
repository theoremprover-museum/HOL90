head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.35.25;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.35.25;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC read

\TYPE {read : (string -> string)}

\SYNOPSIS
Reads a character from a file.

\KEYWORDS
file.

\DESCRIBE
When applied to a string describing a port (a port is the standard ML file
descriptor, normally obtained from a call to {openi}), the function {read}
reads in a character from that port, and advances the internal state so that a
subsequent call to {read} will return the next character. When the end of the
file is reached, the multi-character string `nil` will be returned.

\FAILURE
May fail or hang in system-dependent ways when given an invalid port
descriptor.

\EXAMPLE
The following assumes that HOL is being run under Unix. It will overwrite an
existing file {test-file} in the current directory. Notice that the actual
string returned by {openi} may vary on other systems.
{
   #system `echo "Hi" >test-file`;;
   0 : int

   #let port = openi `test-file`;;
   port = `%test-file` : string

   #read port, read port, read port, read port, read port;;
   (`H`, `i`, `
   `, `nil`, `nil`)
   : (string # string # string # string # string)

   #close port;;
   () : void
}
\SEEALSO
append_openw, close, openi, openw, tty_read, tty_write, write.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
