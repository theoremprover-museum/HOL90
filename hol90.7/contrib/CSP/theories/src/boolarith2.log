

          HHH                 LL
          HHH                  LL
          HHH                   LL
          HHH                    LL
          HHH          OOOO       LL
          HHHHHHH     OO  OO       LL
          HHHHHHH     OO  OO       LLL
          HHH          OOOO        LLLL
          HHH                     LL  LL
          HHH                    LL    LL
          HHH                   LL      LL
          HHH                  LL        LL90.7

Created on Tue Nov 15 10:19:01 GMT 1994
using: Standard ML of New Jersey, Version 0.93, February 15, 1993


val it = () : unit
val it = () : unit
- [opening boolarith2.sml]

Declaring theory "boolarith2".

Theory "CSP_base" already consistent with disk, hence not exported.
val it = () : unit
val it = () : unit
val F_IMP_EX_F = |- F ==> (?t. F) : thm
val EX_F_IMP_F = |- (?t. F) ==> F : thm
val F_FROM_EX_F = |- (?t. F) = F : thm
val ID_IMP = |- !b. b ==> b : thm
val CONJ_IMP_TAUT = |- !a b c. (a ==> b) ==> a /\ c ==> b /\ c : thm
val CONJ2_IMP_TAUT = |- !a b c d. (a ==> b) ==> d /\ a /\ c ==> d /\ b /\ c
  : thm
val CONJ3_IMP_TAUT = |- !a b c. (a ==> b) ==> c /\ a ==> c /\ b : thm
val NOT_LEQ = |- !a b. ~(a <= b) = b < a : thm
val ADD_SUC_0 = |- !m. SUC m = SUC 0 + m : thm
val LESS_MONO_MULT' = |- !p n m. m <= n ==> p * m <= p * n : thm
val LESS_EQ_0_N = |- !n. 0 <= n : thm
val LESS_EQ_MONO_ADD_EQ' = |- !p n m. m <= n = p + m <= p + n : thm
val LESS_EQ_MONO_ADD_EQ1 = |- !p m. m + p <= p = m <= 0 : thm
val LESS_EQ_MONO_ADD_EQ2 = |- !n p. p <= n + p = 0 <= n : thm
val LESS_EQ_MONO_ADD_EQ3 = |- !n p. p <= n + p : thm
val ADD_SYM_ASSOC = |- !a b c. a + b + c = b + a + c : thm
val NOT_SUC_LEQ_0 = |- !n. ~(SUC n <= 0) : thm
val INV_SUC_LEQ = |- !m n. SUC m <= SUC n = m <= n : thm
val TWICE = |- !x. x + x = SUC (SUC 0) * x : thm
val NOT_SUC_LEQ = |- ~(!n m. SUC m <= n) : thm
val LEQ_SPLIT = |- m + n <= p ==> n <= p /\ m <= p : thm

Theory "boolarith2" exported.
val it = () : unit
val it = () : unit
Theory: boolarith2

Parents:
    boolarith1
    CSP_base

Type constants:
    

Term constants:
    

Axioms:
    

Definitions:
    

Theorems:
    F_IMP_EX_F |- F ==> (?t. F)
    EX_F_IMP_F |- (?t. F) ==> F
    F_FROM_EX_F |- (?t. F) = F
    ID_IMP |- !b. b ==> b
    CONJ_IMP_TAUT |- !a b c. (a ==> b) ==> a /\ c ==> b /\ c
    CONJ2_IMP_TAUT |- !a b c d. (a ==> b) ==> d /\ a /\ c ==> d /\ b /\ c
    CONJ3_IMP_TAUT |- !a b c. (a ==> b) ==> c /\ a ==> c /\ b
    ADD_SUC_0 |- !m. SUC m = SUC 0 + m
    LESS_MONO_MULT' |- !p n m. m <= n ==> p * m <= p * n
    LESS_EQ_0_N |- !n. 0 <= n
    LESS_EQ_MONO_ADD_EQ' |- !p n m. m <= n = p + m <= p + n
    LESS_EQ_MONO_ADD_EQ1 |- !p m. m + p <= p = m <= 0
    LESS_EQ_MONO_ADD_EQ2 |- !n p. p <= n + p = 0 <= n
    LESS_EQ_MONO_ADD_EQ3 |- !n p. p <= n + p
    ADD_SYM_ASSOC |- !a b c. a + b + c = b + a + c
    NOT_SUC_LEQ_0 |- !n. ~(SUC n <= 0)
    INV_SUC_LEQ |- !m n. SUC m <= SUC n = m <= n
    TWICE |- !x. x + x = SUC (SUC 0) * x
    NOT_SUC_LEQ |- ~(!n m. SUC m <= n)
    LEQ_SPLIT |- m + n <= p ==> n <= p /\ m <= p

Theory "boolarith2" is consistent with disk.
val it = () : unit
