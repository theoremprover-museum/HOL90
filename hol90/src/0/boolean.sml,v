head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	96.02.08.00.30.30;	author drs1004;	state Exp;
branches;
next	;


desc
@@


1.1
log
@New theory mechanism, by Donald Syme, and many other enhancements.
@
text
@(* ===================================================================== *)
(* FILE          : boolean.sml                                           *)
(* DESCRIPTION   : The "bool" theory as a structure accessing the disk   *)
(*                 representation.                                       *)
(*                                                                       *)
(* AUTHOR        : Donald Syme                                           *)
(* DATE          : October 1995                                          *)
(* ===================================================================== *)


(*----------------------------------------------------------------------
 * This loads the theory bool as a structure.
 *---------------------------------------------------------------------*)

structure Boolean : Boolean_sig =
struct

    structure Thm = Thm;
	
    open bool;  (* creates fake dependency of the "bool" theory *)
	
    fun def n = Manager0.definition "bool" n;
    fun ax n = Manager0.axiom "bool" n;
	
    val EXISTS_DEF = def "EXISTS_DEF"
    val T_DEF = def "TRUTH"
    val FORALL_DEF = def "FORALL_DEF"
    val AND_DEF = def "AND_DEF"
    val OR_DEF = def "OR_DEF"
    val F_DEF = def "F_DEF"
    val NOT_DEF = def "NOT_DEF"
    val EXISTS_UNIQUE_DEF = def "EXISTS_UNIQUE_DEF"
    val LET_DEF = def "LET_DEF"
    val COND_DEF = def "COND_DEF"
    val ONE_ONE_DEF = def "ONE_ONE_DEF"
    val ONTO_DEF = def "ONTO_DEF"
    val TYPE_DEFINITION = def "TYPE_DEFINITION"
    val BOOL_CASES_AX = ax "BOOL_CASES_AX"
    val IMP_ANTISYM_AX = ax "IMP_ANTISYM_AX"
    val ETA_AX = ax "ETA_AX"
    val SELECT_AX = ax "SELECT_AX"
    val INFINITY_AX = ax "INFINITY_AX"

end; (* MK_BOOL *)





@
