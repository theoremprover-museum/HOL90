thid = (WELLORDER, 942752733, 190659)
axioms = []
definitions =
[((wo_less),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). (((= :bool -> bool -> bool)
   (((wo_less :('a # 'a -> bool) -> 'a # 'a -> bool) $2)
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) ((/\ ($2
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) (~ (((= :'a -> 'a -> bool) $1)
   $0))))))))))`),
 ((wo_inseg),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((! :(('a # 'a -> bool) -> bool) -> bool) (\(m :'a # 'a -> bool).
   (((= :bool -> bool -> bool)
   ((wo_inseg :('a # 'a -> bool) # ('a # 'a -> bool) -> bool)
   (((, :('a # 'a -> bool) -> ('a # 'a -> bool) ->
         ('a # 'a -> bool) # ('a # 'a -> bool)) $1) $0))) ((/\
   ((wo_woset :('a # 'a -> bool) -> bool) $1)) ((/\
   ((wo_woset :('a # 'a -> bool) -> bool) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). (((= :bool -> bool -> bool) ($3
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) ((/\
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $3) $0)) ($2
   (((, :'a -> 'a -> 'a # 'a) $1) $0)))))))))))))))`),
 ((wo_woset),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   (((= :bool -> bool -> bool) ((wo_woset :('a # 'a -> bool) -> bool)
   $0)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0)) ($1
   (((, :'a -> 'a -> 'a # 'a) $0) $0)))))) ((/\
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :('a -> bool) -> bool) (\(z :'a). ((==> ((/\ ($3
   (((, :'a -> 'a -> 'a # 'a) $2) $1))) ($3 (((, :'a -> 'a -> 'a # 'a)
   $1) $0)))) ($3 (((, :'a -> 'a -> 'a # 'a) $2) $0)))))))))) ((/\
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((==> ((/\ ($2 (((, :'a -> 'a -> 'a # 'a) $1) $0))) ($2
   (((, :'a -> 'a -> 'a # 'a) $0) $1)))) (((= :'a -> 'a -> bool) $1)
   $0))))))) ((/\ ((! :('a -> bool) -> bool) (\(x :'a).
   ((! :('a -> bool) -> bool) (\(y :'a). ((==> ((/\
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $2) $1))
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $2) $0))) ((\/ ($2
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) ($2 (((, :'a -> 'a -> 'a # 'a)
   $0) $1))))))))) ((! :(('a -> bool) -> bool) -> bool)
   (\(P :'a -> bool). ((==> ((/\ ((! :('a -> bool) -> bool) (\(x :'a).
   ((==> ($1 $0)) (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $2)
   $0))))) ((? :('a -> bool) -> bool) (\(x :'a). ($1 $0)))))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\ ($1 $0))
   ((! :('a -> bool) -> bool) (\(z :'a). ((==> ($2 $0)) ($3
   (((, :'a -> 'a -> 'a # 'a) $1) $0))))))))))))))))))`),
 ((wo_chain),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   (((= :bool -> bool -> bool)
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((==> ((/\ ($2 $1)) ($2 $0))) ((\/ ($3
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) ($3 (((, :'a -> 'a -> 'a # 'a)
   $0) $1)))))))))))))`),
 ((wo_poset),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   (((= :bool -> bool -> bool) ((wo_poset :('a # 'a -> bool) -> bool)
   $0)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0)) ($1
   (((, :'a -> 'a -> 'a # 'a) $0) $0)))))) ((/\
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :('a -> bool) -> bool) (\(z :'a). ((==> ((/\ ($3
   (((, :'a -> 'a -> 'a # 'a) $2) $1))) ($3 (((, :'a -> 'a -> 'a # 'a)
   $1) $0)))) ($3 (((, :'a -> 'a -> 'a # 'a) $2) $0))))))))))
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((==> ((/\ ($2 (((, :'a -> 'a -> 'a # 'a) $1) $0))) ($2
   (((, :'a -> 'a -> 'a # 'a) $0) $1)))) (((= :'a -> 'a -> bool) $1)
   $0)))))))))))`),
 ((wo_fl),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0))
   ((? :('a -> bool) -> bool) (\(y :'a). ((\/ ($2
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) ($2 (((, :'a -> 'a -> 'a # 'a)
   $0) $1))))))))))`),
 ((wo_Union),
  [],
  `((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(P :('a -> bool) -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   ((wo_Union :(('a -> bool) -> bool) -> 'a -> bool) $0)) (\(x :'a).
   ((? :(('a -> bool) -> bool) -> bool) (\(p :'a -> bool). ((/\ ($2
   $0)) ($0 $1))))))))`),
 ((wo_subset),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   (((= :bool -> bool -> bool)
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2 $0)) ($1
   $0)))))))))`)]
theorems =
[((WO_RECURSE_NUM),
  [],
  `((! :((('a -> 'b) -> 'a -> 'b) -> bool) -> bool)
   (\(h :('a -> 'b) -> 'a -> 'b). ((! :(('a -> num) -> bool) -> bool)
   (\(ms :'a -> num). ((==> ((! :(('a -> 'b) -> bool) -> bool)
   (\(f :'a -> 'b). ((! :(('a -> 'b) -> bool) -> bool)
   (\(g :'a -> 'b). ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   ((! :('a -> bool) -> bool) (\(y :'a). ((==> ((< ($4 $0)) ($4 $1)))
   (((= :'b -> 'b -> bool) ($3 $0)) ($2 $0))))))
   (((= :'b -> 'b -> bool) (($4 $2) $0)) (($4 $1) $0))))))))))
   ((?! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :'b -> 'b -> bool) ($1
   $0)) (($3 $1) $0)))))))))))`),
 ((WOSET_NUM),
  [],
  `((wo_woset :(num # num -> bool) -> bool)
   ((UNCURRY :(num -> num -> bool) -> num # num -> bool) (\(m :num).
   (\(n :num). ((<= $1) $0)))))`),
 ((FL_NUM),
  [],
  `((! :(num -> bool) -> bool) (\(n :num).
   (((wo_fl :(num # num -> bool) -> num -> bool)
   ((UNCURRY :(num -> num -> bool) -> num # num -> bool) (\(m :num).
   (\(n :num). ((<= $1) $0))))) $0)))`),
 ((WO_RECURSE ),
  [],
  `((! :(('c # 'c -> bool) -> bool) -> bool) (\(l :'c # 'c -> bool).
   ((! :((('a -> 'b) -> 'a -> 'b) -> bool) -> bool)
   (\(h :('a -> 'b) -> 'a -> 'b). ((! :(('a -> 'c) -> bool) -> bool)
   (\(ms :'a -> 'c). ((==> ((/\ ((wo_woset :('c # 'c -> bool) -> bool)
   $2)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a).
   (((wo_fl :('c # 'c -> bool) -> 'c -> bool) $3) ($1 $0)))))
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> 'b) -> bool) -> bool) (\(g :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   ((! :('a -> bool) -> bool) (\(y :'a). ((==>
   (((wo_less :('c # 'c -> bool) -> 'c # 'c -> bool) $6)
   (((, :'c -> 'c -> 'c # 'c) ($4 $0)) ($4 $1))))
   (((= :'b -> 'b -> bool) ($3 $0)) ($2 $0))))))
   (((= :'b -> 'b -> bool) (($4 $2) $0)) (($4 $1) $0))))))))))))
   ((?! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :'b -> 'b -> bool) ($1
   $0)) (($3 $1) $0)))))))))))))`),
 ((WO_RECURSE_EXISTS),
  [],
  `((! :(('c # 'c -> bool) -> bool) -> bool) (\(l :'c # 'c -> bool).
   ((! :((('a -> 'b) -> 'a -> 'b) -> bool) -> bool)
   (\(h :('a -> 'b) -> 'a -> 'b). ((! :(('a -> 'c) -> bool) -> bool)
   (\(ms :'a -> 'c). ((==> ((/\ ((wo_woset :('c # 'c -> bool) -> bool)
   $2)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a).
   (((wo_fl :('c # 'c -> bool) -> 'c -> bool) $3) ($1 $0)))))
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> 'b) -> bool) -> bool) (\(f' :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   ((! :('a -> bool) -> bool) (\(y :'a). ((==>
   (((wo_less :('c # 'c -> bool) -> 'c # 'c -> bool) $6)
   (((, :'c -> 'c -> 'c # 'c) ($4 $0)) ($4 $1))))
   (((= :'b -> 'b -> bool) ($3 $0)) ($2 $0))))))
   (((= :'b -> 'b -> bool) (($4 $2) $0)) (($4 $1) $0))))))))))))
   ((? :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :'b -> 'b -> bool) ($1
   $0)) (($3 $1) $0)))))))))))))`),
 ((WO_RECURSE_LOCAL),
  [],
  `((! :(('c # 'c -> bool) -> bool) -> bool) (\(l :'c # 'c -> bool).
   ((! :((('a -> 'b) -> 'a -> 'b) -> bool) -> bool)
   (\(h :('a -> 'b) -> 'a -> 'b). ((! :(('a -> 'c) -> bool) -> bool)
   (\(ms :'a -> 'c). ((==> ((/\ ((wo_woset :('c # 'c -> bool) -> bool)
   $2)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a).
   (((wo_fl :('c # 'c -> bool) -> 'c -> bool) $3) ($1 $0)))))
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> 'b) -> bool) -> bool) (\(f' :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   ((! :('a -> bool) -> bool) (\(y :'a). ((==>
   (((wo_less :('c # 'c -> bool) -> 'c # 'c -> bool) $6)
   (((, :'c -> 'c -> 'c # 'c) ($4 $0)) ($4 $1))))
   (((= :'b -> 'b -> bool) ($3 $0)) ($2 $0))))))
   (((= :'b -> 'b -> bool) (($4 $2) $0)) (($4 $1) $0))))))))))))
   ((! :('c -> bool) -> bool) (\(n :'c).
   ((? :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x' :'a). ((==> ($5
   (((, :'c -> 'c -> 'c # 'c) ($3 $0)) $2))) (((= :'b -> 'b -> bool)
   ($1 $0)) (($4 $1) $0))))))))))))))))`),
 ((AGREE_LEMMA),
  [],
  `((! :(('c # 'c -> bool) -> bool) -> bool) (\(l :'c # 'c -> bool).
   ((! :((('a -> 'b) -> 'a -> 'b) -> bool) -> bool)
   (\(h :('a -> 'b) -> 'a -> 'b). ((! :(('a -> 'c) -> bool) -> bool)
   (\(ms :'a -> 'c). ((! :('c -> bool) -> bool) (\(m :'c).
   ((! :('c -> bool) -> bool) (\(n :'c).
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> 'b) -> bool) -> bool) (\(g :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(z :'a). ((==> ((/\
   ((wo_woset :('c # 'c -> bool) -> bool) $7)) ((/\
   ((! :('a -> bool) -> bool) (\(x :'a).
   (((wo_fl :('c # 'c -> bool) -> 'c -> bool) $8) ($6 $0))))) ((/\
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> 'b) -> bool) -> bool) (\(f' :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   ((! :('a -> bool) -> bool) (\(y :'a). ((==>
   (((wo_less :('c # 'c -> bool) -> 'c # 'c -> bool) $11)
   (((, :'c -> 'c -> 'c # 'c) ($9 $0)) ($9 $1))))
   (((= :'b -> 'b -> bool) ($3 $0)) ($2 $0))))))
   (((= :'b -> 'b -> bool) (($9 $2) $0)) (($9 $1) $0)))))))))) ((/\
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($8
   (((, :'c -> 'c -> 'c # 'c) ($6 $0)) $5))) (((= :'b -> 'b -> bool)
   ($3 $0)) (($7 $3) $0)))))) ((/\ ((! :('a -> bool) -> bool)
   (\(x :'a). ((==> ($8 (((, :'c -> 'c -> 'c # 'c) ($6 $0)) $4)))
   (((= :'b -> 'b -> bool) ($2 $0)) (($7 $2) $0)))))) ((/\ ($7
   (((, :'c -> 'c -> 'c # 'c) ($5 $0)) $4))) ($7
   (((, :'c -> 'c -> 'c # 'c) ($5 $0)) $3)))))))))
   (((= :'b -> 'b -> bool) ($2 $0)) ($1 $0)))))))))))))))))))`),
 ((WO_INDUCT),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((/\ ((wo_woset :('a # 'a -> bool) -> bool) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ((/\
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0))
   ((! :('a -> bool) -> bool) (\(y :'a). ((==>
   (((wo_less :('a # 'a -> bool) -> 'a # 'a -> bool) $2)
   (((, :'a -> 'a -> 'a # 'a) $0) $1))) ($3 $0)))))) ($2 $0))))))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0)) ($2
   $0)))))))))`),
 ((WO),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((? :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((/\ ((wo_woset :('a # 'a -> bool) -> bool) $0))
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   ((wo_fl :('a # 'a -> bool) -> 'a -> bool) $0)) $1))))))`),
 ((WO_RESTFL),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((wo_woset :('a # 'a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   (((= :bool -> bool -> bool)
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool)
   ((UNCURRY :('a -> 'a -> bool) -> 'a # 'a -> bool) (\(x :'a).
   (\(y :'a). ((/\ ($2 $1)) ((/\ ($2 $0)) ($3
   (((, :'a -> 'a -> 'a # 'a) $1) $0)))))))) (x :'a))) ((/\ ($0
   (x :'a))) (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1)
   (x :'a)))))))))`),
 ((WO_TYPE),
  [],
  `((? :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((/\ ((wo_woset :('a # 'a -> bool) -> bool) $0))
   ((! :('a -> bool) -> bool) (\(x :'a).
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0))))))`),
 ((WO_EXFL),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool)
   ((UNCURRY :('a -> 'a -> bool) -> 'a # 'a -> bool) (\(x :'a).
   (\(y :'a). ((\/ ((l :'a # 'a -> bool) (((, :'a -> 'a -> 'a # 'a)
   $1) $0))) ((/\ ((\/ (((wo_fl :('a # 'a -> bool) -> 'a -> bool)
   (l :'a # 'a -> bool)) $1)) (((= :'a -> 'a -> bool) $1) (m :'a))))
   (((= :'a -> 'a -> bool) $0) (m :'a)))))))) $0)) ((\/
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) (l :'a # 'a -> bool))
   $0)) (((= :'a -> 'a -> bool) $0) (m :'a))))))`),
 ((WOSET_MAXIMAL),
  [],
  `((? :(('a # 'a -> bool) -> bool) -> bool) (\(y :'a # 'a -> bool).
   ((/\
   (((wo_fl :(('a # 'a -> bool) # ('a # 'a -> bool) -> bool) ->
             ('a # 'a -> bool) -> bool)
   (wo_inseg :('a # 'a -> bool) # ('a # 'a -> bool) -> bool)) $0))
   ((! :(('a # 'a -> bool) -> bool) -> bool) (\(x :'a # 'a -> bool).
   ((==> ((wo_inseg :('a # 'a -> bool) # ('a # 'a -> bool) -> bool)
   (((, :('a # 'a -> bool) -> ('a # 'a -> bool) ->
         ('a # 'a -> bool) # ('a # 'a -> bool)) $1) $0)))
   (((= :('a # 'a -> bool) -> ('a # 'a -> bool) -> bool) $1)
   $0)))))))`),
 ((INSEG_WOSET_UNION),
  [],
  `((! :((('a # 'a -> bool) -> bool) -> bool) -> bool)
   (\(P :('a # 'a -> bool) -> bool). ((==>
   (((wo_chain :(('a # 'a -> bool) # ('a # 'a -> bool) -> bool) ->
                (('a # 'a -> bool) -> bool) -> bool)
   (wo_inseg :('a # 'a -> bool) # ('a # 'a -> bool) -> bool)) $0))
   ((wo_woset :('a # 'a -> bool) -> bool)
   ((wo_Union :(('a # 'a -> bool) -> bool) -> 'a # 'a -> bool)
   $0)))))`),
 ((FL_UNION),
  [],
  `((! :((('a # 'a -> bool) -> bool) -> bool) -> bool)
   (\(P :('a # 'a -> bool) -> bool). ((! :('a -> bool) -> bool)
   (\(x :'a). (((= :bool -> bool -> bool)
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool)
   ((wo_Union :(('a # 'a -> bool) -> bool) -> 'a # 'a -> bool) $1))
   $0)) ((? :(('a # 'a -> bool) -> bool) -> bool)
   (\(l :'a # 'a -> bool). ((/\ ($2 $0))
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $0) $1)))))))))`),
 ((INSEG_POSET),
  [],
  `((wo_poset :(('a # 'a -> bool) # ('a # 'a -> bool) -> bool) ->
               bool)
   (wo_inseg :('a # 'a -> bool) # ('a # 'a -> bool) -> bool))`),
 ((INSEG_SUBSET),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((! :(('a # 'a -> bool) -> bool) -> bool) (\(m :'a # 'a -> bool).
   ((==> ((wo_inseg :('a # 'a -> bool) # ('a # 'a -> bool) -> bool)
   (((, :('a # 'a -> bool) -> ('a # 'a -> bool) ->
         ('a # 'a -> bool) # ('a # 'a -> bool)) $1) $0)))
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((==> ($3 (((, :'a -> 'a -> 'a # 'a) $1) $0))) ($2
   (((, :'a -> 'a -> 'a # 'a) $1) $0))))))))))))`),
 ((INSEG_FL),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   (((= :bool -> bool -> bool)
   (((wo_fl :(('a # 'a -> bool) # ('a # 'a -> bool) -> bool) ->
             ('a # 'a -> bool) -> bool)
   (wo_inseg :('a # 'a -> bool) # ('a # 'a -> bool) -> bool)) $0))
   ((wo_woset :('a # 'a -> bool) -> bool) $0))))`),
 ((INSEG_WOSET),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((! :(('a # 'a -> bool) -> bool) -> bool) (\(m :'a # 'a -> bool).
   ((==> ((wo_inseg :('a # 'a -> bool) # ('a # 'a -> bool) -> bool)
   (((, :('a # 'a -> bool) -> ('a # 'a -> bool) ->
         ('a # 'a -> bool) # ('a # 'a -> bool)) $1) $0))) ((/\
   ((wo_woset :('a # 'a -> bool) -> bool) $1))
   ((wo_woset :('a # 'a -> bool) -> bool) $0)))))))`),
 ((ZL),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((/\ ((wo_poset :('a # 'a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool). ((==>
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $2) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2 $0)) ($3
   (((, :'a -> 'a -> 'a # 'a) $0) $1)))))))))))))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) (((= :'a -> 'a -> bool) $1)
   $0))))))))))`),
 ((HP),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((wo_poset :('a # 'a -> bool) -> bool) $0))
   ((? :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool). ((/\
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool). ((==> ((/\
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $2) $0))
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0) $1))))))))))`),
 ((KL),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((wo_poset :('a # 'a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool). ((==>
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((? :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool). ((/\ ((/\
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $2) $0))
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))
   ((! :(('a -> bool) -> bool) -> bool) (\(R :'a -> bool). ((==> ((/\
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $3) $0))
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0) $1)))))))))))))`),
 ((POSET_ORD),
  [],
  `((wo_poset :(('a -> bool) # ('a -> bool) -> bool) -> bool)
   ((UNCURRY :(('a -> bool) -> ('a -> bool) -> bool) ->
              ('a -> bool) # ('a -> bool) -> bool) (\(U :'a -> bool).
   (\(V :'a -> bool). ((/\
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool)
   (P :'a -> bool)) $1)) ((/\
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool)
   (l :'a # 'a -> bool)) $0)))))))`),
 ((CPO_FIX),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((/\ ((wo_poset :('a # 'a -> bool) -> bool) $0)) ((/\
   ((! :(('a -> bool) -> bool) -> bool) (\(A :'a -> bool). ((==>
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((? :('a -> bool) -> bool) (\(m :'a). ((/\
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $2) $0)) ((/\
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2 $0)) ($3
   (((, :'a -> 'a -> 'a # 'a) $0) $1)))))) ((! :('a -> bool) -> bool)
   (\(m' :'a). ((==> ((/\ (((wo_fl :('a # 'a -> bool) -> 'a -> bool)
   $3) $0)) ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($3 $0)) ($4
   (((, :'a -> 'a -> 'a # 'a) $0) $1))))))) ($3
   (((, :'a -> 'a -> 'a # 'a) $1) $0)))))))))))))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0)) ($1
   (((, :'a -> 'a -> 'a # 'a) $0) ((f :'a -> 'a) $0)))))))))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0))
   (((= :'a -> 'a -> bool) ((f :'a -> 'a) $0)) $0)))))))`),
 ((WOSET),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   (((= :bool -> bool -> bool) ((wo_woset :('a # 'a -> bool) -> bool)
   $0)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a).
   ((! :('a -> bool) -> bool) (\(y :'a). ((==> ((/\ ($2
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) ($2 (((, :'a -> 'a -> 'a # 'a)
   $0) $1)))) (((= :'a -> 'a -> bool) $1) $0)))))))
   ((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool). ((==> ((/\
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($1 $0))
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $2) $0)))))
   ((? :('a -> bool) -> bool) (\(x :'a). ($1 $0)))))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\ ($1 $0))
   ((! :('a -> bool) -> bool) (\(z :'a). ((==> ($2 $0)) ($3
   (((, :'a -> 'a -> 'a # 'a) $1) $0)))))))))))))))`),
 ((WOSET_TRANS_LESS),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((wo_woset :('a # 'a -> bool) -> bool) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :('a -> bool) -> bool) (\(z :'a). ((==> ((/\
   (((wo_less :('a # 'a -> bool) -> 'a # 'a -> bool) $3)
   (((, :'a -> 'a -> 'a # 'a) $2) $1))) ($3 (((, :'a -> 'a -> 'a # 'a)
   $1) $0)))) (((wo_less :('a # 'a -> bool) -> 'a # 'a -> bool) $3)
   (((, :'a -> 'a -> 'a # 'a) $2) $0))))))))))))`),
 ((WOSET_FLEQ),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((wo_woset :('a # 'a -> bool) -> bool) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0)) ($1
   (((, :'a -> 'a -> 'a # 'a) $0) $0))))))))`),
 ((WOSET_POSET),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((wo_woset :('a # 'a -> bool) -> bool) $0))
   ((wo_poset :('a # 'a -> bool) -> bool) $0))))`),
 ((CHAIN_SUBSET),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool). ((==> ((/\
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $2) $1))
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $0) $1)))
   (((wo_chain :('a # 'a -> bool) -> ('a -> bool) -> bool) $2)
   $0))))))))`),
 ((POSET_FLEQ),
  [],
  `((! :(('a # 'a -> bool) -> bool) -> bool) (\(l :'a # 'a -> bool).
   ((==> ((wo_poset :('a # 'a -> bool) -> bool) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((wo_fl :('a # 'a -> bool) -> 'a -> bool) $1) $0)) ($1
   (((, :'a -> 'a -> 'a # 'a) $0) $0))))))))`),
 ((SUBSET_TRANS),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(R :'a -> bool). ((==> ((/\
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $2) $1))
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $2)
   $0))))))))`),
 ((SUBSET_ANTISYM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool). ((==> ((/\
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $0) $1)))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1) $0))))))`),
 ((SUBSET_REFL),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   (((wo_subset :('a -> bool) -> ('a -> bool) -> bool) $0) $0)))`)]
