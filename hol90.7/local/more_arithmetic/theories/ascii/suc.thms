thid = (suc, 739177980, 802876)
axioms = []
definitions = []
theorems =
[((SUC_NOT_0),
  `((! :(num -> bool) -> bool) (\(n :num). (~
   (((= :num -> num -> bool) (SUC $0)) 0))))`),
 ((SUC_0), `(((= :num -> num -> bool) 1) (SUC 0))`),
 ((NOT_SUC_LESS_EQ_SELF),
  `((! :(num -> bool) -> bool) (\(n :num). (~ ((<= (SUC $0)) $0))))`),
 ((SUC_LESS_EQ),
  `((! :(num -> bool) -> bool) (\(m :num). ((! :(num -> bool) -> bool)
   (\(n :num). ((==> ((/\ ((<= $1) $0)) (~ (((= :num -> num -> bool)
   $1) $0)))) ((<= (SUC $1)) $0))))))`),
 ((LESS_EQ_LESS_SUC),
  `((! :(num -> bool) -> bool) (\(m :num). ((! :(num -> bool) -> bool)
   (\(n :num). (((= :bool -> bool -> bool) ((<= $1) $0)) ((< $1) (SUC
   $0)))))))`),
 ((SUC_GREATER_EQ_SUC),
  `((! :(num -> bool) -> bool) (\(n :num). ((! :(num -> bool) -> bool)
   (\(m :num). (((= :bool -> bool -> bool) ((>= (SUC $0)) (SUC $1)))
   ((>= $0) $1))))))`),
 ((NOT_0_GREATER_EQ_SUC),
  `((! :(num -> bool) -> bool) (\(n :num). (~ ((>= 0) (SUC $0)))))`),
 ((NOT_FORALL_SUC_LESS_EQ),
  `(~ ((! :(num -> bool) -> bool) (\(n :num).
   ((! :(num -> bool) -> bool) (\(m :num). ((<= (SUC $0)) $1))))))`)]
