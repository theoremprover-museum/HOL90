head	1.1;
access;
symbols
	HOL97:1.1.2.2.0.2
	bpHOL97:1.1.2.2
	hol90_9_alpha:1.1.2.2
	hol90_pre8_for_multiple_compilers:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	96.06.27.16.00.25;	author rjb;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	96.06.27.16.00.26;	author rjb;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	96.08.23.14.56.01;	author rjb;	state Exp;
branches
	1.1.2.2.2.1;
next	;

1.1.2.2.2.1
date	97.06.11.17.24.41;	author kxs;	state Exp;
branches;
next	1.1.2.2.2.2;

1.1.2.2.2.2
date	97.07.10.19.52.20;	author kxs;	state Exp;
branches;
next	1.1.2.2.2.3;

1.1.2.2.2.3
date	97.10.05.21.07.28;	author kxs;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file sources.sml was initially added on branch hol90_pre8_for_multiple_compilers.
@
text
@@


1.1.2.1
log
@Theory files now build with SML/NJ 109, SML/NJ 108.5 (using CM), SML/NJ 0.93,
and Poly/ML 3.0.
The filter processes executed in the SML/NJ 109 version used to hang around
after they had done their job. They are now terminated explicitly.
@
text
@a0 94
(* use "0/lib.sig"; *)
use "0/globals.sig";
use "0/globals.sml";
use "0/exception.sig";
use "0/exception.sml";
use "0/lib.sml";
use "0/file.sig";
use "0/file.sml";
use "0/help.sig";
use "0/help.sml";
use "0/save_hol.sig";
use "0/save_hol.sml";
use "0/lexis.sig";
use "0/lexis.sml";
use "0/type.sig";
use "0/type.sml";
use "0/term.sig";
use "0/term.sml";
use "0/match.sig";
use "0/match.sml";
use "0/dsyntax.sig";
use "0/dsyntax.sml";
use "0/pp.sig";
use "0/pp.sml";
use "0/hol_pp.extensible.sig";
use "0/hol_pp.extensible.sml";
use "0/preterm.sig";
use "0/preterm.sml";
use "0/parse_support.sig";
use "0/parse_support.sml";
use "0/base.qaq.sml";
use "0/hol_yak.sig";
use "0/hol_yak.sml";
use "0/hol_lex.sml";
use "0/parse.sig";
use "0/parse.sml";
use "0/thm.sig";
use "0/thm.sml";
use "0/uid.sig";
use "0/uid.sml";
use "0/theory/data.sig";
use "0/theory/data.sml";
use "0/thy_pp.sig";
use "0/thy_pp.sml";
use "0/thy_yak.sig";
use "0/thy_yak.sml";
use "0/thy_parse.sig";
use "0/thy_parse.sml";
use "0/thy_lex.sml";
use "0/theory/thms.yak.sig";
use "0/theory/thms.yak.sml";
use "0/theory/holsig.yak.sig";
use "0/theory/holsig.yak.sml";
use "0/theory/regime.sig";
use "0/theory/disk_io.sig";
use "0/theory/disk_io.ascii.sml";
use "0/theory/regime.sml";
use "0/theory/thms.lex.sml";
use "0/theory/holsig.lex.sml";
use "0/cache.sml";
use "0/theory/cache.sig";
use "0/theory/graph.sml";
use "0/theory/graph.sig";
use "0/theory/io.sig";
use "0/theory/io.sml";
use "0/theory/ops.sig";
use "0/theory/ops.sml";
use "0/theory/theory.sig";
use "0/theory/theory.sml";
use "0/net.sig";
use "0/net.sml";
use "0/term_io.sig";
use "0/theory/add_to_sml.sig";
use "0/theory/add_to_sml.sml";
use "0/library/lib_data.sig";
use "0/library/lib_data.sml";
use "0/library/lib.yak.sig";
use "0/library/lib.yak.sml";
use "0/library/lib.lex.sml";
use "0/library/lib_io.sig";
use "0/library/lib_io.sml";
use "0/library/lib.sig";
use "0/library/lib.sml";
use "0/install.sig";
use "0/install.sml";
use "0/exists_def.sig";
use "0/exists_def.sml";
use "0/const_spec.sig";
use "0/const_spec.sml";
use "0/type_def.sig";
use "0/type_def.sml";
use "0/const_def.sig";
use "0/const_def.sml";
use "0/base_logic.sml";
@


1.1.2.2
log
@Added quote-filter.sml to list of source files.
@
text
@d1 1
a1 1
use "quote-filter.sml";
a5 1
(* use "0/lib.sig"; *)
@


1.1.2.2.2.1
log
@Removed files are parse files and portability files that have
effectively been moved elsewhere.

Modified files are up to date for ML 109.26.
@
text
@d1 1
a1 3
(* use "quote-filter/filter.sml"; *)
use "SysParams.sml";
use "portableML/njsml.109.xx.sml";
d6 1
a6 1
use "0/lib.sig";
a7 1
open Lib;
d24 2
a25 1
use "0/pp.sig"; use "0/pp.sml";
a27 2
use "0/thm.sig";
use "0/thm.sml";
d32 8
a39 6
(* Use underlying support for ML-Yacc parsers *)
use "Grammars/ParseBase/base.sig";
use "Grammars/ParseBase/join.sml";
use "Grammars/ParseBase/lrtable.sml";
use "Grammars/ParseBase/stream.sml";
use "Grammars/ParseBase/parser1.sml";
d46 2
a47 2
use "Grammars/thy.yak.sig";
use "Grammars/thy.yak.sml";
d50 5
a54 5
use "Grammars/thy.lex.sml";
use "Grammars/thms.yak.sig";
use "Grammars/thms.yak.sml";
use "Grammars/holsig.yak.sig";
use "Grammars/holsig.yak.sml";
d59 2
a60 2
use "Grammars/thms.lex.sml";
use "Grammars/holsig.lex.sml";
d73 1
a73 1
(* use "0/term_io.sig"; *)
d78 3
a80 3
use "Grammars/lib.yak.sig";
use "Grammars/lib.yak.sml";
use "Grammars/lib.lex.sml";
a95 8

(* Once Term exists, we can build the parser; otherwise, functor madness! *)
use "Grammars/hol.yak.sig";
use "Grammars/hol.yak.sml";
use "Grammars/hol.lex.sml";

use "0/parse.sig";
use "0/parse.sml";
@


1.1.2.2.2.2
log
@Added distinctions between SML'90 and SML'97.
@
text
@d1 1
a7 1
use "quote-filter/filter.sml";
d34 2
d46 2
a47 2
use "0/theory/thy_pp.sig";
use "0/theory/thy_pp.sml";
d50 2
a51 4
use "0/theory/thy_parse.sig";
use (case SysParams.MLdialect 
     of SysParams.NinetySeven => "0/theory/thy_parse.sml"
      | SysParams.Ninety      => "0/theory/thy_parse.90.sml");
d59 1
a59 3
use (case SysParams.MLdialect 
     of SysParams.NinetySeven => "0/theory/disk_io.ascii.sml"
      | SysParams.Ninety      => "0/theory/disk_io.ascii.sml");
d70 1
a70 3
use (case SysParams.MLdialect 
     of SysParams.NinetySeven => "0/theory/ops.sml"
      | SysParams.Ninety      => "0/theory/ops.90.sml");
d72 1
a72 3
use (case SysParams.MLdialect 
     of SysParams.NinetySeven => "0/theory/theory.sml"
      | SysParams.Ninety      => "0/theory/theory.90.sml");
d75 3
d84 1
a84 3
use (case SysParams.MLdialect 
     of SysParams.NinetySeven => "0/library/lib_io.sml"
      | SysParams.Ninety      => "0/library/lib_io.90.sml");
d87 2
a88 1

d97 1
a97 3
use"0/CoreHol.sig";
use"0/CoreHol.sml";

a99 2
use "0/parse_support.sig";
use "0/parse_support.sml";
d102 2
a103 3
use (case SysParams.MLdialect 
     of SysParams.NinetySeven => "Grammars/hol.lex.sml"
      | SysParams.Ninety      => "Grammars/hol.lex.90.sml");
a105 37

local 
  structure Lib_table = libLrValsFun(structure Token = LrParser.Token
                                     structure Lib_data = Lib_data)
  structure Lib_parse = Join
       (structure ParserData = Lib_table.ParserData
        structure Lex = LIB_LEX(structure Tokens = Lib_table.Tokens)
        structure LrParser = LrParser)
  structure Lib_io = LIB_IO(structure File = File
                            structure Lib_parse = Lib_parse
                            structure Lib_data = Lib_data)
in
structure Library = LIBRARY(structure Help = Help
                            structure Theory = CoreHol.Theory
                            structure Lib_io = Lib_io)
end;

use "0/theory/add_to_sml.sig";
use "0/theory/add_to_sml.sml";
use "0/install.sig";
use "0/install.sml";

structure Abbrev =
struct
   local
      open CoreHol.Thm
      open CoreHol.Term
   in
      type conv = term -> thm
      type goal = (term list * term)
      type validation = thm list -> thm
      type tactic_result = goal list * validation;
      type tactic = goal -> tactic_result;
      type thm_tactic = thm -> tactic
      type thm_tactical = thm_tactic -> thm_tactic;
   end;
end;
@


1.1.2.2.2.3
log
@These modifications are to make frags known (parse.{sig, sml}), and to
make the hash function run properly (a change in the underlying exception
that substring raises (from Ord to Subscript))  (type.sml, term.sml).
@
text
@d2 1
a2 2
use "portableML/njsml.109.32.sml";
(* use "portableML/njsml.109.xx.sml"; *)
@
