thid = (koenig, 866812931, 770310)
axioms = []
definitions =
[((Unbounded_Path),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> 'a -> bool) -> bool) -> bool) (\(X :'a -> 'a -> bool).
   (((= :bool -> bool -> bool)
   (((Unbounded_Path :'a -> ('a -> 'a -> bool) -> bool) $1) $0))
   ((! :(num -> bool) -> bool) (\(n :num).
   ((? :((num -> 'a) -> bool) -> bool) (\(s :num -> 'a). ((/\
   (((= :'a -> 'a -> bool) ($0 0)) $3)) ((! :(num -> bool) -> bool)
   (\(d :num). ((==> ((< $0) $2)) (($3 ($1 $0)) ($1 (SUC
   $0))))))))))))))))`),
 ((Infinite_Path),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> 'a -> bool) -> bool) -> bool) (\(X :'a -> 'a -> bool).
   (((= :bool -> bool -> bool)
   (((Infinite_Path :'a -> ('a -> 'a -> bool) -> bool) $1) $0))
   ((? :((num -> 'a) -> bool) -> bool) (\(s :num -> 'a). ((/\
   (((= :'a -> 'a -> bool) ($0 0)) $2)) ((! :(num -> bool) -> bool)
   (\(d :num). (($2 ($1 $0)) ($1 (SUC $0)))))))))))))`),
 ((Finite),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   (((= :bool -> bool -> bool) ((Finite :('a -> bool) -> bool) $0))
   ((? :(num -> bool) -> bool) (\(b :num).
   (((Bounded :num -> ('a -> bool) -> bool) $0) $1))))))`),
 ((Bounded),
  [],
  `((! :(num -> bool) -> bool) (\(b :num).
   ((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   (((= :bool -> bool -> bool)
   (((Bounded :num -> ('a -> bool) -> bool) $1) $0))
   ((? :((num -> 'a) -> bool) -> bool) (\(f :num -> 'a).
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2 $0))
   ((? :(num -> bool) -> bool) (\(n :num). ((/\ ((< $0) $4))
   (((= :'a -> 'a -> bool) $1) ($2 $0)))))))))))))))`)]
theorems =
[((Koenig_Original_Lemma),
  [],
  `((! :((num -> 'a -> bool) -> bool) -> bool)
   (\(E :num -> 'a -> bool).
   ((! :(('a -> 'a -> bool) -> bool) -> bool) (\(R :'a -> 'a -> bool).
   ((==> ((! :(num -> bool) -> bool) (\(n :num). ((/\
   ((Finite :('a -> bool) -> bool) ($2 $0))) ((/\
   ((? :('a -> bool) -> bool) (\(x :'a). (($3 $1) $0))))
   ((! :('a -> bool) -> bool) (\(x' :'a). ((==> (($3 (SUC $1)) $0))
   ((? :('a -> bool) -> bool) (\(x :'a). ((/\ (($4 $2) $0)) (($3 $0)
   $1)))))))))))) ((? :((num -> 'a) -> bool) -> bool)
   (\(a :num -> 'a). ((! :(num -> bool) -> bool) (\(n :num). ((/\ (($3
   $0) ($1 $0))) (($2 ($1 $0)) ($1 (SUC $0)))))))))))))`),
 ((Koenig_Digraph_Lemma),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> 'a -> bool) -> bool) -> bool) (\(X :'a -> 'a -> bool).
   ((==> ((! :('a -> bool) -> bool) (\(s :'a).
   ((Finite :('a -> bool) -> bool) ($1 $0))))) ((==>
   (((Unbounded_Path :'a -> ('a -> 'a -> bool) -> bool) $1) $0))
   (((Infinite_Path :'a -> ('a -> 'a -> bool) -> bool) $1)
   $0)))))))`),
 ((Finite_EQ),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   (((= :bool -> bool -> bool) ((Finite :('a -> bool) -> bool) $0))
   ((? :(num -> bool) -> bool) (\(b :num).
   ((? :((num -> 'a) -> bool) -> bool) (\(f :num -> 'a).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   ($3 $0)) ((? :(num -> bool) -> bool) (\(n :num). ((/\ ((< $0) $3))
   (((= :'a -> 'a -> bool) $1) ($2 $0)))))))))))))))`)]
