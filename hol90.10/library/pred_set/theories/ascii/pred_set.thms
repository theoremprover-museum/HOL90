thid = (pred_set, 942751802, 423561)
axioms = []
definitions =
[((INFINITE_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((INFINITE :('a -> bool) -> bool) $0))
   (~ ((FINITE :('a -> bool) -> bool) $0)))))`),
 ((CARD_DEF),
  [],
  `((/\ (((= :num -> num -> bool) ((CARD :('a -> bool) -> num)
   (EMPTY :'a -> bool))) 0)) ((! :(('a -> bool) -> bool) -> bool)
   (\(s :'a -> bool). ((==> ((FINITE :('a -> bool) -> bool) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :num -> num -> bool)
   ((CARD :('a -> bool) -> num)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0) $1)))
   ((((COND :bool -> num -> num -> num)
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))
   ((CARD :('a -> bool) -> num) $1)) (SUC ((CARD :('a -> bool) -> num)
   $1))))))))))`),
 ((FINITE_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((FINITE :('a -> bool) -> bool) $0))
   ((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(P :('a -> bool) -> bool). ((==> ((/\ ($0 (EMPTY :'a -> bool)))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==> ($1
   $0)) ((! :('a -> bool) -> bool) (\(e :'a). ($2
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0) $1))))))))) ($0
   $1)))))))`),
 ((RINV_DEF),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool). ((==>
   ((((SURJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $2)
   $1) $0)) ((! :('b -> bool) -> bool) (\(x :'b). ((==>
   (((IN :'b -> ('b -> bool) -> bool) $0) $1)) (((= :'b -> 'b -> bool)
   ($3 ((((RINV :('a -> 'b) -> ('a -> bool) -> 'b -> 'a) $3) $2) $0)))
   $0)))))))))))`),
 ((LINV_DEF),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool). ((==>
   ((((INJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $2)
   $1) $0)) ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((IN :'a -> ('a -> bool) -> bool) $0) $2)) (((= :'a -> 'a -> bool)
   ((((LINV :('a -> 'b) -> ('a -> bool) -> 'b -> 'a) $3) $2) ($3 $0)))
   $0)))))))))))`),
 ((BIJ_DEF),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool).
   (((= :bool -> bool -> bool)
   ((((BIJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $2)
   $1) $0)) ((/\
   ((((INJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $2)
   $1) $0))
   ((((SURJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $2)
   $1) $0)))))))))`),
 ((SURJ_DEF),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool).
   (((= :bool -> bool -> bool)
   ((((SURJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $2)
   $1) $0)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'b -> ('b -> bool) -> bool) ($3 $0)) $1)))))
   ((! :('b -> bool) -> bool) (\(x :'b). ((==>
   (((IN :'b -> ('b -> bool) -> bool) $0) $1))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\
   (((IN :'a -> ('a -> bool) -> bool) $0) $3)) (((= :'b -> 'b -> bool)
   ($4 $0)) $1)))))))))))))))`),
 ((INJ_DEF),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool).
   (((= :bool -> bool -> bool)
   ((((INJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $2)
   $1) $0)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'b -> ('b -> bool) -> bool) ($3 $0)) $1)))))
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((==> ((/\ (((IN :'a -> ('a -> bool) -> bool) $1) $3))
   (((IN :'a -> ('a -> bool) -> bool) $0) $3))) ((==>
   (((= :'b -> 'b -> bool) ($4 $1)) ($4 $0))) (((= :'a -> 'a -> bool)
   $1) $0)))))))))))))))`),
 ((IMAGE_DEF),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $1) $0))
   ((GSPEC :('a -> 'b # bool) -> 'b -> bool) (\(x :'a).
   (((, :'b -> bool -> 'b # bool) ($2 $0))
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)))))))))`),
 ((SING_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((SING :('a -> bool) -> bool) $0))
   ((? :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))))))))`),
 ((REST_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   ((REST :('a -> bool) -> 'a -> bool) $0))
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0)
   ((CHOICE :('a -> bool) -> 'a) $0)))))`),
 ((CHOICE_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==> (~
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool)))) (((IN :'a -> ('a -> bool) -> bool)
   ((CHOICE :('a -> bool) -> 'a) $0)) $0))))`),
 ((DELETE_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $1) $0))
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))))))))`),
 ((INSERT_DEF),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0))
   ((GSPEC :('a -> 'a # bool) -> 'a -> bool) (\(y :'a).
   (((, :'a -> bool -> 'a # bool) $0) ((\/ (((= :'a -> 'a -> bool) $0)
   $2)) (((IN :'a -> ('a -> bool) -> bool) $0) $1))))))))))`),
 ((DIFF_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   ((GSPEC :('a -> 'a # bool) -> 'a -> bool) (\(x :'a).
   (((, :'a -> bool -> 'a # bool) $0) ((/\
   (((IN :'a -> ('a -> bool) -> bool) $0) $2)) (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)))))))))))`),
 ((DISJOINT_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   (EMPTY :'a -> bool)))))))`),
 ((INTER_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   ((GSPEC :('a -> 'a # bool) -> 'a -> bool) (\(x :'a).
   (((, :'a -> bool -> 'a # bool) $0) ((/\
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))))))))))`),
 ((UNION_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   ((GSPEC :('a -> 'a # bool) -> 'a -> bool) (\(x :'a).
   (((, :'a -> bool -> 'a # bool) $0) ((\/
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))))))))))`),
 ((PSUBSET_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0)) ((/\
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0)) (~
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1) $0))))))))`),
 ((SUBSET_DEF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)))))))))`),
 ((UNIV_DEF),
  [],
  `(((= :('a -> bool) -> ('a -> bool) -> bool) (UNIV :'a -> bool))
   (\(x :'a). T))`),
 ((EMPTY_DEF),
  [],
  `(((= :('a -> bool) -> ('a -> bool) -> bool) (EMPTY :'a -> bool))
   (\(x :'a). F))`),
 ((GSPECIFICATION),
  [],
  `((! :(('b -> 'a # bool) -> bool) -> bool) (\(f :'b -> 'a # bool).
   ((! :('a -> bool) -> bool) (\(v :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $0)
   ((GSPEC :('b -> 'a # bool) -> 'a -> bool) $1)))
   ((? :('b -> bool) -> bool) (\(x :'b).
   (((= :'a # bool -> 'a # bool -> bool)
   (((, :'a -> bool -> 'a # bool) $1) T)) ($2 $0)))))))))`),
 ((SPECIFICATION),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   (((= :bool -> bool -> bool) (((IN :'a -> ('a -> bool) -> bool) $1)
   $0)) ($0 $1))))))`)]
theorems =
[((FINITE_ISO_NUM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((? :((num -> 'a) -> bool) -> bool) (\(f :num -> 'a). ((/\
   ((! :(num -> bool) -> bool) (\(n :num). ((! :(num -> bool) -> bool)
   (\(m :num). ((==> ((/\ ((< $1) ((CARD :('a -> bool) -> num) $3)))
   ((< $0) ((CARD :('a -> bool) -> num) $3)))) ((==>
   (((= :'a -> 'a -> bool) ($2 $1)) ($2 $0)))
   (((= :num -> num -> bool) $1) $0))))))))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1)
   ((GSPEC :(num -> 'a # bool) -> 'a -> bool) (\(n :num).
   (((, :'a -> bool -> 'a # bool) ($1 $0)) ((< $0)
   ((CARD :('a -> bool) -> num) $2))))))))))))`),
 ((INFINITE_DIFF_FINITE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==> ((/\
   ((INFINITE :('a -> bool) -> bool) $1))
   ((FINITE :('a -> bool) -> bool) $0))) (~
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   (EMPTY :'a -> bool))))))))`),
 ((FINITE_PSUBSET_UNIV),
  [],
  `(((= :bool -> bool -> bool) ((INFINITE :('a -> bool) -> bool)
   (UNIV :'a -> bool))) ((! :(('a -> bool) -> bool) -> bool)
   (\(s :'a -> bool). ((==> ((FINITE :('a -> bool) -> bool) $0))
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $0)
   (UNIV :'a -> bool))))))`),
 ((FINITE_PSUBSET_INFINITE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((INFINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0)) ((==>
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $1))
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $1))))))))`),
 ((INFINITE_UNIV),
  [],
  `(((= :bool -> bool -> bool) ((INFINITE :('a -> bool) -> bool)
   (UNIV :'a -> bool))) ((? :(('a -> 'a) -> bool) -> bool)
   (\(f :'a -> 'a). ((/\ ((! :('a -> bool) -> bool) (\(x :'a).
   ((! :('a -> bool) -> bool) (\(y :'a). ((==> (((= :'a -> 'a -> bool)
   ($2 $1)) ($2 $0))) (((= :'a -> 'a -> bool) $1) $0)))))))
   ((? :('a -> bool) -> bool) (\(y :'a). ((! :('a -> bool) -> bool)
   (\(x :'a). (~ (((= :'a -> 'a -> bool) ($2 $0)) $1))))))))))`),
 ((IN_INFINITE_NOT_FINITE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==> ((/\
   ((INFINITE :('a -> bool) -> bool) $1))
   ((FINITE :('a -> bool) -> bool) $0))) ((? :('a -> bool) -> bool)
   (\(x :'a). ((/\ (((IN :'a -> ('a -> bool) -> bool) $0) $2)) (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))))))))))`),
 ((INFINITE_SUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((INFINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((INFINITE :('a -> bool) -> bool) $0)))))))`),
 ((IMAGE_11_INFINITE),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b). ((==>
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((==> (((= :'b -> 'b -> bool) ($2 $1)) ($2 $0)))
   (((= :'a -> 'a -> bool) $1) $0)))))))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((INFINITE :('a -> bool) -> bool) $0))
   ((INFINITE :('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $1)
   $0))))))))`),
 ((NOT_IN_FINITE),
  [],
  `(((= :bool -> bool -> bool) ((INFINITE :('a -> bool) -> bool)
   (UNIV :'a -> bool))) ((! :(('a -> bool) -> bool) -> bool)
   (\(s :'a -> bool). ((==> ((FINITE :('a -> bool) -> bool) $0))
   ((? :('a -> bool) -> bool) (\(x :'a). (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))))))))`),
 ((LESS_CARD_DIFF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0)) ((==> ((<
   ((CARD :('a -> bool) -> num) $1)) ((CARD :('a -> bool) -> num)
   $0))) ((< 0) ((CARD :('a -> bool) -> num)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   $1))))))))))`),
 ((CARD_DIFF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0)) (((= :num -> num -> bool)
   ((CARD :('a -> bool) -> num)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0) $1))) ((-
   ((CARD :('a -> bool) -> num) $0)) ((CARD :('a -> bool) -> num)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   $1))))))))))`),
 ((SING_IFF_CARD1),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((SING :('a -> bool) -> bool) $0)) ((/\
   (((= :num -> num -> bool) ((CARD :('a -> bool) -> num) $0)) 1))
   ((FINITE :('a -> bool) -> bool) $0)))))`),
 ((CARD_SING),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). (((= :num -> num -> bool)
   ((CARD :('a -> bool) -> num)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool)))) 1)))`),
 ((CARD_PSUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $1)) ((<
   ((CARD :('a -> bool) -> num) $0)) ((CARD :('a -> bool) -> num)
   $1))))))))`),
 ((CARD_SUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $1)) ((<=
   ((CARD :('a -> bool) -> num) $0)) ((CARD :('a -> bool) -> num)
   $1))))))))`),
 ((CARD_UNION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0)) (((= :num -> num -> bool) ((+
   ((CARD :('a -> bool) -> num)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))
   ((CARD :('a -> bool) -> num)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))))
   ((+ ((CARD :('a -> bool) -> num) $1)) ((CARD :('a -> bool) -> num)
   $0)))))))))`),
 ((CARD_INTER_LESS_EQ),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((<=
   ((CARD :('a -> bool) -> num)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))
   ((CARD :('a -> bool) -> num) $1)))))))`),
 ((CARD_DELETE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0)) ((! :('a -> bool) -> bool)
   (\(x :'a). (((= :num -> num -> bool) ((CARD :('a -> bool) -> num)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $1) $0)))
   ((((COND :bool -> num -> num -> num)
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)) ((-
   ((CARD :('a -> bool) -> num) $1)) 1)) ((CARD :('a -> bool) -> num)
   $1))))))))`),
 ((CARD_EQ_0),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0)) (((= :bool -> bool -> bool)
   (((= :num -> num -> bool) ((CARD :('a -> bool) -> num) $0)) 0))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool))))))`),
 ((CARD_INSERT),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0)) ((! :('a -> bool) -> bool)
   (\(x :'a). (((= :num -> num -> bool) ((CARD :('a -> bool) -> num)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0) $1)))
   ((((COND :bool -> num -> num -> num)
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))
   ((CARD :('a -> bool) -> num) $1)) (SUC ((CARD :('a -> bool) -> num)
   $1)))))))))`),
 ((CARD_EMPTY),
  [],
  `(((= :num -> num -> bool) ((CARD :('a -> bool) -> num)
   (EMPTY :'a -> bool))) 0)`),
 ((IMAGE_FINITE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((FINITE :('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $0)
   $1)))))))`),
 ((SING_FINITE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((SING :('a -> bool) -> bool) $0)) ((FINITE :('a -> bool) -> bool)
   $0))))`),
 ((FINITE_SING),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((FINITE :('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool)))))`),
 ((FINITE_DIFF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((FINITE :('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)))))))`),
 ((PSUBSET_FINITE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $1))
   ((FINITE :('a -> bool) -> bool) $0)))))))`),
 ((SUBSET_FINITE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $1))
   ((FINITE :('a -> bool) -> bool) $0)))))))`),
 ((INTER_FINITE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((FINITE :('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)))))))`),
 ((FINITE_UNION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool) ((FINITE :('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))
   ((/\ ((FINITE :('a -> bool) -> bool) $1))
   ((FINITE :('a -> bool) -> bool) $0)))))))`),
 ((FINITE_DELETE),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((FINITE :('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1)))
   ((FINITE :('a -> bool) -> bool) $0))))))`),
 ((FINITE_INSERT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((FINITE :('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0)))
   ((FINITE :('a -> bool) -> bool) $0))))))`),
 ((FINITE_INDUCT),
  [],
  `((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(P :('a -> bool) -> bool). ((==> ((/\ ($0 (EMPTY :'a -> bool)))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==> ((/\
   ((FINITE :('a -> bool) -> bool) $0)) ($1 $0)))
   ((! :('a -> bool) -> bool) (\(e :'a). ((==> (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))) ($2
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0) $1))))))))))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   ((FINITE :('a -> bool) -> bool) $0)) ($1 $0)))))))`),
 ((FINITE_EMPTY),
  [],
  `((FINITE :('a -> bool) -> bool) (EMPTY :'a -> bool))`),
 ((BIJ_COMPOSE),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('b -> 'c) -> bool) -> bool) (\(g :'b -> 'c).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool).
   ((! :(('c -> bool) -> bool) -> bool) (\(u :'c -> bool). ((==> ((/\
   ((((BIJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $4)
   $2) $1))
   ((((BIJ :('b -> 'c) -> ('b -> bool) -> ('c -> bool) -> bool) $3)
   $1) $0)))
   ((((BIJ :('a -> 'c) -> ('a -> bool) -> ('c -> bool) -> bool)
   (((o :('b -> 'c) -> ('a -> 'b) -> 'a -> 'c) $3) $4)) $2)
   $0))))))))))))`),
 ((BIJ_EMPTY),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b). ((/\
   ((! :(('b -> bool) -> bool) -> bool) (\(s :'b -> bool).
   (((= :bool -> bool -> bool)
   ((((BIJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $1)
   (EMPTY :'a -> bool)) $0))
   (((= :('b -> bool) -> ('b -> bool) -> bool) $0)
   (EMPTY :'b -> bool)))))) ((! :(('a -> bool) -> bool) -> bool)
   (\(s :'a -> bool). (((= :bool -> bool -> bool)
   ((((BIJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $1)
   $0) (EMPTY :'b -> bool)))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool))))))))`),
 ((BIJ_ID),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((((BIJ :('a -> 'a) -> ('a -> bool) -> ('a -> bool) -> bool)
   (\(x :'a). $0)) $0) $0)))`),
 ((IMAGE_SURJ),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool).
   (((= :bool -> bool -> bool)
   ((((SURJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $2)
   $1) $0)) (((= :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2) $1))
   $0))))))))`),
 ((SURJ_EMPTY),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b). ((/\
   ((! :(('b -> bool) -> bool) -> bool) (\(s :'b -> bool).
   (((= :bool -> bool -> bool)
   ((((SURJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $1)
   (EMPTY :'a -> bool)) $0))
   (((= :('b -> bool) -> ('b -> bool) -> bool) $0)
   (EMPTY :'b -> bool)))))) ((! :(('a -> bool) -> bool) -> bool)
   (\(s :'a -> bool). (((= :bool -> bool -> bool)
   ((((SURJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $1)
   $0) (EMPTY :'b -> bool)))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool))))))))`),
 ((SURJ_COMPOSE),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('b -> 'c) -> bool) -> bool) (\(g :'b -> 'c).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool).
   ((! :(('c -> bool) -> bool) -> bool) (\(u :'c -> bool). ((==> ((/\
   ((((SURJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $4)
   $2) $1))
   ((((SURJ :('b -> 'c) -> ('b -> bool) -> ('c -> bool) -> bool) $3)
   $1) $0)))
   ((((SURJ :('a -> 'c) -> ('a -> bool) -> ('c -> bool) -> bool)
   (((o :('b -> 'c) -> ('a -> 'b) -> 'a -> 'c) $3) $4)) $2)
   $0))))))))))))`),
 ((SURJ_ID),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((((SURJ :('a -> 'a) -> ('a -> bool) -> ('a -> bool) -> bool)
   (\(x :'a). $0)) $0) $0)))`),
 ((INJ_EMPTY),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b). ((/\
   ((! :(('b -> bool) -> bool) -> bool) (\(s :'b -> bool).
   ((((INJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $1)
   (EMPTY :'a -> bool)) $0)))) ((! :(('a -> bool) -> bool) -> bool)
   (\(s :'a -> bool). (((= :bool -> bool -> bool)
   ((((INJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $1)
   $0) (EMPTY :'b -> bool)))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool))))))))`),
 ((INJ_COMPOSE),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('b -> 'c) -> bool) -> bool) (\(g :'b -> 'c).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('b -> bool) -> bool) -> bool) (\(t :'b -> bool).
   ((! :(('c -> bool) -> bool) -> bool) (\(u :'c -> bool). ((==> ((/\
   ((((INJ :('a -> 'b) -> ('a -> bool) -> ('b -> bool) -> bool) $4)
   $2) $1))
   ((((INJ :('b -> 'c) -> ('b -> bool) -> ('c -> bool) -> bool) $3)
   $1) $0)))
   ((((INJ :('a -> 'c) -> ('a -> bool) -> ('c -> bool) -> bool)
   (((o :('b -> 'c) -> ('a -> 'b) -> 'a -> 'c) $3) $4)) $2)
   $0))))))))))))`),
 ((INJ_ID),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((((INJ :('a -> 'a) -> ('a -> bool) -> ('a -> bool) -> bool)
   (\(x :'a). $0)) $0) $0)))`),
 ((IMAGE_INTER),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((SUBSET :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))
   (((INTER :('b -> bool) -> ('b -> bool) -> 'b -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2) $1))
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2)
   $0)))))))))`),
 ((IMAGE_SUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==>
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   (((SUBSET :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $0) $2))
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $0)
   $1)))))))))`),
 ((IMAGE_UNION),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))
   (((UNION :('b -> bool) -> ('b -> bool) -> 'b -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2) $1))
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2)
   $0)))))))))`),
 ((IMAGE_DELETE),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==> (~
   (((IN :'a -> ('a -> bool) -> bool) $1) $0)))
   (((= :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1)))
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2)
   $0)))))))))`),
 ((IMAGE_EQ_EMPTY),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   (((= :bool -> bool -> bool)
   (((= :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $0) $1))
   (EMPTY :'b -> bool))) (((= :('a -> bool) -> ('a -> bool) -> bool)
   $1) (EMPTY :'a -> bool)))))))`),
 ((IMAGE_INSERT),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   ((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0)))
   (((INSERT :'b -> ('b -> bool) -> 'b -> bool) ($2 $1))
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $2)
   $0)))))))))`),
 ((IMAGE_COMPOSE),
  [],
  `((! :(('b -> 'c) -> bool) -> bool) (\(f :'b -> 'c).
   ((! :(('a -> 'b) -> bool) -> bool) (\(g :'a -> 'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('c -> bool) -> ('c -> bool) -> bool)
   (((IMAGE :('a -> 'c) -> ('a -> bool) -> 'c -> bool)
   (((o :('b -> 'c) -> ('a -> 'b) -> 'a -> 'c) $2) $1)) $0))
   (((IMAGE :('b -> 'c) -> ('b -> bool) -> 'c -> bool) $2)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $1)
   $0)))))))))`),
 ((IMAGE_ID),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((IMAGE :('a -> 'a) -> ('a -> bool) -> 'a -> bool) (\(x :'a). $0))
   $0)) $0)))`),
 ((IMAGE_EMPTY),
  [],
  `((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   (((= :('b -> bool) -> ('b -> bool) -> bool)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $0)
   (EMPTY :'a -> bool))) (EMPTY :'b -> bool))))`),
 ((IMAGE_IN),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   (((IN :'a -> ('a -> bool) -> bool) $1) $0))
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   (((IN :'b -> ('b -> bool) -> bool) ($0 $2))
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $0)
   $1)))))))))`),
 ((IN_IMAGE),
  [],
  `((! :('b -> bool) -> bool) (\(y :'b).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> 'b) -> bool) -> bool) (\(f :'a -> 'b).
   (((= :bool -> bool -> bool) (((IN :'b -> ('b -> bool) -> bool) $2)
   (((IMAGE :('a -> 'b) -> ('a -> bool) -> 'b -> bool) $0) $1)))
   ((? :('a -> bool) -> bool) (\(x :'a). ((/\ (((= :'b -> 'b -> bool)
   $3) ($1 $0))) (((IN :'a -> ('a -> bool) -> bool) $0)
   $2)))))))))))`),
 ((SING_IFF_EMPTY_REST),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((SING :('a -> bool) -> bool) $0)) ((/\
   (~ (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool)))) (((= :('a -> bool) -> ('a -> bool) -> bool)
   ((REST :('a -> bool) -> 'a -> bool) $0))
   (EMPTY :'a -> bool))))))`),
 ((REST_SING),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   ((REST :('a -> bool) -> 'a -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool)))) (EMPTY :'a -> bool))))`),
 ((CHOICE_SING),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). (((= :'a -> 'a -> bool)
   ((CHOICE :('a -> bool) -> 'a)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool)))) $0)))`),
 ((DELETE_EQ_SING),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))
   (((= :bool -> bool -> bool)
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $1) $0))
   (EMPTY :'a -> bool))) (((= :('a -> bool) -> ('a -> bool) -> bool)
   $1) (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool)))))))))`),
 ((SING_DELETE),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))) $0)) (EMPTY :'a -> bool))))`),
 ((INSERT_SING_UNION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0) $1))
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))) $1))))))`),
 ((DISJOINT_SING_EMPTY),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))) (EMPTY :'a -> bool))))`),
 ((EQUAL_SING),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). (((= :bool -> bool -> bool)
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1)
   (EMPTY :'a -> bool))) (((INSERT :'a -> ('a -> bool) -> 'a -> bool)
   $0) (EMPTY :'a -> bool)))) (((= :'a -> 'a -> bool) $1) $0))))))`),
 ((NOT_EMPTY_SING),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). (~
   (((= :('a -> bool) -> ('a -> bool) -> bool) (EMPTY :'a -> bool))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))))))`),
 ((NOT_SING_EMPTY),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). (~
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))) (EMPTY :'a -> bool)))))`),
 ((IN_SING),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $1)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool)))) (((= :'a -> 'a -> bool) $1) $0))))))`),
 ((SING),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). ((SING :('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool)))))`),
 ((REST_PSUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==> (~
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool))))
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool)
   ((REST :('a -> bool) -> 'a -> bool) $0)) $0))))`),
 ((REST_SUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   ((REST :('a -> bool) -> 'a -> bool) $0)) $0)))`),
 ((CHOICE_INSERT_REST),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==> (~
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool)))) (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool)
   ((CHOICE :('a -> bool) -> 'a) $0))
   ((REST :('a -> bool) -> 'a -> bool) $0))) $0))))`),
 ((CHOICE_NOT_IN_REST),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). (~
   (((IN :'a -> ('a -> bool) -> bool) ((CHOICE :('a -> bool) -> 'a)
   $0)) ((REST :('a -> bool) -> 'a -> bool) $0)))))`),
 ((DISJOINT_DELETE_SYM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $2) $0)) $1))
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $1) $0)) $2))))))))`),
 ((DELETE_INTER),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $2) $0)) $1))
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1))
   $0))))))))`),
 ((INSERT_DELETE),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==>
   (((IN :'a -> ('a -> bool) -> bool) $1) $0))
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1))) $0))))))`),
 ((DELETE_INSERT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $0)) $1))
   ((((COND :bool -> ('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((= :'a -> 'a -> bool) $2) $1))
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1))))))))))`),
 ((PSUBSET_MEMBER),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0)) ((/\
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)) (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $2)))))))))))`),
 ((PSUBSET_INSERT_SUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((? :('a -> bool) -> bool) (\(x :'a). ((/\ (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $2)))
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0) $2))
   $1)))))))))`),
 ((DIFF_INSERT),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0) $1)))
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $2) $0)) $1))))))))`),
 ((SUBSET_INSERT_DELETE),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $0)))
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $1) $2)) $0))))))))`),
 ((SUBSET_DELETE),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $2))) ((/\ (~
   (((IN :'a -> ('a -> bool) -> bool) $2) $1)))
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))))))))`),
 ((DELETE_SUBSET),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1)) $0)))))`),
 ((DELETE_COMM),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $2)) $1))
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1)) $2))))))))`),
 ((DELETE_DELETE),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1)) $1))
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1))))))`),
 ((EMPTY_DELETE),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) (EMPTY :'a -> bool))
   $0)) (EMPTY :'a -> bool))))`),
 ((IN_DELETE_EQ),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(x' :'a). (((= :bool -> bool -> bool) (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $1) $2))
   (((IN :'a -> ('a -> bool) -> bool) $0) $2)))
   (((= :bool -> bool -> bool) (((IN :'a -> ('a -> bool) -> bool) $1)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $2) $0)))
   (((IN :'a -> ('a -> bool) -> bool) $0)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $2) $1))))))))))`),
 ((DELETE_NON_ELEMENT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) (~ (((IN :'a -> ('a -> bool) -> bool)
   $1) $0))) (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $0) $1)) $0))))))`),
 ((IN_DELETE),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $1)
   (((DELETE :('a -> bool) -> 'a -> 'a -> bool) $2) $0))) ((/\
   (((IN :'a -> ('a -> bool) -> bool) $1) $2)) (~
   (((= :'a -> 'a -> bool) $1) $0))))))))))`),
 ((INSERT_DIFF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0) $2)) $1))
   ((((COND :bool -> ('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2)
   $1))))))))))`),
 ((SUBSET_INSERT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((==> (~
   (((IN :'a -> ('a -> bool) -> bool) $1) $0)))
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $0)))
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))))))))`),
 ((INSERT_SUBSET),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $1)) $0)) ((/\
   (((IN :'a -> ('a -> bool) -> bool) $2) $0))
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))))))))`),
 ((DISJOINT_INSERT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $1)) $0)) ((/\
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $1) $0)) (~
   (((IN :'a -> ('a -> bool) -> bool) $2) $0))))))))))`),
 ((INSERT_INTER),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $1)) $0))
   ((((COND :bool -> ('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $2) $0))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)))))))))`),
 ((INSERT_UNION_EQ),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $1)) $0))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)))))))))`),
 ((INSERT_UNION),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $1)) $0))
   ((((COND :bool -> ('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $2) $0))
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0))))))))))`),
 ((NOT_EMPTY_INSERT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). (~
   (((= :('a -> bool) -> ('a -> bool) -> bool) (EMPTY :'a -> bool))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0)))))))`),
 ((NOT_INSERT_EMPTY),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). (~
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0))
   (EMPTY :'a -> bool)))))))`),
 ((INSERT_UNIV),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $0)
   (UNIV :'a -> bool))) (UNIV :'a -> bool))))`),
 ((INSERT_COMM),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0)))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $2) $0)))))))))`),
 ((INSERT_INSERT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0)))
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0))))))`),
 ((ABSORPTION),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) (((IN :'a -> ('a -> bool) -> bool) $1)
   $0)) (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0)) $0))))))`),
 ((DECOMPOSITION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))
   ((? :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((/\
   (((= :('a -> bool) -> ('a -> bool) -> bool) $2)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0))) (~
   (((IN :'a -> ('a -> bool) -> bool) $1) $0))))))))))`),
 ((SET_CASES),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((\/
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool))) ((? :('a -> bool) -> bool) (\(x :'a).
   ((? :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((/\
   (((= :('a -> bool) -> ('a -> bool) -> bool) $2)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0))) (~
   (((IN :'a -> ('a -> bool) -> bool) $1) $0))))))))))`),
 ((COMPONENT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((IN :'a -> ('a -> bool) -> bool) $1)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0))))))`),
 ((IN_INSERT),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) (((IN :'a -> ('a -> bool) -> bool) $2)
   (((INSERT :'a -> ('a -> bool) -> 'a -> bool) $1) $0))) ((\/
   (((= :'a -> 'a -> bool) $2) $1)) (((IN :'a -> ('a -> bool) -> bool)
   $2) $0)))))))))`),
 ((DIFF_EQ_EMPTY),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0) $0))
   (EMPTY :'a -> bool))))`),
 ((DIFF_DIFF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)) $0))
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0))))))`),
 ((DIFF_UNIV),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   (UNIV :'a -> bool))) (EMPTY :'a -> bool))))`),
 ((EMPTY_DIFF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (EMPTY :'a -> bool)) $0)) (EMPTY :'a -> bool))))`),
 ((DIFF_EMPTY),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))) $0)))`),
 ((IN_DIFF),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $0)
   (((DIFF :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1))) ((/\
   (((IN :'a -> ('a -> bool) -> bool) $0) $2)) (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))))))))))`),
 ((DISJOINT_UNION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(u :'a -> bool).
   (((= :bool -> bool -> bool)
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1)) $0))
   ((/\ (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $2) $0))
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $1)
   $0)))))))))`),
 ((DISJOINT_EMPTY_REFL),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool)
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool)))
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $0) $0))))`),
 ((DISJOINT_EMPTY),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((/\
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool)
   (EMPTY :'a -> bool)) $0))
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool)))))`),
 ((DISJOINT_SYM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $0) $1))))))`),
 ((IN_DISJOINT),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((DISJOINT :('a -> bool) -> ('a -> bool) -> bool) $1) $0)) (~
   ((? :('a -> bool) -> bool) (\(x :'a). ((/\
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'a -> ('a -> bool) -> bool) $0) $1))))))))))`),
 ((INTER_OVER_UNION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(u :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1))
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2)
   $0)))))))))`),
 ((UNION_OVER_INTER),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(u :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1))
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2)
   $0)))))))))`),
 ((INTER_UNIV),
  [],
  `((/\ ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (UNIV :'a -> bool)) $0)) $0))))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   (UNIV :'a -> bool))) $0))))`),
 ((INTER_EMPTY),
  [],
  `((/\ ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (EMPTY :'a -> bool)) $0)) (EMPTY :'a -> bool)))))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))) (EMPTY :'a -> bool)))))`),
 ((SUBSET_INTER_ABSORPTION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   $1))))))`),
 ((INTER_SUBSET),
  [],
  `((/\ ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   $1)))))) ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0) $1))
   $1))))))`),
 ((INTER_COMM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   $1))))))`),
 ((INTER_IDEMPOT),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0) $0))
   $0)))`),
 ((INTER_ASSOC),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(u :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1)) $0))
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)))))))))`),
 ((IN_INTER),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $0)
   (((INTER :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1)))
   ((/\ (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)))))))))`),
 ((EMPTY_UNION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   (EMPTY :'a -> bool))) ((/\
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1)
   (EMPTY :'a -> bool))) (((= :('a -> bool) -> ('a -> bool) -> bool)
   $0) (EMPTY :'a -> bool))))))))`),
 ((UNION_UNIV),
  [],
  `((/\ ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (UNIV :'a -> bool)) $0)) (UNIV :'a -> bool)))))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   (UNIV :'a -> bool))) (UNIV :'a -> bool)))))`),
 ((UNION_EMPTY),
  [],
  `((/\ ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (EMPTY :'a -> bool)) $0)) $0))))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   (EMPTY :'a -> bool))) $0))))`),
 ((SUBSET_UNION_ABSORPTION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   $0))))))`),
 ((SUBSET_UNION),
  [],
  `((/\ ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0)))))))
   ((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   $1)))))))`),
 ((UNION_COMM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0)
   $1))))))`),
 ((UNION_IDEMPOT),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $0) $0))
   $0)))`),
 ((UNION_ASSOC),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(u :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1)) $0))
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)))))))))`),
 ((IN_UNION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $0)
   (((UNION :('a -> bool) -> ('a -> bool) -> 'a -> bool) $2) $1)))
   ((\/ (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)))))))))`),
 ((PSUBSET_UNIV),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool)
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $0)
   (UNIV :'a -> bool))) ((? :('a -> bool) -> bool) (\(x :'a). (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)))))))`),
 ((NOT_UNIV_PSUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). (~
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (UNIV :'a -> bool)) $0))))`),
 ((NOT_PSUBSET_EMPTY),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). (~
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool)))))`),
 ((PSUBSET_IRREFL),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). (~
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $0))))`),
 ((PSUBSET_TRANS),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(u :'a -> bool). ((==> ((/\
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $2) $1))
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))
   (((PSUBSET :('a -> bool) -> ('a -> bool) -> bool) $2) $0))))))))`),
 ((UNIV_SUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (UNIV :'a -> bool)) $0))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (UNIV :'a -> bool)))))`),
 ((SUBSET_UNIV),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $0)
   (UNIV :'a -> bool))))`),
 ((SUBSET_EMPTY),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool)
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool))) (((= :('a -> bool) -> ('a -> bool) -> bool)
   $0) (EMPTY :'a -> bool)))))`),
 ((EMPTY_SUBSET),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool)
   (EMPTY :'a -> bool)) $0)))`),
 ((SUBSET_ANTISYM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool). ((==> ((/\
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $1)))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1) $0))))))`),
 ((SUBSET_REFL),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $0) $0)))`),
 ((SUBSET_TRANS),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(u :'a -> bool). ((==> ((/\
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $2) $1))
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))
   (((SUBSET :('a -> bool) -> ('a -> bool) -> bool) $2) $0))))))))`),
 ((EQ_UNIV),
  [],
  `(((= :bool -> bool -> bool) ((! :('a -> bool) -> bool) (\(x :'a).
   (((IN :'a -> ('a -> bool) -> bool) $0) (s :'a -> bool)))))
   (((= :('a -> bool) -> ('a -> bool) -> bool) (s :'a -> bool))
   (UNIV :'a -> bool)))`),
 ((EMPTY_NOT_UNIV),
  [],
  `(~ (((= :('a -> bool) -> ('a -> bool) -> bool) (EMPTY :'a -> bool))
   (UNIV :'a -> bool)))`),
 ((UNIV_NOT_EMPTY),
  [],
  `(~ (((= :('a -> bool) -> ('a -> bool) -> bool) (UNIV :'a -> bool))
   (EMPTY :'a -> bool)))`),
 ((IN_UNIV),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a).
   (((IN :'a -> ('a -> bool) -> bool) $0) (UNIV :'a -> bool))))`),
 ((MEMBER_NOT_EMPTY),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   (((= :bool -> bool -> bool) ((? :('a -> bool) -> bool) (\(x :'a).
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)))) (~
   (((= :('a -> bool) -> ('a -> bool) -> bool) $0)
   (EMPTY :'a -> bool))))))`),
 ((NOT_IN_EMPTY),
  [],
  `((! :('a -> bool) -> bool) (\(x :'a). (~
   (((IN :'a -> ('a -> bool) -> bool) $0) (EMPTY :'a -> bool)))))`),
 ((SET_MINIMUM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> num) -> bool) -> bool) (\(M :'a -> num).
   (((= :bool -> bool -> bool) ((? :('a -> bool) -> bool) (\(x :'a).
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))))
   ((? :('a -> bool) -> bool) (\(x :'a). ((/\
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   ((! :('a -> bool) -> bool) (\(y :'a). ((==>
   (((IN :'a -> ('a -> bool) -> bool) $0) $3)) ((<= ($2 $1)) ($2
   $0)))))))))))))`),
 ((NUM_SET_WOP),
  [],
  `((! :((num -> bool) -> bool) -> bool) (\(s :num -> bool).
   (((= :bool -> bool -> bool) ((? :(num -> bool) -> bool) (\(n :num).
   (((IN :num -> (num -> bool) -> bool) $0) $1))))
   ((? :(num -> bool) -> bool) (\(n :num). ((/\
   (((IN :num -> (num -> bool) -> bool) $0) $1))
   ((! :(num -> bool) -> bool) (\(m :num). ((==>
   (((IN :num -> (num -> bool) -> bool) $0) $2)) ((<= $1)
   $0))))))))))`),
 ((NOT_EQUAL_SETS),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool) (~
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))
   ((? :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)) (~
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))))))))))`),
 ((EXTENSION),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(t :'a -> bool).
   (((= :bool -> bool -> bool)
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((IN :'a -> ('a -> bool) -> bool) $0) $2))
   (((IN :'a -> ('a -> bool) -> bool) $0) $1)))))))))`)]
