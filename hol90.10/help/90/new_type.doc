\DOC new_type

\TYPE {new_type : {{Name :string, Arity :int}} -> unit}

\SYNOPSIS
Declares a new type or type constructor.

\DESCRIBE
A call {new_type{{Name = "t", Arity = n}}} declares a new {n}-ary type 
constructor called {t} in the current theory segment. If {n} is zero, this is 
just a new base type.

\FAILURE
Fails if HOL is not in draft mode, or if the name is not a valid type
name, or there is already a type operator of that name in the current theory.

\EXAMPLE
A non-definitional version of ZF set theory might declare a new type {set} and 
start using it as follows:
{
   - new_theory `ZF`;;
   () : unit

   - new_type{{Name="set", Arity=0}};
   () : unit

   - new_infix{{Name="mem",Ty = ==`:set->set->bool`==}};
   () : unit

   - new_open_axiom("ext", --`(!z. z mem x = z mem y) ==> (x = y)`--);
   |- (!z. z mem x = z mem y) ==> (x = y)
}
\SEEALSO
types, type_abbrevs, new_type_abbrev.

\ENDDOC
