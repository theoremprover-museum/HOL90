head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.34.22;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.34.22;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC SUBST_TAC

\TYPE {SUBST_TAC : (thm list -> tactic)}

\SYNOPSIS
Makes term substitutions in a goal using a list of theorems.

\KEYWORDS
tactic.

\DESCRIBE

Given a list of theorems {A1|-u1=v1,...,An|-un=vn} and a goal {(A,t)},
{SUBST_TAC} rewrites the term {t} into the term {t[v1,...,vn/u1,...,un]} by
simultaneously substituting {vi} for each occurrence of {ui} in {t} with {vi}:
{
              A ?- t
   =============================  SUBST_TAC [A1|-u1=v1;...;An|-un=vn]
    A ?- t[v1,...,vn/u1,...,un]
}
\noindent The assumptions of the theorems used to substitute with are not added
to the assumptions {A} of the goal, while they are recorded in the proof.  If
any {Ai} is not a subset of {A} (up to alpha-conversion), then {SUBST_TAC
[A1|-u1=v1;...;An|-un=vn]} results in an invalid tactic.

{SUBST_TAC} automatically renames bound variables to prevent free variables in
{vi} becoming bound after substitution.

\FAILURE
{SUBST_TAC [th1;...;thn] (A,t)} fails if the conclusion of any theorem in the
list is not an equation.  No change is made to the goal if no occurrence of the
left-hand side of the conclusion of {thi} appears in {t}.

\EXAMPLE
When trying to solve the goal
{
   ?- (n + 0) + (0 + m) = m + n
}
\noindent by substituting with the theorems
{
   #let thm1 = SPECL ["m:num"; "n:num"] ADD_SYM
   #and thm2 = CONJUNCT1 ADD_CLAUSES;;
   thm1 = |- m + n = n + m
   thm2 = |- 0 + m = m
}
\noindent applying {SUBST_TAC [thm1; thm2]} results in the goal
{
   ?- (n + 0) + m = n + m
}
\USES
{SUBST_TAC} is used when rewriting (for example, with {REWRITE_TAC}) is
extensive or would diverge.  Substituting is also much faster than rewriting.

\SEEALSO
ONCE_REWRITE_TAC, PURE_REWRITE_TAC, REWRITE_TAC, SUBST1_TAC, SUBST_ALL_TAC.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
