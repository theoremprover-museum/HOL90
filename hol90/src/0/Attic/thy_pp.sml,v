head	1.4;
access;
symbols
	HOL97:1.2.0.4
	bpHOL97:1.2
	hol90_9_alpha:1.2
	hol90_pre8_for_multiple_compilers:1.2.0.2
	hol90_pre8_after_donalds_separate_compilation_changes:1.2
	hol90_8_after_merging_Konrad_Elsa:1.2
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.4
date	96.02.08.00.32.26;	author drs1004;	state dead;
branches;
next	1.3;

1.3
date	95.12.18.11.35.36;	author drs1004;	state Exp;
branches;
next	1.2;

1.2
date	95.10.17.17.07.38;	author drs1004;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	95.10.16.13.29.59;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.29.59;	author rjb;	state Exp;
branches;
next	;

1.2.4.1
date	97.06.11.17.24.51;	author kxs;	state Exp;
branches;
next	1.2.4.2;

1.2.4.2
date	97.07.11.15.08.42;	author kxs;	state dead;
branches;
next	;


desc
@@


1.4
log
@New theory mechanism, by Donald Syme, and many other enhancements.
@
text
@(* ===================================================================== *)
(* FILE          : thy_pp.sml                                            *)
(* DESCRIPTION   : Prettyprints terms and types to theory files          *)
(*                                                                       *)
(* AUTHOR        : Konrad Slind, University of Calgary                   *)
(* DATE          : November 7, 1992                                      *)
(* ===================================================================== *)


functor THY_PP(structure Term : Private_term_sig
               structure Hol_pp : Hol_pp_sig
               sharing 
                  Term = Hol_pp.Term) : Thy_pp_sig =
struct
structure Term = Term;
open Term;
open Term.Type;

val THY_PP_ERR = Exception.ERR "THY_PP";
    
val space = " "
val comma = ","
val dot = "."
val dollar = "$";

val CONSISTENT = PP.CONSISTENT
val INCONSISTENT = PP.INCONSISTENT;

fun pr_list pfun dfun bfun L =
   let fun pr [] = ()
         | pr [i] = pfun i
         | pr (i::rst) = ( pfun i; dfun(); bfun(); pr rst )
   in
   pr L
   end;

(* Used in printing out a holsig file *)
fun pp_type_rep ppstrm =
   let val {add_string,add_break,begin_block,end_block,...} = 
              PP.with_ppstream ppstrm
       fun pr(Utv x) = add_string x
         | pr(Tyapp{Tyop,Args=[]}) = add_string Tyop
         | pr(Tyapp{Tyop,Args}) = 
             ( begin_block CONSISTENT 3;
               add_string "(";
               add_string(Tyop^comma);
               add_break(0,0);
               begin_block INCONSISTENT 1;
               add_string"["; 
               pr_list pr (fn () => add_string ",")
                          (fn () => add_break(0,0))
                          Args;
               add_string "]";
               end_block();
              add_string")";
              end_block()
            )
(*        | pr _ = raise THY_PP_ERR("pp_type_rep","badly formed type") *)
  in  pr
  end;

(************ Term Pretty Printer ************************************)

fun pp_term ppstrm tm = 
   let val pp_type = Hol_pp.pp_type ppstrm
       val {add_string,add_break,begin_block,end_block,...} = 
              PP.with_ppstream ppstrm
       fun pr_term (Fv {Name,Ty}) = 
            ( add_string "(";
              add_string Name;
              add_string " :";
              pp_type Ty ~1;
              add_string ")"
            )
        | pr_term (Bv i) = add_string (dollar^(Lib.int_to_string i))
        | pr_term (Const {Name,Ty}) = 
            let val ptype = (Term.is_polymorphic Name)
            in
              if ptype then add_string "(" else ();
              add_string Name;
              if ptype
              then (add_string " :"; pp_type Ty ~1; add_string ")")
              else () 
            end
        | pr_term (Abs{Bvar,Body}) = 
            ( add_string "(";
              add_string "\\";
              pr_term Bvar;
              add_string dot;
              add_break(1,0);
              pr_term Body;
              add_string ")"
            )
        | pr_term (Comb{Rator, Rand}) =
           ( add_string "(";
             pr_term Rator;
             add_break(1,0);
             pr_term Rand;
             add_string ")"
           )
        | pr_term _ = raise THY_PP_ERR("pr_term","term construction")
   in
     begin_block INCONSISTENT 0;
     pr_term tm;
     end_block()
   end;


end; (* THY_PP *)
@


1.3
log
@Preterm and other changes, see 7.changes
@
text
@@


1.2
log
@Keeping you up to date:

I'm about to do a checkin of elsa's modifications to the hol90.7
sources to create her hol90.pre8.  To recap what I've done:
	- I checked out hol90 (in /usr/groups/hol/drs1004/hol90)
		cvs co hol90
	  (Well, to be honest, I only checked out those
	  parts of hol90 I knew I'd be changing, e.g. not the
	  Manual, and only parts of the library.  Checking out the
	  entire source takes a while, mainly due to the enormous number
	  of help files.  The limiting factor is files/second, which
         runs at around 5 when CVS is working on nfs over a network, not
         KB/second, which you might at first think it would be).

	- By doing a recursive diff between Elsa's source and the
	hol90.7 source I found all the changes Elsa had made to
	source files.  I copied relevant files from Elsa's source
	into my checked out version.  The only new files were
		- the sml_system files in src/0
		- some make scripts in src/.
	Changed files were in:
		src/{0,1,2,3}
		library/arith/src/thm_convs.sml
		library/list/src/list_conv1.sml
		library/num/src/num_lib.sml
		library/prog_logic/src/halts_logic.sml
		library/prog_logic/src/translation.sml
		library/prog_logic/theories/src/mk_halts.sml
		library/real/theories/src/Make
		library/real/theories/src/equiv.sml
		library/real/theories/src/seq.sml
		library/reduce/src/arithconv.sml
		library/string/src/string_conv.sml
		library/unity/theories/src/aux_definitions.sml
		library/word/theories/src/*

	- I will now commit these changes, with this email as the log message.
		cvs commit

	- Tomorrow I will get this version compiling
	with NJSML 108 (I will probably add
	the files to enable the NJSML compilation manager to make
	this easier), then check those changes in.  I think it's
	good to get things in a working state.
@
text
@d10 1
a10 2
functor THY_PP((* structure Lib : Lib_sig *)
	       structure Term : Term_sig
d19 2
a20 4
fun THY_PP_ERR{function,message} =
    Exception.HOL_ERR{origin_structure = "Hol_pp",
		      origin_function = function,
		      message = message}
d42 1
a42 1
         | pr(Tyc x) = add_string x
d58 1
a58 2
        | pr _ = raise THY_PP_ERR{function = "pp_type_rep",
                                  message = "badly formed type"}
d101 1
a101 2
        | pr_term _ = raise THY_PP_ERR{function="pr_term",
                                       message="term construction"}
@


1.2.4.1
log
@Removed files are parse files and portability files that have
effectively been moved elsewhere.

Modified files are up to date for ML 109.26.
@
text
@d36 3
a38 1
   in  pr L   end;
d66 1
a66 1
(*---------------------- Term Pretty Printer -------------------------------*)
@


1.2.4.2
log
@This has been moved to the theory directory, where it belongs.
@
text
@@


1.1
log
@Initial revision
@
text
@d10 2
a11 1
functor THY_PP(structure Term : Term_sig
d20 4
a23 3
fun THY_PP_ERR{function,message} = HOL_ERR{origin_structure = "Hol_pp",
		                          origin_function = function,
		                          message = message}
d79 1
a79 1
        | pr_term (Bv i) = add_string (dollar^(int_to_string i))
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
