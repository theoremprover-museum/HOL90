head	1.5;
access;
symbols
	HOL97:1.3.0.4
	bpHOL97:1.3
	hol90_9_alpha:1.3
	hol90_pre8_for_multiple_compilers:1.3.0.2
	hol90_pre8_after_donalds_separate_compilation_changes:1.2
	hol90_8_after_merging_Konrad_Elsa:1.2
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.5
date	96.02.08.00.32.27;	author drs1004;	state dead;
branches;
next	1.4;

1.4
date	95.12.18.11.35.37;	author drs1004;	state Exp;
branches;
next	1.3;

1.3
date	95.11.15.13.24.48;	author rjb;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	95.10.17.17.07.39;	author drs1004;	state Exp;
branches;
next	1.1;

1.1
date	95.10.16.13.30.00;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.30.00;	author rjb;	state Exp;
branches;
next	;

1.3.4.1
date	97.06.11.17.24.52;	author kxs;	state dead;
branches;
next	;


desc
@@


1.5
log
@New theory mechanism, by Donald Syme, and many other enhancements.
@
text
@structure Term = Term;

val THY_YAK_ERR = Exception.ERR "theory grammar file (thy_yak)";

(* The next "end" closes the Header structure in the compiled file so that
   the declarations below are available in the rest of the compiled code.
   The Empty structure then matches with the "end" that should have closed
   the Header structure.
*)
end

open Portable;
open General;

structure Empty =
struct
%%
%term ident of string
    | type_ident of string
    | type_var_ident of string
    | lambda
    | db_index of int
    | num of string
    | lparen
    | rparen
    | type_lparen 
    | type_rparen
    | type_comma
    | colon
    | dot
    | type_right_arrow
    | type_hash
    | type_plus
    | string_ of string
    | EOLEX
    | EOF 

%nonterm START of Term.term
       | TERM of Term.term
       | TYPE of Term.Type.hol_type
       | HASH_TYPE of Term.Type.hol_type
       | PLUS_TYPE of Term.Type.hol_type
       | APP_TYPE of Term.Type.hol_type
       | TYPE_ARG of Term.Type.hol_type list
       | BASIC_TYPE_ARG of Term.Type.hol_type list
       | TYPE_LIST of Term.Type.hol_type list
       | BASIC of Term.Type.hol_type



%start START
%eop EOF EOLEX
%pos int
%header (functor thyLrValsFun (structure Token : TOKEN
                               structure Term : Private_term_sig))

%name thy
%noshift EOF
%pure
%verbose
%%

START : TERM (TERM)

TERM : db_index (Term.Bv db_index)
       |
       string_ (Term.Const {Name=string_, Ty=Term.Type.mk_type{Tyop="string",Args=[]}})
       |
       num (Term.Const{Name=num, Ty=Term.Type.mk_type{Tyop="num",Args=[]}})
       |
       ident (Term.lookup_const ident)
       |
       lparen ident colon TYPE rparen
            ((case (Term.lookup_const ident)
                of (Term.Const{Name,...})
                     => Term.Const{Name=Name,Ty=TYPE}
                 | _ => THY_YAK_ERR("thy_yak","impl. error"))
             handle NOT_FOUND
             => Term.Fv{Name=ident,Ty=TYPE})
       |
       lparen lambda lparen ident colon TYPE rparen dot TERM rparen
            (Term.Abs{Bvar=Term.Fv{Name=ident,Ty=TYPE},
                      Body=TERM})
       |
       lparen TERM TERM rparen (Term.Comb{Rator=TERM1, Rand=TERM2})

TYPE : PLUS_TYPE type_right_arrow TYPE 
         (Term.Type.Tyapp {Tyop="fun",Args=[PLUS_TYPE, TYPE]})
       |
       PLUS_TYPE (PLUS_TYPE)

PLUS_TYPE : HASH_TYPE type_plus PLUS_TYPE (Term.Type.Tyapp
                                       {Tyop="sum",Args=[HASH_TYPE,PLUS_TYPE]})
            |
            HASH_TYPE (HASH_TYPE)

HASH_TYPE : APP_TYPE type_hash HASH_TYPE (Term.Type.Tyapp
                                       {Tyop="prod",Args=[APP_TYPE,HASH_TYPE]})
            |
            APP_TYPE (APP_TYPE)

APP_TYPE : TYPE_ARG type_ident (Term.Type.Tyapp
                                {Tyop=type_ident, Args=TYPE_ARG})
           | 
           BASIC (BASIC)

TYPE_ARG : TYPE_ARG type_ident ([Term.Type.Tyapp
                                {Tyop=type_ident, Args=TYPE_ARG}])
           |
           BASIC_TYPE_ARG (BASIC_TYPE_ARG)

BASIC_TYPE_ARG : type_lparen TYPE type_comma TYPE_LIST type_rparen 
                     (TYPE::TYPE_LIST)
                 |
                 BASIC ([BASIC])

TYPE_LIST : TYPE type_comma TYPE_LIST (TYPE::TYPE_LIST)
            |
            TYPE ([TYPE])

BASIC: type_var_ident (Term.Type.Utv type_var_ident)
       |
       type_ident (Term.Type.mk_type {Tyop=type_ident,Args=[]})
       |
       type_lparen TYPE type_rparen (TYPE)
@


1.4
log
@Preterm and other changes, see 7.changes
@
text
@@


1.3
log
@The HOL90 sources have been changed to allow for the use of different
Standard ML compilers (possibly simultaneously).

 * Many files in "src/0" changed to make them more portable across different
   ML compilers. Various additions have been made to the Portable structure
   and files changed to access identifiers in the Portable structure rather
   than from the global environment. Worthy of special note are:

   - The pointer equality used in "src/0/term.sml" has been made into a
     function in the Portable structure.

   - The ML-Lex and ML-Yacc files for the various parsers have been changed
     to access the Portable structure. Both the source files and the SML
     produced from them have been changed but I have not verified that the
     source files would reproduce the new SML versions if ML-Lex and ML-Yacc
     were to be rerun on them. The changes involve some hacks that exploit the
     way ML-Lex and ML-Yacc work. See the sources for details.

R.J.Boulton, 15th November 1995.
@
text
@d3 1
a3 4
fun THY_YAK_ERR{function,message} = 
    Exception.HOL_ERR{origin_structure = "theory grammar file (thy_yak)",
                      origin_function = function,
                      message = message};
d55 1
a55 1
                               structure Term : Term_sig))
d67 1
a67 1
       string_ (Term.Const {Name=string_, Ty=Term.Type.Tyc "string"})
d69 1
a69 1
       num (Term.Const{Name=num, Ty=Term.Type.Tyc"num"})
d77 1
a77 2
                 | _ => raise THY_YAK_ERR{function = "thy_yak",
                                          message = "impl. error"})
d123 1
a123 1
       type_ident (Term.Type.Tyc type_ident)
@


1.3.4.1
log
@Removed files are parse files and portability files that have
effectively been moved elsewhere.

Modified files are up to date for ML 109.26.
@
text
@@


1.2
log
@Keeping you up to date:

I'm about to do a checkin of elsa's modifications to the hol90.7
sources to create her hol90.pre8.  To recap what I've done:
	- I checked out hol90 (in /usr/groups/hol/drs1004/hol90)
		cvs co hol90
	  (Well, to be honest, I only checked out those
	  parts of hol90 I knew I'd be changing, e.g. not the
	  Manual, and only parts of the library.  Checking out the
	  entire source takes a while, mainly due to the enormous number
	  of help files.  The limiting factor is files/second, which
         runs at around 5 when CVS is working on nfs over a network, not
         KB/second, which you might at first think it would be).

	- By doing a recursive diff between Elsa's source and the
	hol90.7 source I found all the changes Elsa had made to
	source files.  I copied relevant files from Elsa's source
	into my checked out version.  The only new files were
		- the sml_system files in src/0
		- some make scripts in src/.
	Changed files were in:
		src/{0,1,2,3}
		library/arith/src/thm_convs.sml
		library/list/src/list_conv1.sml
		library/num/src/num_lib.sml
		library/prog_logic/src/halts_logic.sml
		library/prog_logic/src/translation.sml
		library/prog_logic/theories/src/mk_halts.sml
		library/real/theories/src/Make
		library/real/theories/src/equiv.sml
		library/real/theories/src/seq.sml
		library/reduce/src/arithconv.sml
		library/string/src/string_conv.sml
		library/unity/theories/src/aux_definitions.sml
		library/word/theories/src/*

	- I will now commit these changes, with this email as the log message.
		cvs commit

	- Tomorrow I will get this version compiling
	with NJSML 108 (I will probably add
	the files to enable the NJSML compilation manager to make
	this easier), then check those changes in.  I think it's
	good to get things in a working state.
@
text
@d8 12
@


1.1
log
@Initial revision
@
text
@d4 3
a6 3
     HOL_ERR{origin_structure = "theory grammar file (thy_yak)",
             origin_function = function,
             message = message};
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
