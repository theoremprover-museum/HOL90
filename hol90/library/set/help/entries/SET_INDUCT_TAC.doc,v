head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.31.14;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.31.14;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC SET_INDUCT_TAC

\TYPE {SET_INDUCT_TAC : tactic}

\SYNOPSIS
Tactic for induction on finite sets.

\LIBRARY sets

\DESCRIBE
{SET_INDUCT_TAC} is an induction tacic for proving properties of finite
sets.  When applied to a goal of the form
{
   !s. FINITE s ==> P[s]
}
\noindent {SET_INDUCT_TAC} reduces this goal to proving that the property
{\s.P[s]} holds of the empty set and is preserved by insertion of an element
into an arbitrary finite set.  Since every finite set can be built up from the
empty set {"{{}}"} by repeated insertion of values, these subgoals imply that
the property {\s.P[s]} holds of all finite sets.

The tactic specification of {SET_INDUCT_TAC} is:
{
                 A ?- !s. FINITE s ==> P
   ==========================================================  SET_INDUCT_TAC
     A |- P[{{}}/s]
     A u {{FINITE s', P[s'/s], ~e IN s'}} ?- P[e INSERT s'/s]
}
\noindent where {e} is a variable chosen so as not to appear free in the
assumptions {A}, and {s'} is a primed variant of {s} that does not appear free
in {A} (usually, {s'} is just {s}).

\FAILURE
{SET_INDUCT_TAC (A,g)} fails unless {g} has the form {!s. FINITE s ==> P},
where the variable {s} has type {(ty)set} for some type {ty}.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
