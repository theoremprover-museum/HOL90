\DOC mk_comb

\TYPE {mk_comb : {{Rator : term, Rand : term}} -> term}

\SYNOPSIS
Constructs a combination (function application).

\DESCRIBE
{mk_comb {{Rator = t1, Rand = t2}}} returns the combination {--`t1 t2`--}.

\FAILURE
Fails with 

    HOL_ERR{{origin_structure = "Term", origin_function = "mk_comb", 
            message}}

where message = {"first arg doesn't have function type"} if {t1} does not 
have a function type, and where message = {"incompatible types"} if {t1} has 
a function type, but its domain does not equal the type of {t2}.

\EXAMPLE
{- mk_comb{{Rator = --`$~`--, Rand = --`T`--}};
(--`~T`--) : term

- mk_comb{{Rator = --`T`--, Rand = --`T`--}} handle e => Raise e;
Exception raised at Term.mk_comb:
first arg doesn't have function type

- mk_comb{{Rator = --`SUC`--, Rand = --`T`--}} handle e => Raise e;
Exception raised at Term.mk_comb:
incompatible types

}
\SEEALSO
dest_comb, is_comb, list_mk_comb, mk_var, mk_const, mk_abs.

\ENDDOC
