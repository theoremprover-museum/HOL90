head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.32.39;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.32.39;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC LIST_INDUCT_TAC

\TYPE {LIST_INDUCT_TAC : tactic}

\SYNOPSIS
Performs tactical proof by structural induction on lists.

\KEYWORDS
tactic, list, induction.

\DESCRIBE
{LIST_INDUCT_TAC} reduces a goal {!l.P[l]}, where {l} ranges over lists, to two
subgoals corresponding to the base and step cases in a proof by structural
induction on {l}. The induction hypothesis appears among the assumptions of the
subgoal for the step case.  The specification of {LIST_INDUCT_TAC} is:
{
                     A ?- !l. P
   =====================================================  LIST_INDUCT_TAC
    A |- P[NIL/l]   A u {{P[l'/l]}} ?- !h. P[CONS h l'/l]
}
\noindent where {l'} is a primed variant of {l} that does not appear free in
the assumptions {A} (usually, {l'} is just {l}). When {LIST_INDUCT_TAC} is
applied to a goal of the form {!l.P}, where {l} does not appear free in {P},
the subgoals are just {A ?- P} and {A u {{P}} ?- !h.P}.

\FAILURE
{LIST_INDUCT_TAC g} fails unless the conclusion of the goal {g} has the form
{!l.t}, where the variable {l} has type {(ty)list} for some type {ty}.

\SEEALSO
EQ_LENGTH_INDUCT_TAC, EQ_LENGTH_SNOC_INDUCT_TAC, LIST_INDUCT, SNOC_INDUCT_TAC.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
