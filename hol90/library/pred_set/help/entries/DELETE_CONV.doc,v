head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.31.40;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.31.40;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC DELETE_CONV

\TYPE {DELETE_CONV : conv -> conv}

\SYNOPSIS
Reduce {{{x1,...,xn}} DELETE x} by deleting {x} from  {{{x1,...,xn}}}.

\LIBRARY pred_sets

\DESCRIBE 
The function {DELETE_CONV} is a parameterized conversion for reducing finite
sets of the form {"{{t1,...,tn}} DELETE t"}, where the term {t} and the
elements of {{{t1,...,tn}}} are of some base type {ty}.  The first argument to
{DELETE_CONV} is expected to be a conversion that decides equality between
values of the base type {ty}.  Given an equation {"e1 = e2"}, where {e1} and
{e2} are terms of type {ty}, this conversion should return the theorem 
{|- (e1 = e2) = T} or the theorem {|- (e1 = e2) = F}, as appropriate.

Given such a conversion {conv}, the function {DELETE_CONV} returns a
conversion that maps a term of the form {"{{t1,...,tn}} DELETE t"} to the
theorem 
{
   |- {{t1,...,tn}} DELETE t = {{ti,...,tj}}
}
\noindent where {{{ti,...,tj}}} is the subset of {{{t1,...,tn}}} for which
the supplied equality conversion {conv} proves
{
   |- (ti = t) = F, ..., |- (tj = t) = F
}
\noindent and for all the elements {tk} in {{{t1,...,tn}}} but not in
{{{ti,...,tj}}}, either {conv} proves {|- (tk = t) = T} or {tk} is
alpha-equivalent to {t}.  That is, the reduced set {{{ti,...,tj}}} comprises
all those elements of the original set that are provably not equal to the
deleted element {t}.

\EXAMPLE
In the following example, the conversion {num_EQ_CONV} is supplied as a
parameter and used to test equality of the deleted value {2} with the
elements of the set.
{
   #DELETE_CONV num_EQ_CONV "{{2,1,SUC 1,3}} DELETE 2";;
   |- {{2,1,SUC 1,3}} DELETE 2 = {{1,3}}
}

\FAILURE 
{DELETE_CONV conv} fails if applied to a term not of the form {"{{t1,...,tn}}
DELETE t"}.  A call {DELETE_CONV conv "{{t1,...,tn}} DELETE t"} fails unless
for each element {ti} of the set {{{t1,...,tn}}}, the term {t} is either
alpha-equivalent to {ti} or {conv "ti = t"} returns {|- (ti = t) = T} or 
{|- (ti = t) = F}.

\SEEALSO
INSERT_CONV.

\ENDDOC

@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
