head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.32.50;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.32.50;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC GEN_REWRITE_WIN

\BLTYPE
GEN_REWRITE_WIN : (conv -> conv) -> rewrites -> thm list ->
win_stack -> win_stack
\ELTYPE

\SYNOPSIS
Rewrites a window, selecting terms according to a specified strategy.

\LIBRARY window

\DESCRIBE
Rewriting in HOL is based on the use of equational theorems as
left-to-right replacements on the subterms of an object theorem. This
replacement is mediated by the use of {REWR_CONV}, which finds
matches between left-hand sides of given equations in a term and
applies the substitution.

Equations used in rewriting are obtained from the theorem lists given
as arguments to the function. These are first transformed into a form
suitable for rewriting. Conjunctions are separated into individual
rewrites. Theorems with conclusions of the form {"~t"} are
transformed into the corresponding equations {"t = F"}. Theorems {"t"}
 which are not equations are cast as equations of form {"t = T"}.

If a theorem is used to rewrite the object theorem, its assumptions
are added to the assumptions of the returned theorem, unless they
are alpha-convertible to existing assumptions.  The matching
involved uses variable instantiation. Thus, all free variables are
generalized, and terms are instantiated before substitution.
Theorems may have universally quantified variables.

The theorems with which rewriting is done are divided into two groups,
to facilitate implementing other rewriting tools. However, they are
considered in an order-independent fashion. (That is, the ordering is
an implementation detail which is not specified.)

The search strategy for finding matching subterms is the first
argument to the rule. Matching and substitution may occur at any
level of the term, according to the specified search strategy: the
whole term, or starting from any subterm. The search strategy also
specifies the depth of the search: recursively up to an arbitrary
depth until no matches occur, once over the selected subterm, or any
more complex scheme.

\FAILURE
{GEN_REWRITE_WIN} fails if the search strategy fails. It may also
cause a nonterminating sequence of rewrites, depending on the search
strategy used.

\USES
This rule is used in the system to implement all other window
rewriting, and may provide a user with a method to fine-tune rewriting
of windows.

\EXAMPLE

As an example, {REWRITE_WIN} could be implemented as
{
    GEN_REWRITE_WIN TOP_DEPTH_CONV basic_rewrites
}
\noindent which specifies that matches should be searched recursively
starting from the whole term of the theorem, and {basic_rewrites} must
be added to the user defined set of theorems employed in rewriting.

\SEEALSO
ASM_REWRITE_WIN, FILTER_ASM_REWRITE_WIN, FILTER_ONCE_ASM_REWRITE_WIN,
FILTER_PURE_ASM_REWRITE_WIN, FILTER_PURE_ONCE_ASM_REWRITE_WIN,
ONCE_ASM_REWRITE_WIN, ONCE_REWRITE_WIN, PURE_ASM_REWRITE_WIN,
PURE_ONCE_ASM_REWRITE_WIN, PURE_ONCE_REWRITE_WIN, PURE_REWRITE_WIN,
REWRITE_WIN

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
