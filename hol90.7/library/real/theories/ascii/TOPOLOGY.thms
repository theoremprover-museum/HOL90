thid = (TOPOLOGY, 784060338, 490235)
axioms = []
definitions =
[((mr1),
  [],
  `(((= :real metric -> real metric -> bool) mr1)
   ((metric :(real # real -> real) -> real metric)
   ((UNCURRY :(real -> real -> real) -> real # real -> real)
   (\(x :real). (\(y :real). (abs ((|-| $0) $1)))))))`),
 ((ball),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :(real -> bool) -> bool)
   (\(e :real). (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((B :'a metric -> 'a # real -> 'a -> bool) $2)
   (((, :'a -> real -> 'a # real) $1) $0))) (\(y :'a). ((|<|
   (((dist :'a metric -> 'a # 'a -> real) $3)
   (((, :'a -> 'a -> 'a # 'a) $2) $0))) $1)))))))))`),
 ((mtop),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   (((= :'a topology -> 'a topology -> bool)
   ((mtop :'a metric -> 'a topology) $0))
   ((topology :(('a -> bool) -> bool) -> 'a topology)
   (\(S' :'a -> bool). ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($1
   $0)) ((? :(real -> bool) -> bool) (\(e :real). ((/\ ((|<| (& 0))
   $0)) ((! :('a -> bool) -> bool) (\(y :'a). ((==> ((|<|
   (((dist :'a metric -> 'a # 'a -> real) $4)
   (((, :'a -> 'a -> 'a # 'a) $2) $0))) $1)) ($3 $0)))))))))))))))`),
 ((metric_tybij),
  [],
  `((/\ ((! :('a metric -> bool) -> bool) (\(a :'a metric).
   (((= :'a metric -> 'a metric -> bool)
   ((metric :('a # 'a -> real) -> 'a metric)
   ((dist :'a metric -> 'a # 'a -> real) $0))) $0))))
   ((! :(('a # 'a -> real) -> bool) -> bool) (\(r :'a # 'a -> real).
   (((= :bool -> bool -> bool) ((ismet :('a # 'a -> real) -> bool)
   $0)) (((= :('a # 'a -> real) -> ('a # 'a -> real) -> bool)
   ((dist :'a metric -> 'a # 'a -> real)
   ((metric :('a # 'a -> real) -> 'a metric) $0))) $0)))))`),
 ((metric_TY_DEF),
  [],
  `((? :(('a metric -> 'a # 'a -> real) -> bool) -> bool)
   (\(rep :'a metric -> 'a # 'a -> real).
   (((TYPE_DEFINITION :(('a # 'a -> real) -> bool) ->
                       ('a metric -> 'a # 'a -> real) -> bool)
   (ismet :('a # 'a -> real) -> bool)) $0)))`),
 ((ismet),
  [],
  `((! :(('a # 'a -> real) -> bool) -> bool) (\(m :'a # 'a -> real).
   (((= :bool -> bool -> bool) ((ismet :('a # 'a -> real) -> bool)
   $0)) ((/\ ((! :('a -> bool) -> bool) (\(x :'a).
   ((! :('a -> bool) -> bool) (\(y :'a). (((= :bool -> bool -> bool)
   (((= :real -> real -> bool) ($2 (((, :'a -> 'a -> 'a # 'a) $1)
   $0))) (& 0))) (((= :'a -> 'a -> bool) $1) $0)))))))
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :('a -> bool) -> bool) (\(z :'a). ((|<=| ($3
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) ((|+| ($3
   (((, :'a -> 'a -> 'a # 'a) $2) $1))) ($3 (((, :'a -> 'a -> 'a # 'a)
   $2) $0))))))))))))))`),
 ((limpt),
  [],
  `((! :('a topology -> bool) -> bool) (\(top :'a topology).
   ((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   (((= :bool -> bool -> bool)
   ((((limpt :'a topology -> 'a -> ('a -> bool) -> bool) $2) $1) $0))
   ((! :(('a -> bool) -> bool) -> bool) (\(N :'a -> bool). ((==>
   (((neigh :'a topology -> ('a -> bool) # 'a -> bool) $3)
   (((, :('a -> bool) -> 'a -> ('a -> bool) # 'a) $0) $2)))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\ (~
   (((= :'a -> 'a -> bool) $3) $0))) ((/\ ($2 $0)) ($1
   $0)))))))))))))))`),
 ((closed),
  [],
  `((! :('a topology -> bool) -> bool) (\(L :'a topology).
   ((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   (((= :bool -> bool -> bool)
   (((closed :'a topology -> ('a -> bool) -> bool) $1) $0))
   (((open :'a topology -> ('a -> bool) -> bool) $1)
   ((re_compl :('a -> bool) -> 'a -> bool) $0)))))))`),
 ((neigh),
  [],
  `((! :('a topology -> bool) -> bool) (\(top :'a topology).
   ((! :(('a -> bool) -> bool) -> bool) (\(N :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   (((neigh :'a topology -> ('a -> bool) # 'a -> bool) $2)
   (((, :('a -> bool) -> 'a -> ('a -> bool) # 'a) $1) $0)))
   ((? :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool). ((/\
   (((open :'a topology -> ('a -> bool) -> bool) $3) $0)) ((/\
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $0) $2)) ($0
   $1))))))))))))`),
 ((topology_tybij),
  [],
  `((/\ ((! :('a topology -> bool) -> bool) (\(a :'a topology).
   (((= :'a topology -> 'a topology -> bool)
   ((topology :(('a -> bool) -> bool) -> 'a topology)
   ((open :'a topology -> ('a -> bool) -> bool) $0))) $0))))
   ((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(r :('a -> bool) -> bool). (((= :bool -> bool -> bool)
   ((istopology :(('a -> bool) -> bool) -> bool) $0))
   (((= :(('a -> bool) -> bool) -> (('a -> bool) -> bool) -> bool)
   ((open :'a topology -> ('a -> bool) -> bool)
   ((topology :(('a -> bool) -> bool) -> 'a topology) $0))) $0)))))`),
 ((topology_TY_DEF),
  [],
  `((? :(('a topology -> ('a -> bool) -> bool) -> bool) -> bool)
   (\(rep :'a topology -> ('a -> bool) -> bool).
   (((TYPE_DEFINITION :((('a -> bool) -> bool) -> bool) ->
                       ('a topology -> ('a -> bool) -> bool) -> bool)
   (istopology :(('a -> bool) -> bool) -> bool)) $0)))`),
 ((istopology),
  [],
  `((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(L :('a -> bool) -> bool). (((= :bool -> bool -> bool)
   ((istopology :(('a -> bool) -> bool) -> bool) $0)) ((/\ ($0
   (re_null :'a -> bool))) ((/\ ($0 (re_universe :'a -> bool))) ((/\
   ((! :(('a -> bool) -> bool) -> bool) (\(a :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(b :'a -> bool). ((==> ((/\
   ($2 $1)) ($2 $0))) ($2
   (((re_intersect :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)))))))) ((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(P :('a -> bool) -> bool). ((==>
   (((re_subset :(('a -> bool) -> bool) -> (('a -> bool) -> bool) ->
                 bool) $0) $1)) ($1
   ((re_Union :(('a -> bool) -> bool) -> 'a -> bool) $0)))))))))))`),
 ((re_compl),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   ((re_compl :('a -> bool) -> 'a -> bool) $0)) (\(x :'a). (~ ($1
   $0))))))`),
 ((re_subset),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   (((= :bool -> bool -> bool)
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2 $0)) ($1
   $0)))))))))`),
 ((re_universe),
  [],
  `(((= :('a -> bool) -> ('a -> bool) -> bool)
   (re_universe :'a -> bool)) (\(x :'a). T))`),
 ((re_null),
  [],
  `(((= :('a -> bool) -> ('a -> bool) -> bool) (re_null :'a -> bool))
   (\(x :'a). F))`),
 ((re_intersect),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((re_intersect :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)) (\(x :'a). ((/\ ($2 $0)) ($1 $0))))))))`),
 ((re_union),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   (((re_union :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1) $0))
   (\(x :'a). ((\/ ($2 $0)) ($1 $0))))))))`),
 ((re_Union),
  [],
  `((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(S' :('a -> bool) -> bool).
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   ((re_Union :(('a -> bool) -> bool) -> 'a -> bool) $0)) (\(x :'a).
   ((? :(('a -> bool) -> bool) -> bool) (\(s :'a -> bool). ((/\ ($2
   $0)) ($0 $1))))))))`)]
theorems =
[((MR1_LIMPT),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((((limpt :real topology -> real -> (real -> bool) -> bool)
   ((mtop :real metric -> real topology) mr1)) $0)
   (re_universe :real -> bool))))`),
 ((MR1_BETWEEN1),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(y :real).
   ((! :(real -> bool) -> bool) (\(z :real). ((==> ((/\ ((|<| $2) $0))
   ((|<| (((dist :real metric -> real # real -> real) mr1)
   (((, :real -> real -> real # real) $2) $1))) ((|-| $0) $2)))) ((|<|
   $1) $0))))))))`),
 ((MR1_SUB_LT),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((|<| (& 0)) $0))
   (((= :real -> real -> bool)
   (((dist :real metric -> real # real -> real) mr1)
   (((, :real -> real -> real # real) $1) ((|-| $1) $0)))) $0))))))`),
 ((MR1_ADD_LT),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((|<| (& 0)) $0))
   (((= :real -> real -> bool)
   (((dist :real metric -> real # real -> real) mr1)
   (((, :real -> real -> real # real) $1) ((|+| $1) $0)))) $0))))))`),
 ((MR1_SUB_LE),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((|<=| (& 0)) $0))
   (((= :real -> real -> bool)
   (((dist :real metric -> real # real -> real) mr1)
   (((, :real -> real -> real # real) $1) ((|-| $1) $0)))) $0))))))`),
 ((MR1_ADD_POS),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real). ((==> ((|<=| (& 0)) $0))
   (((= :real -> real -> bool)
   (((dist :real metric -> real # real -> real) mr1)
   (((, :real -> real -> real # real) $1) ((|+| $1) $0)))) $0))))))`),
 ((MR1_SUB),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real).
   (((= :real -> real -> bool)
   (((dist :real metric -> real # real -> real) mr1)
   (((, :real -> real -> real # real) $1) ((|-| $1) $0)))) (abs
   $0))))))`),
 ((MR1_ADD),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(d :real).
   (((= :real -> real -> bool)
   (((dist :real metric -> real # real -> real) mr1)
   (((, :real -> real -> real # real) $1) ((|+| $1) $0)))) (abs
   $0))))))`),
 ((MR1_DEF),
  [],
  `((! :(real -> bool) -> bool) (\(x :real).
   ((! :(real -> bool) -> bool) (\(y :real).
   (((= :real -> real -> bool)
   (((dist :real metric -> real # real -> real) mr1)
   (((, :real -> real -> real # real) $1) $0))) (abs ((|-| $0)
   $1)))))))`),
 ((ISMET_R1),
  [],
  `((ismet :(real # real -> real) -> bool)
   ((UNCURRY :(real -> real -> real) -> real # real -> real)
   (\(x :real). (\(y :real). (abs ((|-| $0) $1))))))`),
 ((MTOP_LIMPT),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a).
   ((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   (((= :bool -> bool -> bool)
   ((((limpt :'a topology -> 'a -> ('a -> bool) -> bool)
   ((mtop :'a metric -> 'a topology) $2)) $1) $0))
   ((! :(real -> bool) -> bool) (\(e :real). ((==> ((|<| (& 0)) $0))
   ((? :('a -> bool) -> bool) (\(y :'a). ((/\ (~
   (((= :'a -> 'a -> bool) $3) $0))) ((/\ ($2 $0)) ((|<|
   (((dist :'a metric -> 'a # 'a -> real) $4)
   (((, :'a -> 'a -> 'a # 'a) $3) $0))) $1)))))))))))))))`),
 ((BALL_NEIGH),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :(real -> bool) -> bool)
   (\(e :real). ((==> ((|<| (& 0)) $0))
   (((neigh :'a topology -> ('a -> bool) # 'a -> bool)
   ((mtop :'a metric -> 'a topology) $2))
   (((, :('a -> bool) -> 'a -> ('a -> bool) # 'a)
   (((B :'a metric -> 'a # real -> 'a -> bool) $2)
   (((, :'a -> real -> 'a # real) $1) $0))) $1)))))))))`),
 ((BALL_OPEN),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :(real -> bool) -> bool)
   (\(e :real). ((==> ((|<| (& 0)) $0))
   (((open :'a topology -> ('a -> bool) -> bool)
   ((mtop :'a metric -> 'a topology) $2))
   (((B :'a metric -> 'a # real -> 'a -> bool) $2)
   (((, :'a -> real -> 'a # real) $1) $0))))))))))`),
 ((MTOP_OPEN),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   ((! :('a metric -> bool) -> bool) (\(m :'a metric).
   (((= :bool -> bool -> bool)
   (((open :'a topology -> ('a -> bool) -> bool)
   ((mtop :'a metric -> 'a topology) $0)) $1))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2 $0))
   ((? :(real -> bool) -> bool) (\(e :real). ((/\ ((|<| (& 0)) $0))
   ((! :('a -> bool) -> bool) (\(y :'a). ((==> ((|<|
   (((dist :'a metric -> 'a # 'a -> real) $3)
   (((, :'a -> 'a -> 'a # 'a) $2) $0))) $1)) ($4 $0)))))))))))))))`),
 ((mtop_istopology),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((istopology :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($1 $0))
   ((? :(real -> bool) -> bool) (\(e :real). ((/\ ((|<| (& 0)) $0))
   ((! :('a -> bool) -> bool) (\(y :'a). ((==> ((|<|
   (((dist :'a metric -> 'a # 'a -> real) $4)
   (((, :'a -> 'a -> 'a # 'a) $2) $0))) $1)) ($3 $0))))))))))))))`),
 ((METRIC_NZ),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((==> (~ (((= :'a -> 'a -> bool) $1) $0))) ((|<| (& 0))
   (((dist :'a metric -> 'a # 'a -> real) $2)
   (((, :'a -> 'a -> 'a # 'a) $1) $0))))))))))`),
 ((METRIC_TRIANGLE),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((! :('a -> bool) -> bool) (\(z :'a). ((|<=|
   (((dist :'a metric -> 'a # 'a -> real) $3)
   (((, :'a -> 'a -> 'a # 'a) $2) $0))) ((|+|
   (((dist :'a metric -> 'a # 'a -> real) $3)
   (((, :'a -> 'a -> 'a # 'a) $2) $1)))
   (((dist :'a metric -> 'a # 'a -> real) $3)
   (((, :'a -> 'a -> 'a # 'a) $1) $0))))))))))))`),
 ((METRIC_SYM),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). (((= :real -> real -> bool)
   (((dist :'a metric -> 'a # 'a -> real) $2)
   (((, :'a -> 'a -> 'a # 'a) $1) $0)))
   (((dist :'a metric -> 'a # 'a -> real) $2)
   (((, :'a -> 'a -> 'a # 'a) $0) $1)))))))))`),
 ((METRIC_POS),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). ((|<=| (& 0)) (((dist :'a metric -> 'a # 'a -> real) $2)
   (((, :'a -> 'a -> 'a # 'a) $1) $0)))))))))`),
 ((METRIC_SAME),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :real -> real -> bool)
   (((dist :'a metric -> 'a # 'a -> real) $1)
   (((, :'a -> 'a -> 'a # 'a) $0) $0))) (& 0))))))`),
 ((METRIC_ZERO),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((! :('a -> bool) -> bool) (\(x :'a). ((! :('a -> bool) -> bool)
   (\(y :'a). (((= :bool -> bool -> bool) (((= :real -> real -> bool)
   (((dist :'a metric -> 'a # 'a -> real) $2)
   (((, :'a -> 'a -> 'a # 'a) $1) $0))) (& 0)))
   (((= :'a -> 'a -> bool) $1) $0))))))))`),
 ((METRIC_ISMET),
  [],
  `((! :('a metric -> bool) -> bool) (\(m :'a metric).
   ((ismet :('a # 'a -> real) -> bool)
   ((dist :'a metric -> 'a # 'a -> real) $0))))`),
 ((CLOSED_LIMPT),
  [],
  `((! :('a topology -> bool) -> bool) (\(top :'a topology).
   ((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   (((= :bool -> bool -> bool)
   (((closed :'a topology -> ('a -> bool) -> bool) $1) $0))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==>
   ((((limpt :'a topology -> 'a -> ('a -> bool) -> bool) $2) $0) $1))
   ($1 $0)))))))))`),
 ((OPEN_NEIGH),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   ((! :('a topology -> bool) -> bool) (\(top :'a topology).
   (((= :bool -> bool -> bool)
   (((open :'a topology -> ('a -> bool) -> bool) $0) $1))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2 $0))
   ((? :(('a -> bool) -> bool) -> bool) (\(N :'a -> bool). ((/\
   (((neigh :'a topology -> ('a -> bool) # 'a -> bool) $2)
   (((, :('a -> bool) -> 'a -> ('a -> bool) # 'a) $0) $1)))
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $0)
   $3))))))))))))`),
 ((OPEN_SUBOPEN),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   ((! :('a topology -> bool) -> bool) (\(top :'a topology).
   (((= :bool -> bool -> bool)
   (((open :'a topology -> ('a -> bool) -> bool) $0) $1))
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ($2 $0))
   ((? :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool). ((/\ ($0
   $1)) ((/\ (((open :'a topology -> ('a -> bool) -> bool) $2) $0))
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $0)
   $3)))))))))))))`),
 ((OPEN_UNOPEN),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   ((! :('a topology -> bool) -> bool) (\(top :'a topology).
   (((= :bool -> bool -> bool)
   (((open :'a topology -> ('a -> bool) -> bool) $0) $1))
   (((= :('a -> bool) -> ('a -> bool) -> bool)
   ((re_Union :(('a -> bool) -> bool) -> 'a -> bool)
   (\(P :'a -> bool). ((/\
   (((open :'a topology -> ('a -> bool) -> bool) $1) $0))
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $0) $2)))))
   $1))))))`),
 ((OPEN_OWN_NEIGH),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   ((! :('a topology -> bool) -> bool) (\(top :'a topology).
   ((! :('a -> bool) -> bool) (\(x :'a). ((==> ((/\
   (((open :'a topology -> ('a -> bool) -> bool) $1) $2)) ($2 $0)))
   (((neigh :'a topology -> ('a -> bool) # 'a -> bool) $1)
   (((, :('a -> bool) -> 'a -> ('a -> bool) # 'a) $2) $0)))))))))`),
 ((TOPOLOGY_UNION),
  [],
  `((! :('a topology -> bool) -> bool) (\(L :'a topology).
   ((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(P :('a -> bool) -> bool). ((==>
   (((re_subset :(('a -> bool) -> bool) -> (('a -> bool) -> bool) ->
                 bool) $0)
   ((open :'a topology -> ('a -> bool) -> bool) $1)))
   (((open :'a topology -> ('a -> bool) -> bool) $1)
   ((re_Union :(('a -> bool) -> bool) -> 'a -> bool) $0)))))))`),
 ((TOPOLOGY),
  [],
  `((! :('a topology -> bool) -> bool) (\(L :'a topology). ((/\
   (((open :'a topology -> ('a -> bool) -> bool) $0)
   (re_null :'a -> bool))) ((/\
   (((open :'a topology -> ('a -> bool) -> bool) $0)
   (re_universe :'a -> bool))) ((/\
   ((! :(('a -> bool) -> bool) -> bool) (\(x :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(y :'a -> bool). ((==> ((/\
   (((open :'a topology -> ('a -> bool) -> bool) $2) $1))
   (((open :'a topology -> ('a -> bool) -> bool) $2) $0)))
   (((open :'a topology -> ('a -> bool) -> bool) $2)
   (((re_intersect :('a -> bool) -> ('a -> bool) -> 'a -> bool) $1)
   $0)))))))) ((! :((('a -> bool) -> bool) -> bool) -> bool)
   (\(P :('a -> bool) -> bool). ((==>
   (((re_subset :(('a -> bool) -> bool) -> (('a -> bool) -> bool) ->
                 bool) $0)
   ((open :'a topology -> ('a -> bool) -> bool) $1)))
   (((open :'a topology -> ('a -> bool) -> bool) $1)
   ((re_Union :(('a -> bool) -> bool) -> 'a -> bool) $0))))))))))`),
 ((SUBSET_TRANS),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(R :'a -> bool). ((==> ((/\
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $2) $1))
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0)))
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $2)
   $0))))))))`),
 ((SUBSET_ANTISYM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(P :'a -> bool).
   ((! :(('a -> bool) -> bool) -> bool) (\(Q :'a -> bool).
   (((= :bool -> bool -> bool) ((/\
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $1) $0))
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $0) $1)))
   (((= :('a -> bool) -> ('a -> bool) -> bool) $1) $0))))))`),
 ((COMPL_MEM),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   ((! :('a -> bool) -> bool) (\(x :'a). (((= :bool -> bool -> bool)
   ($1 $0)) (~ (((re_compl :('a -> bool) -> 'a -> bool) $1)
   $0)))))))`),
 ((SUBSET_REFL),
  [],
  `((! :(('a -> bool) -> bool) -> bool) (\(S' :'a -> bool).
   (((re_subset :('a -> bool) -> ('a -> bool) -> bool) $0) $0)))`)]
