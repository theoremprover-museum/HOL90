head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.34.14;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.34.14;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC RATOR_CONV

\TYPE {RATOR_CONV : (conv -> conv)}

\SYNOPSIS
Applies a conversion to the operator of an application.

\KEYWORDS
conversional.

\DESCRIBE
If {c} is a conversion that maps a term {"t1"} to the theorem {|- t1 = t1'},
then the conversion {RATOR_CONV c} maps applications of the form {"t1 t2"} to
theorems of the form:
{
   |- (t1 t2) = (t1' t2)
}
\noindent That is, {RATOR_CONV c "t1 t2"} applies {c} to the operand of the
application {"t1 t2"}.

\FAILURE
{RATOR_CONV c tm} fails if {tm} is not an application or if {tm} has the form
{"t1 t2"} but the conversion {c} fails when applied to the term {t1}. The
function returned by {RATOR_CONV c} may also fail if the ML function
{c:term->thm} is not, in fact, a conversion (i.e. a function that maps a term
{t} to a theorem {|- t = t'}).

\EXAMPLE
{
#RATOR_CONV BETA_CONV "(\x y. x + y) 1 2";;
|- (\x y. x + y)1 2 = (\y. 1 + y)2
}
\SEEALSO
ABS_CONV, RAND_CONV, SUB_CONV.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
