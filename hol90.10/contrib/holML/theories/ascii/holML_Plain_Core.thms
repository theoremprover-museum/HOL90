thid = (holML_Plain_Core, 784033781, 167685)
axioms = []
definitions =
[((eval_valbind_DEF),
  [],
  `((! :(valbind -> bool) -> bool) (\(vb :valbind).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(varenv_pack -> bool) -> bool) (\(vep :varenv_pack).
   (((= :bool -> bool -> bool) (((((eval_valbind $4) $3) $2) $1) $0))
   ((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_atexp :atexp -> state -> env -> state -> val_pack ->
                       bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exprow :exprow -> state -> env -> state ->
                        record_pack -> bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exp :exp -> state -> env -> state -> val_pack ->
                     bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_match :match -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_mrule :mrule -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_dec :dec -> state -> env -> state -> env_pack ->
                     bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_valbind :valbind -> state -> env -> state ->
                         varenv_pack -> bool). ((==> (((((((eval_pred
   $6) $5) $4) $3) $2) $1) $0)) ((((($0 $11) $10) $9) $8)
   $7)))))))))))))))))))))))))))`),
 ((eval_dec_DEF),
  [],
  `((! :(dec -> bool) -> bool) (\(d :dec).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env_pack -> bool) -> bool) (\(ep :env_pack).
   (((= :bool -> bool -> bool) (((((eval_dec $4) $3) $2) $1) $0))
   ((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_atexp :atexp -> state -> env -> state -> val_pack ->
                       bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exprow :exprow -> state -> env -> state ->
                        record_pack -> bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exp :exp -> state -> env -> state -> val_pack ->
                     bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_match :match -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_mrule :mrule -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_dec :dec -> state -> env -> state -> env_pack ->
                     bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_valbind :valbind -> state -> env -> state ->
                         varenv_pack -> bool). ((==> (((((((eval_pred
   $6) $5) $4) $3) $2) $1) $0)) ((((($1 $11) $10) $9) $8)
   $7)))))))))))))))))))))))))))`),
 ((eval_mrule_DEF),
  [],
  `((! :(mrule -> bool) -> bool) (\(mr :mrule).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(v :env). ((! :(val -> bool) -> bool)
   (\(e :val). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(val_pack_fail -> bool) -> bool) (\(vpf :val_pack_fail).
   (((= :bool -> bool -> bool) ((((((eval_mrule $5) $4) $3) $2) $1)
   $0))
   ((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_atexp :atexp -> state -> env -> state -> val_pack ->
                       bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exprow :exprow -> state -> env -> state ->
                        record_pack -> bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exp :exp -> state -> env -> state -> val_pack ->
                     bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_match :match -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_mrule :mrule -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_dec :dec -> state -> env -> state -> env_pack ->
                     bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_valbind :valbind -> state -> env -> state ->
                         varenv_pack -> bool). ((==> (((((((eval_pred
   $6) $5) $4) $3) $2) $1) $0)) (((((($2 $12) $11) $10) $9) $8)
   $7)))))))))))))))))))))))))))))`),
 ((eval_match_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(mat :match).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(v :env). ((! :(val -> bool) -> bool)
   (\(e :val). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(val_pack_fail -> bool) -> bool) (\(vpf :val_pack_fail).
   (((= :bool -> bool -> bool) ((((((eval_match $5) $4) $3) $2) $1)
   $0))
   ((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_atexp :atexp -> state -> env -> state -> val_pack ->
                       bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exprow :exprow -> state -> env -> state ->
                        record_pack -> bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exp :exp -> state -> env -> state -> val_pack ->
                     bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_match :match -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_mrule :mrule -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_dec :dec -> state -> env -> state -> env_pack ->
                     bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_valbind :valbind -> state -> env -> state ->
                         varenv_pack -> bool). ((==> (((((((eval_pred
   $6) $5) $4) $3) $2) $1) $0)) (((((($3 $12) $11) $10) $9) $8)
   $7)))))))))))))))))))))))))))))`),
 ((eval_exp_DEF),
  [],
  `((! :(exp -> bool) -> bool) (\(ex :exp).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(val_pack -> bool) -> bool) (\(vp :val_pack).
   (((= :bool -> bool -> bool) (((((eval_exp $4) $3) $2) $1) $0))
   ((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_atexp :atexp -> state -> env -> state -> val_pack ->
                       bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exprow :exprow -> state -> env -> state ->
                        record_pack -> bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exp :exp -> state -> env -> state -> val_pack ->
                     bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_match :match -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_mrule :mrule -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_dec :dec -> state -> env -> state -> env_pack ->
                     bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_valbind :valbind -> state -> env -> state ->
                         varenv_pack -> bool). ((==> (((((((eval_pred
   $6) $5) $4) $3) $2) $1) $0)) ((((($4 $11) $10) $9) $8)
   $7)))))))))))))))))))))))))))`),
 ((eval_exprow_DEF),
  [],
  `((! :(exprow -> bool) -> bool) (\(er :exprow).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(record_pack -> bool) -> bool) (\(rp :record_pack).
   (((= :bool -> bool -> bool) (((((eval_exprow $4) $3) $2) $1) $0))
   ((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_atexp :atexp -> state -> env -> state -> val_pack ->
                       bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exprow :exprow -> state -> env -> state ->
                        record_pack -> bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exp :exp -> state -> env -> state -> val_pack ->
                     bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_match :match -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_mrule :mrule -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_dec :dec -> state -> env -> state -> env_pack ->
                     bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_valbind :valbind -> state -> env -> state ->
                         varenv_pack -> bool). ((==> (((((((eval_pred
   $6) $5) $4) $3) $2) $1) $0)) ((((($5 $11) $10) $9) $8)
   $7)))))))))))))))))))))))))))`),
 ((eval_atexp_DEF),
  [],
  `((! :(atexp -> bool) -> bool) (\(ae :atexp).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(val_pack -> bool) -> bool) (\(vp :val_pack).
   (((= :bool -> bool -> bool) (((((eval_atexp $4) $3) $2) $1) $0))
   ((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_atexp :atexp -> state -> env -> state -> val_pack ->
                       bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exprow :exprow -> state -> env -> state ->
                        record_pack -> bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exp :exp -> state -> env -> state -> val_pack ->
                     bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_match :match -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_mrule :mrule -> state -> env -> val -> state ->
                       val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_dec :dec -> state -> env -> state -> env_pack ->
                     bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_valbind :valbind -> state -> env -> state ->
                         varenv_pack -> bool). ((==> (((((((eval_pred
   $6) $5) $4) $3) $2) $1) $0)) ((((($6 $11) $10) $9) $8)
   $7)))))))))))))))))))))))))))`),
 ((eval_pred_DEF),
  [],
  `((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(eval_atexp :atexp -> state -> env -> state -> val_pack -> bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(eval_exprow :exprow -> state -> env -> state -> record_pack ->
                   bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(eval_exp :exp -> state -> env -> state -> val_pack -> bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(eval_match :match -> state -> env -> val -> state ->
                  val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(eval_mrule :mrule -> state -> env -> val -> state ->
                  val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(eval_dec :dec -> state -> env -> state -> env_pack -> bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(eval_valbind :valbind -> state -> env -> state -> varenv_pack ->
                    bool). (((= :bool -> bool -> bool)
   (((((((eval_pred $6) $5) $4) $3) $2) $1) $0)) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(scon -> bool) -> bool) (\(scon :scon). ((((($9 (SCONatexp
   $0)) $2) $1) $2) (VALvp (SVALval (value_of $0))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(var long -> bool) -> bool) (\(longvar :var long).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   (((= :val lift -> val lift -> bool) ((lookuplongvar_env $2) $1))
   ((lift :val -> val lift) $0))) ((((($10 (VARatexp $1)) $3) $2) $3)
   (VALvp $0)))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(con -> bool) -> bool) (\(con :con). ((==>
   (((= :con -> con -> bool) ((long_base :con long -> con) $1)) $0))
   ((((($10 (CONatexp $1)) $3) $2) $3) (VALvp (CONval $0)))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(excon long -> bool) -> bool) (\(longexcon :excon long). ((==>
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $2)
   $0)) ((lift :exname -> exname lift) $1))) ((((($10 (EXCONatexp $0))
   $3) $2) $3) (VALvp (EXVALval (NAMEexval $1)))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((((($8 (RECORDatexp
   (NONE :exprow option))) $1) $0) $1) (VALvp (RECORDval
   empty_record)))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exprow -> bool) -> bool) (\(exprow :exprow).
   ((! :(record -> bool) -> bool) (\(r :record). ((==> ((((($10 $1)
   $4) $3) $2) (RECORDrp $0))) ((((($11 (RECORDatexp
   ((SOME :exprow -> exprow option) $1))) $4) $3) $2) (VALvp
   (RECORDval ((add_record empty_record) $0)))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exprow -> bool) -> bool) (\(exprow :exprow).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($10 $1) $4)
   $3) $2) (PACKrp $0))) ((((($11 (RECORDatexp
   ((SOME :exprow -> exprow option) $1))) $4) $3) $2) (PACKvp
   $0)))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec :dec).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(env -> bool) -> bool) (\(E' :env). ((/\ ((((($9 $4) $7) $6)
   $1) (ENVep $0))) ((((($12 $3) $1) ((add_env $6) $0)) $5) (VALvp
   $2)))))))) ((((($12 ((LETatexp $2) $1)) $5) $4) $3) (VALvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec :dec).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($7 $2) $5) $4)
   $3) (PACKep $0))) ((((($12 ((LETatexp $2) $1)) $5) $4) $3) (PACKvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec :dec).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(env -> bool) -> bool) (\(E' :env). ((/\ ((((($9 $4) $7) $6)
   $1) (ENVep $0))) ((((($12 $3) $1) ((add_env $6) $0)) $5) (PACKvp
   $2)))))))) ((((($12 ((LETatexp $2) $1)) $5) $4) $3) (PACKvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val_pack -> bool) -> bool) (\(vp :val_pack). ((==> ((((($9
   $1) $4) $3) $2) $0)) ((((($11 (PARatexp $1)) $4) $3) $2)
   $0))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((((($10 $1) $5) $4)
   $3) (VALvp $0))) ((((($11 (((EXPROW $2) $1) (NONE :exprow option)))
   $5) $4) $3) (RECORDrp (((insert_into_record empty_record) $2)
   $0))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(exprow option -> bool) -> bool) (\(exprow_op :exprow option).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($11 $2) $6)
   $5) $4) (PACKvp $0))) ((((($12 (((EXPROW $3) $2) $1)) $6) $5) $4)
   (PACKrp $0)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(exprow -> bool) -> bool) (\(exprow :exprow).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(record -> bool) -> bool) (\(r :record). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($13 $4) $8)
   $7) $0) (VALvp $2))) ((((($14 $3) $0) $7) $6) (RECORDrp $1))))))
   ((((($13 (((EXPROW $4) $3) ((SOME :exprow -> exprow option) $2)))
   $7) $6) $5) (RECORDrp ((add_record (((insert_into_record
   empty_record) $4) $1)) $0))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(exprow -> bool) -> bool) (\(exprow :exprow).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(val -> bool) -> bool) (\(v :val). ((/\ ((((($13 $4) $8) $7)
   $1) (VALvp $0))) ((((($14 $3) $1) $7) $6) (PACKrp $2))))))))
   ((((($12 (((EXPROW $3) $2) ((SOME :exprow -> exprow option) $1)))
   $6) $5) $4) (PACKrp $0)))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(val_pack -> bool) -> bool) (\(vp :val_pack). ((==> ((((($11
   $1) $4) $3) $2) $0)) ((((($9 (ATEXPexp $1)) $4) $3) $2)
   $0))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(con -> bool) -> bool) (\(c :con). ((! :(val -> bool) -> bool)
   (\(v :val). ((==> ((? :(state -> bool) -> bool) (\(s' :state). ((/\
   ((((($12 $4) $7) $6) $0) (VALvp (CONval $2)))) ((/\ (~
   (((= :con -> con -> bool) $2) (CON "ref")))) ((((($14 $3) $0) $6)
   $5) (VALvp $1))))))) ((((($11 ((APPexp $3) $2)) $6) $5) $4) (VALvp
   ((APPCONval $1) $0))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($10 $2) $5)
   $4) $3) (PACKvp $0))) ((((($10 ((APPexp $2) $1)) $5) $4) $3)
   (PACKvp $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(con -> bool) -> bool) (\(c :con). ((/\ ((((($12 $4) $7) $6)
   $1) (VALvp (CONval $0)))) ((/\ (~ (((= :con -> con -> bool) $0)
   (CON "ref")))) ((((($14 $3) $1) $6) $5) (PACKvp $2)))))))))
   ((((($10 ((APPexp $2) $1)) $5) $4) $3) (PACKvp $0))))))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($12 $4) $7)
   $6) $0) (VALvp (EXVALval (NAMEexval $2))))) ((((($14 $3) $0) $6)
   $5) (VALvp $1)))))) ((((($11 ((APPexp $3) $2)) $6) $5) $4) (VALvp
   (EXVALval ((NAMEVALexval $1) $0)))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(exname -> bool) -> bool) (\(en :exname). ((/\ ((((($12 $4)
   $7) $6) $1) (VALvp (EXVALval (NAMEexval $0))))) ((((($14 $3) $1)
   $6) $5) (PACKvp $2)))))))) ((((($10 ((APPexp $2) $1)) $5) $4) $3)
   (PACKvp $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(addr -> bool) -> bool) (\(a :addr).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($12 $4) $7)
   $6) $0) (VALvp (CONval (CON "ref"))))) ((/\ ((((($14 $3) $0) $6)
   $5) (VALvp $1))) (((= :addr -> addr -> bool) $2) (new_addr
   $5))))))) ((((($11 ((APPexp $3) $2)) $6) $5)
   (((insert_into_state_mem $4) $1) $0)) (VALvp (ADDRval
   $1))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($11 $3) $6)
   $5) $0) (VALvp (CONval (CON "ref"))))) ((((($13 $2) $0) $5) $4)
   (PACKvp $1)))))) ((((($10 ((APPexp $2) $1)) $5) $4) $3) (PACKvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(addr -> bool) -> bool) (\(a :addr).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($12 $4) $7)
   $6) $0) (VALvp ASSGval))) ((((($14 $3) $0) $6) $5) (VALvp
   (RECORDval (((insert_into_record (((insert_into_record
   empty_record) (LABEL "1")) (ADDRval $2))) (LABEL "2")) $1))))))))
   ((((($11 ((APPexp $3) $2)) $6) $5) (((insert_into_state_mem $4) $1)
   $0)) (VALvp (RECORDval empty_record))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($11 $3) $6)
   $5) $0) (VALvp ASSGval))) ((((($13 $2) $0) $5) $4) (PACKvp $1))))))
   ((((($10 ((APPexp $2) $1)) $5) $4) $3) (PACKvp $0))))))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(val_pack -> bool) -> bool) (\(v' :val_pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(basval -> bool) -> bool) (\(b :basval).
   ((? :(val -> bool) -> bool) (\(v :val). ((/\ ((((($13 $5) $8) $7)
   $2) (VALvp (BASval $1)))) ((/\ ((((($15 $4) $2) $7) $6) (VALvp
   $0))) (((= :val_pack -> val_pack -> bool) ((apply $1) $0))
   $3)))))))))) ((((($10 ((APPexp $2) $1)) $5) $4) $3)
   $0))))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(basval -> bool) -> bool) (\(b :basval). ((/\ ((((($12 $4) $7)
   $6) $1) (VALvp (BASval $0)))) ((((($14 $3) $1) $6) $5) (PACKvp
   $2)))))))) ((((($10 ((APPexp $2) $1)) $5) $4) $3) (PACKvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(val -> bool) -> bool) (\(v' :val). ((==>
   ((? :(state -> bool) -> bool) (\(s2 :state).
   ((? :(state -> bool) -> bool) (\(s3 :state).
   ((? :(match -> bool) -> bool) (\(match :match).
   ((? :(env -> bool) -> bool) (\(E' :env).
   ((? :(varenv -> bool) -> bool) (\(VE :varenv).
   ((? :(val -> bool) -> bool) (\(v :val). ((/\ ((((($16 $8) $11) $10)
   $5) (VALvp (CLOSUREval (((CLOSURE $3) $2) $1))))) ((/\ ((((($18 $7)
   $5) $10) $4) (VALvp $0))) (((((($15 $3) $4) ((add_env $2) (((ENV
   empty_strenv) (rec_varenv $1)) empty_exconenv))) $0) $9) (VALvpf
   $6))))))))))))))))) ((((($10 ((APPexp $2) $1)) $5) $4) $3) (VALvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s3 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s2 :state).
   ((? :(match -> bool) -> bool) (\(match :match).
   ((? :(env -> bool) -> bool) (\(E' :env).
   ((? :(varenv -> bool) -> bool) (\(VE :varenv). ((/\ ((((($14 $6)
   $9) $8) $3) (VALvp (CLOSUREval (((CLOSURE $2) $1) $0))))) ((((($16
   $5) $3) $8) $7) (PACKvp $4)))))))))))) ((((($10 ((APPexp $2) $1))
   $5) $4) $3) (PACKvp $0)))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s2 :state).
   ((? :(state -> bool) -> bool) (\(s3 :state).
   ((? :(match -> bool) -> bool) (\(match :match).
   ((? :(env -> bool) -> bool) (\(E' :env).
   ((? :(varenv -> bool) -> bool) (\(VE :varenv).
   ((? :(val -> bool) -> bool) (\(v :val). ((/\ ((((($16 $8) $11) $10)
   $5) (VALvp (CLOSUREval (((CLOSURE $3) $2) $1))))) ((/\ ((((($18 $7)
   $5) $10) $4) (VALvp $0))) (((((($15 $3) $4) ((add_env $2) (((ENV
   empty_strenv) (rec_varenv $1)) empty_exconenv))) $0) $9) (PACKvpf
   $6))))))))))))))))) ((((($10 ((APPexp $2) $1)) $5) $4) $3) (PACKvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp). ((==>
   ((? :(state -> bool) -> bool) (\(s2 :state).
   ((? :(state -> bool) -> bool) (\(s3 :state).
   ((? :(match -> bool) -> bool) (\(match :match).
   ((? :(env -> bool) -> bool) (\(E' :env).
   ((? :(varenv -> bool) -> bool) (\(VE :varenv).
   ((? :(val -> bool) -> bool) (\(v :val). ((/\ ((((($15 $7) $10) $9)
   $5) (VALvp (CLOSUREval (((CLOSURE $3) $2) $1))))) ((/\ ((((($17 $6)
   $5) $9) $4) (VALvp $0))) (((((($14 $3) $4) ((add_env $2) (((ENV
   empty_strenv) (rec_varenv $1)) empty_exconenv))) $0) $8)
   FAILvpf)))))))))))))))) ((((($9 ((APPexp $1) $0)) $4) $3) $2)
   (PACKvp (PACK (NAMEexval (EXNAME 7))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((((($10 $2) $5) $4)
   $3) (VALvp $0))) ((((($10 ((HANDLEexp $2) $1)) $5) $4) $3) (VALvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(exval -> bool) -> bool) (\(e :exval). ((/\ ((((($12 $4) $7)
   $6) $1) (PACKvp (PACK $0)))) (((((($11 $3) $1) $6) (EXVALval $0))
   $5) (VALvpf $2)))))))) ((((($10 ((HANDLEexp $2) $1)) $5) $4) $3)
   (VALvp $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(exval -> bool) -> bool) (\(e :exval). ((/\ ((((($12 $4) $7)
   $6) $1) (PACKvp (PACK $0)))) (((((($11 $3) $1) $6) (EXVALval $0))
   $5) (PACKvpf $2)))))))) ((((($10 ((HANDLEexp $2) $1)) $5) $4) $3)
   (PACKvp $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(exval -> bool) -> bool) (\(e :exval). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($11 $3) $6)
   $5) $0) (PACKvp (PACK $1)))) (((((($10 $2) $0) $5) (EXVALval $1))
   $4) FAILvpf))))) ((((($10 ((HANDLEexp $2) $1)) $5) $4) $3) (PACKvp
   (PACK $0))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(exval -> bool) -> bool) (\(e :exval). ((==> ((((($9 $1) $4)
   $3) $2) (VALvp (EXVALval $0)))) ((((($9 (RAISEexp $1)) $4) $3) $2)
   (PACKvp (PACK $0))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($9 $1) $4) $3)
   $2) (PACKvp $0))) ((((($9 (RAISEexp $1)) $4) $3) $2) (PACKvp
   $0)))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(match -> bool) -> bool) (\(match :match). ((((($7 (FNexp $0))
   $2) $1) $2) (VALvp (CLOSUREval (((CLOSURE $0) $1)
   empty_varenv))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(mrule -> bool) -> bool) (\(mrule :mrule).
   ((! :(match option -> bool) -> bool) (\(match_op :match option).
   ((! :(val -> bool) -> bool) (\(v :val). ((! :(val -> bool) -> bool)
   (\(v' :val). ((==> (((((($9 $3) $6) $5) $1) $4) (VALvpf $0)))
   (((((($10 ((MATCH $3) $2)) $6) $5) $1) $4) (VALvpf
   $0)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(mrule -> bool) -> bool) (\(mrule :mrule).
   ((! :(match option -> bool) -> bool) (\(match_op :match option).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> (((((($9 $3) $6)
   $5) $1) $4) (PACKvpf $0))) (((((($10 ((MATCH $3) $2)) $6) $5) $1)
   $4) (PACKvpf $0)))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(mrule -> bool) -> bool) (\(mrule :mrule).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> (((((($7 $1) $4) $3)
   $0) $2) FAILvpf)) (((((($8 ((MATCH $1) (NONE :match option))) $4)
   $3) $0) $2) FAILvpf))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(mrule -> bool) -> bool) (\(mrule :mrule).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(val_pack_fail -> bool) -> bool) (\(vpf :val_pack_fail). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ (((((($10 $4) $7)
   $6) $2) $0) FAILvpf)) (((((($11 $3) $0) $6) $2) $5) $1)))))
   (((((($10 ((MATCH $3) ((SOME :match -> match option) $2))) $6) $5)
   $1) $4) $0))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val). ((! :(val -> bool) -> bool)
   (\(v' :val). ((==> ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(varenv -> bool) -> bool) (\(VE :varenv). ((/\ ((((((eval_pat
   $5) $8) $7) $3) $1) (VARENVvef $0))) ((((($13 $4) $1) ((add_env $7)
   (((ENV empty_strenv) $0) empty_exconenv))) $6) (VALvp $2))))))))
   (((((($9 ((MRULE $3) $2)) $6) $5) $1) $4) (VALvpf
   $0)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(varenv -> bool) -> bool) (\(VE :varenv). ((/\ ((((((eval_pat
   $5) $8) $7) $3) $1) (VARENVvef $0))) ((((($13 $4) $1) ((add_env $7)
   (((ENV empty_strenv) $0) empty_exconenv))) $6) (PACKvp $2))))))))
   (((((($9 ((MRULE $3) $2)) $6) $5) $1) $4) (PACKvpf
   $0)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((((((eval_pat $2)
   $5) $4) $0) $3) FAILvef)) (((((($8 ((MRULE $2) $1)) $5) $4) $0) $3)
   FAILvpf))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> ((((($5 $1)
   $4) $3) $2) (VARENVvep $0))) ((((($6 (VALdec $1)) $4) $3) $2)
   (ENVep (((ENV empty_strenv) $0) empty_exconenv))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($5 $1) $4) $3)
   $2) (PACKvep $0))) ((((($6 (VALdec $1)) $4) $3) $2) (PACKep
   $0)))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exbind -> bool) -> bool) (\(exbind :exbind).
   ((! :(exconenv -> bool) -> bool) (\(EE :exconenv). ((==>
   (((((eval_exbind $1) $4) $3) $2) (EXCONENVeep $0))) ((((($6
   (EXCEPTdec $1)) $4) $3) $2) (ENVep (((ENV empty_strenv)
   empty_varenv) $0))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exbind -> bool) -> bool) (\(exbind :exbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> (((((eval_exbind
   $1) $4) $3) $2) (PACKeep $0))) ((((($6 (EXCEPTdec $1)) $4) $3) $2)
   (PACKep $0)))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(env -> bool) -> bool) (\(E2 :env). ((==>
   ((? :(env -> bool) -> bool) (\(E1 :env).
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($9 $4) $7)
   $6) $0) (ENVep $1))) ((((($9 $3) $0) ((add_env $6) $1)) $5) (ENVep
   $2)))))))) ((((($7 ((LOCALdec $2) $1)) $5) $4) $3) (ENVep
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($7 $2) $5) $4)
   $3) (PACKep $0))) ((((($7 ((LOCALdec $2) $1)) $5) $4) $3) (PACKep
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(env -> bool) -> bool) (\(E1 :env).
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($9 $4) $7)
   $6) $0) (ENVep $1))) ((((($9 $3) $0) ((add_env $6) $1)) $5) (PACKep
   $2)))))))) ((((($7 ((LOCALdec $2) $1)) $5) $4) $3) (PACKep
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(strid long nonemptylist -> bool) -> bool)
   (\(longstrid_1_n :strid long nonemptylist).
   ((! :(env nonemptylist -> bool) -> bool)
   (\(E_1_n :env nonemptylist). ((==>
   (((= :env lift nonemptylist -> env lift nonemptylist -> bool)
   (((nonempty_MAP :(strid long -> env lift) ->
                    strid long nonemptylist -> env lift nonemptylist)
   (lookuplongstrid_env $2)) $1))
   (((nonempty_MAP :(env -> env lift) -> env nonemptylist ->
                    env lift nonemptylist) (lift :env -> env lift))
   $0))) ((((($5 (OPENdec $1)) $3) $2) $3) (ENVep
   (add_nonemptylist_env $0))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((((($3 EMPTYdec) $1) $0)
   $1) (ENVep (((ENV empty_strenv) empty_varenv)
   empty_exconenv)))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(env -> bool) -> bool) (\(E1 :env).
   ((! :(env -> bool) -> bool) (\(E2 :env). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($9 $4) $7)
   $6) $0) (ENVep $2))) ((((($9 $3) $0) ((add_env $6) $2)) $5) (ENVep
   $1)))))) ((((($8 ((SEQdec $3) $2)) $6) $5) $4) (ENVep ((add_env $1)
   $0))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($7 $2) $5) $4)
   $3) (PACKep $0))) ((((($7 ((SEQdec $2) $1)) $5) $4) $3) (PACKep
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(env -> bool) -> bool) (\(E1 :env).
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($9 $4) $7)
   $6) $0) (ENVep $1))) ((((($9 $3) $0) ((add_env $6) $1)) $5) (PACKep
   $2)))))))) ((((($7 ((SEQdec $2) $1)) $5) $4) $3) (PACKep
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==>
   ((? :(val -> bool) -> bool) (\(v :val).
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($12 $3) $7)
   $6) $0) (VALvp $1))) ((((((eval_pat $4) $0) $6) $1) $5) (VARENVvef
   $2)))))))) ((((($6 (((PLAINvalbind $2) $1) (NONE :valbind option)))
   $5) $4) $3) (VARENVvep $0)))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($10 $1) $5)
   $4) $3) (PACKvp $0))) ((((($6 (((PLAINvalbind $2) $1)
   (NONE :valbind option))) $5) $4) $3) (PACKvep $0))))))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(varenv -> bool) -> bool) (\(VE' :varenv). ((==>
   ((? :(val -> bool) -> bool) (\(v :val).
   ((? :(state -> bool) -> bool) (\(s2 :state).
   ((? :(state -> bool) -> bool) (\(s3 :state). ((/\ ((((($15 $6) $10)
   $9) $1) (VALvp $2))) ((/\ ((((((eval_pat $7) $1) $9) $2) $0)
   (VARENVvef $4))) ((((($11 $5) $0) $9) $8) (VARENVvep $3)))))))))))
   ((((($8 (((PLAINvalbind $4) $3) ((SOME :valbind -> valbind option)
   $2))) $7) $6) $5) (VARENVvep ((add_varenv $1)
   $0))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($11 $2) $6)
   $5) $4) (PACKvp $0))) ((((($7 (((PLAINvalbind $3) $2)
   ((SOME :valbind -> valbind option) $1))) $6) $5) $4) (PACKvep
   $0)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(val -> bool) -> bool) (\(v :val).
   ((? :(varenv -> bool) -> bool) (\(VE :varenv).
   ((? :(state -> bool) -> bool) (\(s2 :state).
   ((? :(state -> bool) -> bool) (\(s3 :state). ((/\ ((((($15 $6) $10)
   $9) $1) (VALvp $3))) ((/\ ((((((eval_pat $7) $1) $9) $3) $0)
   (VARENVvef $2))) ((((($11 $5) $0) $9) $8) (PACKvep $4)))))))))))))
   ((((($7 (((PLAINvalbind $3) $2) ((SOME :valbind -> valbind option)
   $1))) $6) $5) $4) (PACKvep $0)))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp). ((==>
   ((? :(val -> bool) -> bool) (\(v :val).
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($11 $2) $6)
   $5) $0) (VALvp $1))) ((((((eval_pat $3) $0) $5) $1) $4)
   FAILvef))))))) ((((($5 (((PLAINvalbind $1) $0)
   (NONE :valbind option))) $4) $3) $2) (PACKvep (PACK (NAMEexval
   (EXNAME 8))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind). ((==>
   ((? :(val -> bool) -> bool) (\(v :val).
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ ((((($12 $3) $7)
   $6) $0) (VALvp $1))) ((((((eval_pat $4) $0) $6) $1) $5)
   FAILvef))))))) ((((($6 (((PLAINvalbind $2) $1)
   ((SOME :valbind -> valbind option) $0))) $5) $4) $3) (PACKvep (PACK
   (NAMEexval (EXNAME 8))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> ((((($5 $1)
   $4) $3) $2) (VARENVvep $0))) ((((($5 (RECvalbind $1)) $4) $3) $2)
   (VARENVvep (rec_varenv $0)))))))))))))))
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($5 $1) $4) $3)
   $2) (PACKvep $0))) ((((($5 (RECvalbind $1)) $4) $3) $2) (PACKvep
   $0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))`),
 ((eval_pat_DEF),
  [],
  `((! :(pat -> bool) -> bool) (\(p :pat).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(v :env). ((! :(val -> bool) -> bool)
   (\(e :val). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail).
   (((= :bool -> bool -> bool) ((((((eval_pat $5) $4) $3) $2) $1) $0))
   ((! :((atpat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_atpat :atpat -> state -> env -> val -> state ->
                       varenv_fail -> bool).
   ((! :((patrow -> state -> env -> record -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_patrow :patrow -> state -> env -> record -> state ->
                        varenv_fail -> bool).
   ((! :((pat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_pat :pat -> state -> env -> val -> state ->
                     varenv_fail -> bool). ((==> (((eval_pat_pred $2)
   $1) $0)) (((((($0 $8) $7) $6) $5) $4) $3)))))))))))))))))))))`),
 ((eval_patrow_DEF),
  [],
  `((! :(patrow -> bool) -> bool) (\(pr :patrow).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(r :env).
   ((! :(record -> bool) -> bool) (\(e :record).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail).
   (((= :bool -> bool -> bool) ((((((eval_patrow $5) $4) $3) $2) $1)
   $0))
   ((! :((atpat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_atpat :atpat -> state -> env -> val -> state ->
                       varenv_fail -> bool).
   ((! :((patrow -> state -> env -> record -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_patrow :patrow -> state -> env -> record -> state ->
                        varenv_fail -> bool).
   ((! :((pat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_pat :pat -> state -> env -> val -> state ->
                     varenv_fail -> bool). ((==> (((eval_pat_pred $2)
   $1) $0)) (((((($1 $8) $7) $6) $5) $4) $3)))))))))))))))))))))`),
 ((eval_atpat_DEF),
  [],
  `((! :(atpat -> bool) -> bool) (\(ap :atpat).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(v :env). ((! :(val -> bool) -> bool)
   (\(e :val). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail).
   (((= :bool -> bool -> bool) ((((((eval_atpat $5) $4) $3) $2) $1)
   $0))
   ((! :((atpat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_atpat :atpat -> state -> env -> val -> state ->
                       varenv_fail -> bool).
   ((! :((patrow -> state -> env -> record -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_patrow :patrow -> state -> env -> record -> state ->
                        varenv_fail -> bool).
   ((! :((pat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(poss_eval_pat :pat -> state -> env -> val -> state ->
                     varenv_fail -> bool). ((==> (((eval_pat_pred $2)
   $1) $0)) (((((($2 $8) $7) $6) $5) $4) $3)))))))))))))))))))))`),
 ((eval_pat_pred_DEF),
  [],
  `((! :((atpat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(eval_atpat :atpat -> state -> env -> val -> state ->
                  varenv_fail -> bool).
   ((! :((patrow -> state -> env -> record -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(eval_patrow :patrow -> state -> env -> record -> state ->
                   varenv_fail -> bool).
   ((! :((pat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(eval_pat :pat -> state -> env -> val -> state -> varenv_fail ->
                bool). (((= :bool -> bool -> bool) (((eval_pat_pred
   $2) $1) $0)) ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). (((((($5 WILDCARDatpat) $2) $1) $0) $2) (VARENVvef
   empty_varenv))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(scon -> bool) -> bool) (\(scon :scon).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   (((= :val -> val -> bool) $0) (SVALval (value_of $1)))) (((((($6
   (SCONatpat $1)) $3) $2) $0) $3) (VARENVvef empty_varenv))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(scon -> bool) -> bool) (\(scon :scon).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> (~
   (((= :val -> val -> bool) $0) (SVALval (value_of $1))))) (((((($6
   (SCONatpat $1)) $3) $2) $0) $3) FAILvef))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(var -> bool) -> bool)
   (\(var :var). ((! :(val -> bool) -> bool) (\(v :val). (((((($6
   (VARatpat $1)) $3) $2) $0) $3) (VARENVvef (((insert_into_varenv
   empty_varenv) $1) $0)))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   (((= :val -> val -> bool) $0) (CONval ((long_base :con long -> con)
   $1)))) (((((($6 (CONatpat $1)) $3) $2) $0) $3) (VARENVvef
   empty_varenv)))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> (~
   (((= :val -> val -> bool) $0) (CONval ((long_base :con long -> con)
   $1))))) (((((($6 (CONatpat $1)) $3) $2) $0) $3) FAILvef)))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(excon long -> bool) -> bool) (\(longexcon :excon long).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==>
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $2)
   $1)) ((lift :exname -> exname lift) $0))) (((((($6 (EXCONatpat $1))
   $3) $2) (EXVALval (NAMEexval $0))) $3) (VARENVvef
   empty_varenv)))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(excon long -> bool) -> bool) (\(longexcon :excon long).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==>
   ((? :(exname -> bool) -> bool) (\(en' :exname). ((/\
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $3)
   $2)) ((lift :exname -> exname lift) $0))) (~
   (((= :exname -> exname -> bool) $1) $0)))))) (((((($6 (EXCONatpat
   $1)) $3) $2) (EXVALval (NAMEexval $0))) $3) FAILvef))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((==> (((= :val -> val -> bool) $0) (RECORDval
   empty_record))) (((((($5 (RECORDatpat (NONE :patrow option))) $2)
   $1) $0) $2) (VARENVvef empty_varenv)))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(patrow -> bool) -> bool) (\(patrow :patrow). ((==>
   ((? :(record -> bool) -> bool) (\(r :record). ((/\
   (((= :val -> val -> bool) $3) (RECORDval ((add_record empty_record)
   $0)))) (((((($8 $1) $6) $4) $0) $5) (VARENVvef $2)))))) (((((($8
   (RECORDatpat ((SOME :patrow -> patrow option) $0))) $5) $3) $2) $4)
   (VARENVvef ((add_varenv empty_varenv) $1))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(patrow -> bool) -> bool) (\(patrow :patrow).
   ((==> ((? :(record -> bool) -> bool) (\(r :record). ((/\
   (((= :val -> val -> bool) $2) (RECORDval ((add_record empty_record)
   $0)))) (((((($7 $1) $5) $3) $0) $4) FAILvef))))) (((((($7
   (RECORDatpat ((SOME :patrow -> patrow option) $0))) $4) $2) $1) $3)
   FAILvef))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(varenv_fail -> bool) -> bool)
   (\(vef :varenv_fail). ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((==> (((((($6 $0) $5) $3) $2) $4) $1)) (((((($8 (PARatpat $0)) $5)
   $3) $2) $4) $1))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record). (((((($4 DOTDOTDOT)
   $2) $1) $0) $2) (VARENVvef empty_varenv))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat). ((==> (((((($6 $0) $5)
   $3) ((lower :val lift -> val) ((lookup_label $2) $1))) $4)
   FAILvef)) (((((($7 (((PATROW $1) $0) (NONE :patrow option))) $5)
   $3) $2) $4) FAILvef))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(patrow -> bool) -> bool) (\(patrow :patrow). ((==> (((((($7
   $1) $6) $4) ((lower :val lift -> val) ((lookup_label $3) $2))) $5)
   FAILvef)) (((((($8 (((PATROW $2) $1)
   ((SOME :patrow -> patrow option) $0))) $6) $4) $3) $5)
   FAILvef))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> (((((($7 $1)
   $6) $4) ((lower :val lift -> val) ((lookup_label $3) $2))) $5)
   (VARENVvef $0))) (((((($8 (((PATROW $2) $1) (NONE :patrow option)))
   $6) $4) $3) $5) (VARENVvef $0)))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(patrow -> bool) -> bool) (\(patrow :patrow).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(varenv -> bool) -> bool) (\(VE' :varenv). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\ (((((($10 $4) $9)
   $7) ((lower :val lift -> val) ((lookup_label $6) $5))) $0)
   (VARENVvef $2))) (((((($11 $3) $0) $7) $6) $8) (VARENVvef $1))))))
   (((((($10 (((PATROW $4) $3) ((SOME :patrow -> patrow option) $2)))
   $8) $6) $5) $7) (VARENVvef ((add_varenv $1)
   $0))))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(patrow -> bool) -> bool) (\(patrow :patrow). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state).
   ((? :(varenv -> bool) -> bool) (\(VE :varenv). ((/\ (((((($9 $3)
   $8) $6) ((lower :val lift -> val) ((lookup_label $5) $4))) $1)
   (VARENVvef $0))) (((((($10 $2) $1) $6) $5) $7) FAILvef)))))))
   (((((($8 (((PATROW $2) $1) ((SOME :patrow -> patrow option) $0)))
   $6) $4) $3) $5) FAILvef))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(atpat -> bool) -> bool) (\(atpat :atpat).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail). ((==>
   (((((($8 $1) $5) $3) $2) $4) $0)) (((((($6 (ATPATpat $1)) $5) $3)
   $2) $4) $0))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(atpat -> bool) -> bool) (\(atpat :atpat).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail). ((==>
   ((? :(con -> bool) -> bool) (\(con :con).
   ((? :(val -> bool) -> bool) (\(v' :val). ((/\
   (((= :con -> con -> bool) ((long_base :con long -> con) $4)) $1))
   ((/\ (~ (((= :con -> con -> bool) $1) (CON "ref")))) ((/\
   (((= :val -> val -> bool) $5) ((APPCONval $1) $0))) (((((($11 $3)
   $8) $6) $0) $7) $2))))))))) (((((($7 ((CONpat $2) $1)) $6) $4) $3)
   $5) $0))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(atpat -> bool) -> bool) (\(atpat :atpat). ((==>
   ((? :(con -> bool) -> bool) (\(con :con). ((/\
   (((= :con -> con -> bool) ((long_base :con long -> con) $2)) $0))
   ((/\ (~ (((= :con -> con -> bool) $0) (CON "ref"))))
   ((! :(val -> bool) -> bool) (\(v' :val). (~
   (((= :val -> val -> bool) $4) ((APPCONval $1) $0)))))))))) (((((($5
   ((CONpat $1) $0)) $4) $3) $2) $4) FAILvef))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(excon long -> bool) -> bool)
   (\(longexcon :excon long). ((! :(atpat -> bool) -> bool)
   (\(atpat :atpat). ((! :(varenv_fail -> bool) -> bool)
   (\(vef :varenv_fail). ((==> ((? :(val -> bool) -> bool)
   (\(v' :val). ((? :(exname -> bool) -> bool) (\(en :exname). ((/\
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $6)
   $4)) ((lift :exname -> exname lift) $0))) ((/\
   (((= :val -> val -> bool) $5) (EXVALval ((NAMEVALexval $0) $1))))
   (((((($11 $3) $8) $6) $1) $7) $2)))))))) (((((($7 ((EXCONpat $2)
   $1)) $6) $4) $3) $5) $0))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(excon long -> bool) -> bool)
   (\(longexcon :excon long). ((! :(atpat -> bool) -> bool)
   (\(atpat :atpat). ((==> ((? :(exname -> bool) -> bool)
   (\(en :exname). ((/\ (((= :exname lift -> exname lift -> bool)
   ((lookuplongexcon_env $4) $2)) ((lift :exname -> exname lift) $0)))
   ((! :(val -> bool) -> bool) (\(v' :val). (~
   (((= :val -> val -> bool) $4) (EXVALval ((NAMEVALexval $1)
   $0)))))))))) (((((($5 ((EXCONpat $1) $0)) $4) $3) $2) $4)
   FAILvef))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(addr -> bool) -> bool) (\(a :addr).
   ((! :(atpat -> bool) -> bool) (\(atpat :atpat).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail). ((==>
   ((? :(val -> bool) -> bool) (\(v :val). ((/\
   (((= :val lift -> val lift -> bool) ((lookupaddr_state $5) $3))
   ((lift :val -> val lift) $0))) (((((($8 $2) $5) $4) $0) $5) $1)))))
   (((((($5 ((CONpat ((BASE :con -> con long) (CON "ref"))) $1)) $4)
   $3) (ADDRval $2)) $4) $0))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(var -> bool) -> bool) (\(var :var).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> (((((($7 $1)
   $6) $4) $3) $5) (VARENVvef $0))) (((((($7 ((LAYEREDpat $2) $1)) $6)
   $4) $3) $5) (VARENVvef ((add_varenv (((insert_into_varenv
   empty_varenv) $2) $3)) $0)))))))))))))))))))
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(var -> bool) -> bool) (\(var :var).
   ((! :(pat -> bool) -> bool) (\(pat :pat). ((==> (((((($6 $0) $5)
   $3) $2) $4) FAILvef)) (((((($6 ((LAYEREDpat $1) $0)) $5) $3) $2)
   $4) FAILvef))))))))))))))))))))))))))))))))))))))))))))))`),
 ((eval_exbind_DEF),
  [],
  `((! :(exbind -> bool) -> bool) (\(eb :exbind).
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exconenv_pack -> bool) -> bool) (\(eep :exconenv_pack).
   (((= :bool -> bool -> bool) (((((eval_exbind $4) $3) $2) $1) $0))
   ((! :((exbind -> state -> env -> state -> exconenv_pack -> bool) ->
        bool) -> bool)
   (\(poss_eval_exbind :exbind -> state -> env -> state ->
                        exconenv_pack -> bool). ((==>
   (eval_exbind_pred $0)) ((((($0 $5) $4) $3) $2) $1)))))))))))))))`),
 ((eval_exbind_pred_DEF),
  [],
  `((! :((exbind -> state -> env -> state -> exconenv_pack -> bool) ->
        bool) -> bool)
   (\(eval_exbind :exbind -> state -> env -> state -> exconenv_pack ->
                   bool). (((= :bool -> bool -> bool)
   (eval_exbind_pred $0)) ((/\ ((! :(excon -> bool) -> bool)
   (\(excon :excon). ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==> ((/\
   (((= :exname -> exname -> bool) $0) (new_exname (STATE_arg2 $3))))
   (((= :state -> state -> bool) $1) ((add_exname $0) $3)))) ((((($5
   ((EXBIND1 $4) (NONE :exbind option))) $3) $2) $1) (EXCONENVeep
   (((insert_into_exconenv empty_exconenv) $4) $0))))))))))))))) ((/\
   ((! :(excon -> bool) -> bool) (\(excon :excon).
   ((! :(exbind -> bool) -> bool) (\(eb :exbind).
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(exconenv -> bool) -> bool) (\(EE :exconenv). ((==>
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\
   (((= :exname -> exname -> bool) $2) (new_exname (STATE_arg2 $5))))
   ((/\ (((= :state -> state -> bool) $0) ((add_exname $2) $5)))
   ((((($8 $6) $0) $4) $3) (EXCONENVeep $1))))))) ((((($7 ((EXBIND1
   $6) ((SOME :exbind -> exbind option) $5))) $4) $3) $2) (EXCONENVeep
   ((add_exconenv (((insert_into_exconenv empty_exconenv) $6) $1))
   $0))))))))))))))))))) ((/\ ((! :(excon -> bool) -> bool)
   (\(excon :excon). ((! :(exbind -> bool) -> bool) (\(eb :exbind).
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(exname -> bool) -> bool) (\(en :exname).
   ((? :(state -> bool) -> bool) (\(s' :state). ((/\
   (((= :exname -> exname -> bool) $1) (new_exname (STATE_arg2 $5))))
   ((/\ (((= :state -> state -> bool) $0) ((add_exname $1) $5)))
   ((((($8 $6) $0) $4) $3) (PACKeep $2))))))))) ((((($6 ((EXBIND1 $5)
   ((SOME :exbind -> exbind option) $4))) $3) $2) $1) (PACKeep
   $0)))))))))))))))) ((/\ ((! :(excon -> bool) -> bool)
   (\(excon :excon). ((! :(excon long -> bool) -> bool)
   (\(longexcon :excon long). ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==>
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $1)
   $3)) ((lift :exname -> exname lift) $0))) ((((($5 (((EXBIND2 $4)
   $3) (NONE :exbind option))) $2) $1) $2) (EXCONENVeep
   (((insert_into_exconenv empty_exconenv) $4) $0))))))))))))))) ((/\
   ((! :(excon -> bool) -> bool) (\(excon :excon).
   ((! :(excon long -> bool) -> bool) (\(longexcon :excon long).
   ((! :(exbind -> bool) -> bool) (\(eb :exbind).
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(exconenv -> bool) -> bool) (\(EE :exconenv). ((==> ((/\
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $3)
   $6)) ((lift :exname -> exname lift) $1))) ((((($8 $5) $4) $3) $2)
   (EXCONENVeep $0)))) ((((($8 (((EXBIND2 $7) $6)
   ((SOME :exbind -> exbind option) $5))) $4) $3) $2) (EXCONENVeep
   ((add_exconenv (((insert_into_exconenv empty_exconenv) $7) $1))
   $0))))))))))))))))))))) ((! :(excon -> bool) -> bool)
   (\(excon :excon). ((! :(excon long -> bool) -> bool)
   (\(longexcon :excon long). ((! :(exbind -> bool) -> bool)
   (\(eb :exbind). ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==>
   ((? :(exname -> bool) -> bool) (\(en :exname). ((/\
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $3)
   $6)) ((lift :exname -> exname lift) $0))) ((((($8 $5) $4) $3) $2)
   (PACKeep $1)))))) ((((($7 (((EXBIND2 $6) $5)
   ((SOME :exbind -> exbind option) $4))) $3) $2) $1) (PACKeep
   $0)))))))))))))))))))))))))`),
 ((apply_DEF),
  [],
  `((/\ ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Size) $0)) (VALvp
   (SVALval (SVINT (string_size (SVSTR_arg (SVALval_arg $0))))))))))
   ((/\ ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Chr) $0)) (VALvp
   (SVALval (SVSTR (getchar (SVINT_arg (SVALval_arg $0)))))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Ord) $0)) (VALvp
   (SVALval (SVINT (ord_str (SVSTR_arg (SVALval_arg $0)))))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Explode) $0)) (VALvp
   (explode_str (SVSTR_arg (SVALval_arg $0)))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Implode) $0)) (VALvp
   (SVALval (SVSTR (implode_str $0)))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Abs) $0)) (VALvp
   (SVALval (SVINT (integer_abs (SVINT_arg (SVALval_arg $0))))))))))
   ((/\ ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Div) $0))
   ((((COND :bool -> val_pack -> val_pack -> val_pack)
   (((= :integer -> integer -> bool) (intfield2 $0)) (INT 0))) (PACKvp
   (PACK (NAMEexval (EXNAME 1))))) (VALvp (SVALval (SVINT ((div
   (intfield1 $0)) (intfield2 $0)))))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Mod) $0))
   ((((COND :bool -> val_pack -> val_pack -> val_pack)
   (((= :integer -> integer -> bool) (intfield2 $0)) (INT 0))) (PACKvp
   (PACK (NAMEexval (EXNAME 2))))) (VALvp (SVALval (SVINT ((mod
   (intfield1 $0)) (intfield2 $0)))))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Neg) $0))
   ((((COND :bool -> val_pack -> val_pack -> val_pack)
   (((= :integer -> integer -> bool) (SVINT_arg (SVALval_arg $0)))
   (INT 0))) (VALvp $0)) (VALvp (SVALval (SVINT (neg (SVINT_arg
   (SVALval_arg $0))))))))))) ((/\ ((! :(val -> bool) -> bool)
   (\(v :val). (((= :val_pack -> val_pack -> bool) ((apply Times) $0))
   (VALvp (SVALval (SVINT ((times (intfield1 $0)) (intfield2
   $0))))))))) ((/\ ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Plus) $0)) (VALvp
   (SVALval (SVINT ((plus (intfield1 $0)) (intfield2 $0))))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Minus) $0)) (VALvp
   (SVALval (SVINT ((minus (intfield1 $0)) (intfield2 $0))))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Eql) $0))
   ((((COND :bool -> val_pack -> val_pack -> val_pack)
   (((= :val -> val -> bool) (field1_val $0)) (field2_val $0))) (VALvp
   (CONval (CON "true")))) (VALvp (CONval (CON "false")))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Noteql) $0))
   ((((COND :bool -> val_pack -> val_pack -> val_pack)
   (((= :val -> val -> bool) (field1_val $0)) (field2_val $0))) (VALvp
   (CONval (CON "false")))) (VALvp (CONval (CON "true")))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Less) $0))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) (is_SVINT
   (SVALval_arg (field1_val $0))))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) ((below
   (intfield1 $0)) (intfield2 $0))) (VALvp (CONval (CON "true"))))
   (VALvp (CONval (CON "false")))))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) ((ltstring
   (strfield1 $0)) (strfield2 $0))) (VALvp (CONval (CON "true"))))
   (VALvp (CONval (CON "false"))))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Greater) $0))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) (is_SVINT
   (SVALval_arg (field1_val $0))))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) ((below
   (intfield2 $0)) (intfield2 $0))) (VALvp (CONval (CON "true"))))
   (VALvp (CONval (CON "false")))))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) ((ltstring
   (strfield2 $0)) (strfield1 $0))) (VALvp (CONval (CON "true"))))
   (VALvp (CONval (CON "false"))))))))) ((/\
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :val_pack -> val_pack -> bool) ((apply Lesseql) $0))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) (is_SVINT
   (SVALval_arg (field1_val $0))))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) ((below
   (intfield2 $0)) (intfield1 $0))) (VALvp (CONval (CON "false"))))
   (VALvp (CONval (CON "true")))))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) ((ltstring
   (strfield2 $0)) (strfield1 $0))) (VALvp (CONval (CON "false"))))
   (VALvp (CONval (CON "true"))))))))) ((! :(val -> bool) -> bool)
   (\(v :val). (((= :val_pack -> val_pack -> bool) ((apply Greatereql)
   $0)) ((((COND :bool -> val_pack -> val_pack -> val_pack) (is_SVINT
   (SVALval_arg (field1_val $0))))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) ((below
   (intfield1 $0)) (intfield2 $0))) (VALvp (CONval (CON "false"))))
   (VALvp (CONval (CON "true")))))
   ((((COND :bool -> val_pack -> val_pack -> val_pack) ((ltstring
   (strfield1 $0)) (strfield2 $0))) (VALvp (CONval (CON "false"))))
   (VALvp (CONval (CON "true")))))))))))))))))))))))))`),
 ((initial_state_DEF),
  [],
  `(((= :state -> state -> bool) initial_state) ((STATE (MEM
   (empty_finmap :(addr # val) list finmap))) (EXNAMESET
   (((INSERT :exname -> exname set -> exname set) (EXNAME 0))
   (((INSERT :exname -> exname set -> exname set) (EXNAME 1))
   (((INSERT :exname -> exname set -> exname set) (EXNAME 2))
   (((INSERT :exname -> exname set -> exname set) (EXNAME 3))
   (((INSERT :exname -> exname set -> exname set) (EXNAME 4))
   (((INSERT :exname -> exname set -> exname set) (EXNAME 5))
   (((INSERT :exname -> exname set -> exname set) (EXNAME 6))
   (((INSERT :exname -> exname set -> exname set) (EXNAME 7))
   (((INSERT :exname -> exname set -> exname set) (EXNAME 8))
   (EMPTY :exname set)))))))))))))`),
 ((initial_env_DEF),
  [],
  `(((= :env -> env -> bool) initial_env) (((ENV initial_strenv)
   initial_varenv) initial_exconenv))`),
 ((initial_strenv_DEF),
  [],
  `(((= :strenv -> strenv -> bool) initial_strenv) empty_strenv)`),
 ((initial_exconenv_DEF),
  [],
  `(((= :exconenv -> exconenv -> bool) initial_exconenv)
   (((insert_into_exconenv (((insert_into_exconenv
   (((insert_into_exconenv (((insert_into_exconenv
   (((insert_into_exconenv (((insert_into_exconenv
   (((insert_into_exconenv (((insert_into_exconenv
   (((insert_into_exconenv empty_exconenv) (EXCON "Abs")) (EXNAME 0)))
   (EXCON "Div")) (EXNAME 1))) (EXCON "Mod")) (EXNAME 2))) (EXCON
   "Prod")) (EXNAME 3))) (EXCON "Neg")) (EXNAME 4))) (EXCON "Sum"))
   (EXNAME 5))) (EXCON "Diff")) (EXNAME 6))) (EXCON "Match")) (EXNAME
   7))) (EXCON "Bind")) (EXNAME 8)))`),
 ((initial_varenv_DEF),
  [],
  `(((= :varenv -> varenv -> bool) initial_varenv)
   (((insert_into_varenv (((insert_into_varenv (((insert_into_varenv
   (((insert_into_varenv (((insert_into_varenv (((insert_into_varenv
   (((insert_into_varenv (((insert_into_varenv (((insert_into_varenv
   (((insert_into_varenv (((insert_into_varenv (((insert_into_varenv
   (((insert_into_varenv (((insert_into_varenv (((insert_into_varenv
   (((insert_into_varenv (((insert_into_varenv (((insert_into_varenv
   (((insert_into_varenv empty_varenv) (VAR ">=")) (BASval
   Greatereql))) (VAR "<=")) (BASval Lesseql))) (VAR ">")) (BASval
   Greater))) (VAR "<")) (BASval Less))) (VAR "<>")) (BASval Noteql)))
   (VAR "=")) (BASval Eql))) (VAR "-")) (BASval Minus))) (VAR "+"))
   (BASval Plus))) (VAR "*")) (BASval Times))) (VAR "~")) (BASval
   Neg))) (VAR "mod")) (BASval Mod))) (VAR "div")) (BASval Div))) (VAR
   "abs")) (BASval Abs))) (VAR "implode")) (BASval Implode))) (VAR
   "explode")) (BASval Explode))) (VAR "ord")) (BASval Ord))) (VAR
   "chr")) (BASval Chr))) (VAR "size")) (BASval Size))) (VAR ":="))
   ASSGval))`),
 ((implode_DEF),
  [],
  `((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :string -> string -> bool) (implode_str (CONval $0))) ""))))
   ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :string -> string -> bool) (implode_str ((APPCONval $1) $0)))
   ((STRING (first_char (strfield1 $0))) (implode_str $0)))))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :string -> string -> bool) (implode_str (RECORDval $0)))
   (implode10 $0))))) ((/\ (((= :string -> string -> bool)
   (implode_str ASSGval)) ((@ :(string -> bool) -> string)
   (\(x :string). T)))) ((/\ ((! :(sval -> bool) -> bool)
   (\(x1 :sval). (((= :string -> string -> bool) (implode_str (SVALval
   $0))) ((@ :(string -> bool) -> string) (\(x :string). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :string -> string -> bool) (implode_str (BASval $0)))
   ((@ :(string -> bool) -> string) (\(x :string). T)))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :string -> string -> bool) (implode_str (EXVALval $0)))
   ((@ :(string -> bool) -> string) (\(x :string). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :string -> string -> bool) (implode_str (ADDRval $0)))
   ((@ :(string -> bool) -> string) (\(x :string). T)))))) ((/\
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :string -> string -> bool) (implode_str (CLOSUREval $0)))
   ((@ :(string -> bool) -> string) (\(x :string). T)))))) ((/\
   ((! :((label # val) list finmap -> bool) -> bool)
   (\(x1 :(label # val) list finmap). (((= :string -> string -> bool)
   (implode10 (RECORD $0))) (implode11 $0))))) ((/\
   ((! :((label # val) list -> bool) -> bool)
   (\(x1 :(label # val) list). (((= :string -> string -> bool)
   (implode11
   ((FINMAP :(label # val) list -> (label # val) list finmap) $0)))
   (implode12 $0))))) ((/\ ((! :(label # val -> bool) -> bool)
   (\(x1 :label # val). ((! :((label # val) list -> bool) -> bool)
   (\(x2 :(label # val) list). (((= :string -> string -> bool)
   (implode12
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $1) $0))) ((((COND :bool -> string -> string -> string)
   (((= :label -> label -> bool) ((FST :label # val -> label) $1))
   (LABEL "2"))) (implode13 $1)) (implode12 $0)))))))) ((/\
   (((= :string -> string -> bool) (implode12
   (NIL :(label # val) list))) "")) ((! :(label -> bool) -> bool)
   (\(x1 :label). ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :string -> string -> bool) (implode13
   (((, :label -> val -> label # val) $1) $0))) (implode_str
   $0)))))))))))))))))))`),
 ((explode_str_DEF),
  [],
  `((/\ (((= :val -> val -> bool) (explode_str "")) (CONval (CON
   "nil")))) ((! :(string -> bool) -> bool) (\(s :string).
   ((! :(ascii -> bool) -> bool) (\(a :ascii).
   (((= :val -> val -> bool) (explode_str ((STRING $0) $1)))
   ((APPCONval (CON "::")) (RECORDval (((insert_into_record
   (((insert_into_record empty_record) (LABEL "1")) (SVALval (SVSTR
   ((STRING $0) ""))))) (LABEL "2")) (explode_str $1))))))))))`),
 ((insert_into_state_mem_DEF),
  [],
  `((! :(mem -> bool) -> bool) (\(m :mem).
   ((! :(exnameset -> bool) -> bool) (\(ens :exnameset).
   ((! :(addr -> bool) -> bool) (\(a :addr).
   ((! :(val -> bool) -> bool) (\(v :val).
   (((= :state -> state -> bool) (((insert_into_state_mem ((STATE $3)
   $2)) $1) $0)) ((STATE (((insert_into_mem $3) $1) $0))
   $2))))))))))`),
 ((insert_into_mem_DEF),
  [],
  `((! :((addr # val) list finmap -> bool) -> bool)
   (\(f :(addr # val) list finmap). ((! :(addr -> bool) -> bool)
   (\(a :addr). ((! :(val -> bool) -> bool) (\(v :val).
   (((= :mem -> mem -> bool) (((insert_into_mem (MEM $2)) $1) $0))
   (MEM
   (((((finmap_insert :(addr -> addr -> bool) -> addr -> val ->
                       (addr # val) list finmap ->
                       (addr # val) list finmap) less_addr) $1) $0)
   $2)))))))))`),
 ((new_addr_DEF),
  [],
  `((! :(exnameset -> bool) -> bool) (\(ens :exnameset).
   ((! :(mem -> bool) -> bool) (\(m :mem). (((= :addr -> addr -> bool)
   (new_addr ((STATE $0) $1)))
   (((next_dom :(addr -> addr -> bool) -> (addr # val) list finmap ->
                addr) less_addr) (MEM_arg $0)))))))`),
 ((add_exname_DEF),
  [],
  `((! :(exname -> bool) -> bool) (\(exname :exname).
   ((! :(exnameset -> bool) -> bool) (\(ens :exnameset).
   ((! :(mem -> bool) -> bool) (\(m :mem).
   (((= :state -> state -> bool) ((add_exname $2) ((STATE $0) $1)))
   ((STATE $0) (EXNAMESET
   (((INSERT :exname -> exname set -> exname set) $2) (EXNAMESET_arg
   $1)))))))))))`),
 ((new_exname_DEF),
  [],
  `((! :(exname set -> bool) -> bool) (\(es :exname set).
   (((= :exname -> exname -> bool) (new_exname (EXNAMESET $0)))
   ((@ :(exname -> bool) -> exname) (\(en :exname). ((/\ (~
   (((IN :exname -> exname set -> bool) $0) $1)))
   ((! :(exname -> bool) -> bool) (\(en' :exname). ((==> ((less_exname
   $0) $1)) (((IN :exname -> exname set -> bool) $0) $2))))))))))`),
 ((lookupaddr_DEF),
  [],
  `((! :(mem -> bool) -> bool) (\(m :mem).
   ((! :(exnameset -> bool) -> bool) (\(ens :exnameset).
   ((! :(addr -> bool) -> bool) (\(a :addr).
   (((= :val lift -> val lift -> bool) ((lookupaddr_state ((STATE $2)
   $1)) $0)) ((lookupaddr_mem $2) $0))))))))`),
 ((STATE_arg2_DEF),
  [],
  `((! :(exnameset -> bool) -> bool) (\(ens :exnameset).
   ((! :(mem -> bool) -> bool) (\(m :mem).
   (((= :exnameset -> exnameset -> bool) (STATE_arg2 ((STATE $0) $1)))
   $1)))))`),
 ((STATE_arg1_DEF),
  [],
  `((! :(exnameset -> bool) -> bool) (\(ens :exnameset).
   ((! :(mem -> bool) -> bool) (\(m :mem). (((= :mem -> mem -> bool)
   (STATE_arg1 ((STATE $0) $1))) $0)))))`),
 ((STATE_DEF),
  [],
  `((! :(mem -> bool) -> bool) (\(m :mem).
   ((! :(exnameset -> bool) -> bool) (\(e :exnameset).
   (((= :state -> state -> bool) ((STATE $1) $0)) (ABS_state
   (((Node :mem # exnameset -> (mem # exnameset) ltree list ->
            (mem # exnameset) ltree)
   (((, :mem -> exnameset -> mem # exnameset) $1) $0))
   (NIL :(mem # exnameset) ltree list))))))))`),
 ((state_ISO_DEF),
  [],
  `((/\ ((! :(state -> bool) -> bool) (\(a :state).
   (((= :state -> state -> bool) (ABS_state (REP_state $0))) $0))))
   ((! :((mem # exnameset) ltree -> bool) -> bool)
   (\(r :(mem # exnameset) ltree). (((= :bool -> bool -> bool)
   (((TRP :(mem # exnameset -> (mem # exnameset) ltree list ->
           bool) -> (mem # exnameset) ltree -> bool)
   (\(v :mem # exnameset). (\(tl :(mem # exnameset) ltree list). ((/\
   ((? :(mem -> bool) -> bool) (\(m :mem).
   ((? :(exnameset -> bool) -> bool) (\(e :exnameset).
   (((= :mem # exnameset -> mem # exnameset -> bool) $3)
   (((, :mem -> exnameset -> mem # exnameset) $1) $0)))))))
   (((= :num -> num -> bool)
   ((LENGTH :(mem # exnameset) ltree list -> num) $0)) 0))))) $0))
   (((= :(mem # exnameset) ltree -> (mem # exnameset) ltree -> bool)
   (REP_state (ABS_state $0))) $0)))))`),
 ((state_TY_DEF),
  [],
  `((? :((state -> (mem # exnameset) ltree) -> bool) -> bool)
   (\(rep :state -> (mem # exnameset) ltree).
   (((TYPE_DEFINITION :((mem # exnameset) ltree -> bool) ->
                       (state -> (mem # exnameset) ltree) -> bool)
   ((TRP :(mem # exnameset -> (mem # exnameset) ltree list -> bool) ->
          (mem # exnameset) ltree -> bool) (\(v :mem # exnameset).
   (\(tl :(mem # exnameset) ltree list). ((/\
   ((? :(mem -> bool) -> bool) (\(m :mem).
   ((? :(exnameset -> bool) -> bool) (\(e :exnameset).
   (((= :mem # exnameset -> mem # exnameset -> bool) $3)
   (((, :mem -> exnameset -> mem # exnameset) $1) $0)))))))
   (((= :num -> num -> bool)
   ((LENGTH :(mem # exnameset) ltree list -> num) $0)) 0))))))
   $0)))`),
 ((MEM_arg_DEF),
  [],
  `((! :((addr # val) list finmap -> bool) -> bool)
   (\(fm :(addr # val) list finmap).
   (((= :(addr # val) list finmap -> (addr # val) list finmap -> bool)
   (MEM_arg (MEM $0))) $0)))`),
 ((lookupaddr_mem_DEF),
  [],
  `((! :((addr # val) list finmap -> bool) -> bool)
   (\(fm :(addr # val) list finmap). ((! :(addr -> bool) -> bool)
   (\(a :addr). (((= :val lift -> val lift -> bool) ((lookupaddr_mem
   (MEM $1)) $0))
   (((finmap_lookup :addr -> (addr # val) list finmap -> val lift) $0)
   $1))))))`),
 ((MEM_DEF),
  [],
  `((! :((addr # val) list finmap -> bool) -> bool)
   (\(f' :(addr # val) list finmap). (((= :mem -> mem -> bool) (MEM
   $0)) (ABS_mem
   (((Node :(addr # val) list finmap ->
            (addr # val) list finmap ltree list ->
            (addr # val) list finmap ltree) $0)
   (NIL :(addr # val) list finmap ltree list))))))`),
 ((mem_ISO_DEF),
  [],
  `((/\ ((! :(mem -> bool) -> bool) (\(a :mem).
   (((= :mem -> mem -> bool) (ABS_mem (REP_mem $0))) $0))))
   ((! :((addr # val) list finmap ltree -> bool) -> bool)
   (\(r :(addr # val) list finmap ltree). (((= :bool -> bool -> bool)
   (((TRP :((addr # val) list finmap ->
           (addr # val) list finmap ltree list -> bool) ->
           (addr # val) list finmap ltree -> bool)
   (\(v :(addr # val) list finmap).
   (\(tl :(addr # val) list finmap ltree list). ((/\
   ((? :((addr # val) list finmap -> bool) -> bool)
   (\(f :(addr # val) list finmap).
   (((= :(addr # val) list finmap -> (addr # val) list finmap -> bool)
   $2) $0)))) (((= :num -> num -> bool)
   ((LENGTH :(addr # val) list finmap ltree list -> num) $0)) 0)))))
   $0))
   (((= :(addr # val) list finmap ltree ->
         (addr # val) list finmap ltree -> bool) (REP_mem (ABS_mem
   $0))) $0)))))`),
 ((mem_TY_DEF),
  [],
  `((? :((mem -> (addr # val) list finmap ltree) -> bool) -> bool)
   (\(rep :mem -> (addr # val) list finmap ltree).
   (((TYPE_DEFINITION :((addr # val) list finmap ltree -> bool) ->
                       (mem -> (addr # val) list finmap ltree) ->
                       bool)
   ((TRP :((addr # val) list finmap ->
          (addr # val) list finmap ltree list -> bool) ->
          (addr # val) list finmap ltree -> bool)
   (\(v :(addr # val) list finmap).
   (\(tl :(addr # val) list finmap ltree list). ((/\
   ((? :((addr # val) list finmap -> bool) -> bool)
   (\(f :(addr # val) list finmap).
   (((= :(addr # val) list finmap -> (addr # val) list finmap -> bool)
   $2) $0)))) (((= :num -> num -> bool)
   ((LENGTH :(addr # val) list finmap ltree list -> num) $0)) 0))))))
   $0)))`),
 ((VARENVvef_arg_DEF),
  [],
  `((! :(varenv -> bool) -> bool) (\(ve :varenv).
   (((= :varenv -> varenv -> bool) (VARENVvef_arg (VARENVvef $0)))
   $0)))`),
 ((is_FAILvef_DEF),
  [],
  `((/\ (((= :bool -> bool -> bool) (is_FAILvef FAILvef)) T))
   ((! :(varenv -> bool) -> bool) (\(ve :varenv).
   (((= :bool -> bool -> bool) (is_FAILvef (VARENVvef $0))) F))))`),
 ((is_VARENVvef_DEF),
  [],
  `((/\ ((! :(varenv -> bool) -> bool) (\(ve :varenv).
   (((= :bool -> bool -> bool) (is_VARENVvef (VARENVvef $0))) T))))
   (((= :bool -> bool -> bool) (is_VARENVvef FAILvef)) F))`),
 ((FAILvef_DEF),
  [],
  `(((= :varenv_fail -> varenv_fail -> bool) FAILvef) (ABS_varenv_fail
   (((Node :varenv + one -> (varenv + one) ltree list ->
            (varenv + one) ltree) ((INR :one -> varenv + one) one))
   (NIL :(varenv + one) ltree list))))`),
 ((VARENVvef_DEF),
  [],
  `((! :(varenv -> bool) -> bool) (\(v' :varenv).
   (((= :varenv_fail -> varenv_fail -> bool) (VARENVvef $0))
   (ABS_varenv_fail
   (((Node :varenv + one -> (varenv + one) ltree list ->
            (varenv + one) ltree) ((INL :varenv -> varenv + one) $0))
   (NIL :(varenv + one) ltree list))))))`),
 ((varenv_fail_ISO_DEF),
  [],
  `((/\ ((! :(varenv_fail -> bool) -> bool) (\(a :varenv_fail).
   (((= :varenv_fail -> varenv_fail -> bool) (ABS_varenv_fail
   (REP_varenv_fail $0))) $0))))
   ((! :((varenv + one) ltree -> bool) -> bool)
   (\(r :(varenv + one) ltree). (((= :bool -> bool -> bool)
   (((TRP :(varenv + one -> (varenv + one) ltree list -> bool) ->
           (varenv + one) ltree -> bool) (\(v :varenv + one).
   (\(tl :(varenv + one) ltree list). ((\/ ((/\
   ((? :(varenv -> bool) -> bool) (\(v :varenv).
   (((= :varenv + one -> varenv + one -> bool) $2)
   ((INL :varenv -> varenv + one) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(varenv + one) ltree list -> num) $0)) 0))) ((/\
   (((= :varenv + one -> varenv + one -> bool) $1)
   ((INR :one -> varenv + one) one))) (((= :num -> num -> bool)
   ((LENGTH :(varenv + one) ltree list -> num) $0)) 0)))))) $0))
   (((= :(varenv + one) ltree -> (varenv + one) ltree -> bool)
   (REP_varenv_fail (ABS_varenv_fail $0))) $0)))))`),
 ((varenv_fail_TY_DEF),
  [],
  `((? :((varenv_fail -> (varenv + one) ltree) -> bool) -> bool)
   (\(rep :varenv_fail -> (varenv + one) ltree).
   (((TYPE_DEFINITION :((varenv + one) ltree -> bool) ->
                       (varenv_fail -> (varenv + one) ltree) -> bool)
   ((TRP :(varenv + one -> (varenv + one) ltree list -> bool) ->
          (varenv + one) ltree -> bool) (\(v :varenv + one).
   (\(tl :(varenv + one) ltree list). ((\/ ((/\
   ((? :(varenv -> bool) -> bool) (\(v :varenv).
   (((= :varenv + one -> varenv + one -> bool) $2)
   ((INL :varenv -> varenv + one) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(varenv + one) ltree list -> num) $0)) 0))) ((/\
   (((= :varenv + one -> varenv + one -> bool) $1)
   ((INR :one -> varenv + one) one))) (((= :num -> num -> bool)
   ((LENGTH :(varenv + one) ltree list -> num) $0)) 0))))))) $0)))`),
 ((PACKeep_arg_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(ee :pack).
   (((= :pack -> pack -> bool) (PACKeep_arg (PACKeep $0))) $0)))`),
 ((EXCONENVeep_arg_DEF),
  [],
  `((! :(exconenv -> bool) -> bool) (\(ee :exconenv).
   (((= :exconenv -> exconenv -> bool) (EXCONENVeep_arg (EXCONENVeep
   $0))) $0)))`),
 ((is_EXCONENVeep_DEF),
  [],
  `((/\ ((! :(exconenv -> bool) -> bool) (\(ee :exconenv).
   (((= :bool -> bool -> bool) (is_EXCONENVeep (EXCONENVeep $0)))
   T)))) ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :bool -> bool -> bool) (is_EXCONENVeep (PACKeep $0))) F))))`),
 ((PACKeep_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :exconenv_pack -> exconenv_pack -> bool) (PACKeep $0))
   (ABS_exconenv_pack
   (((Node :exconenv + pack -> (exconenv + pack) ltree list ->
            (exconenv + pack) ltree) ((INR :pack -> exconenv + pack)
   $0)) (NIL :(exconenv + pack) ltree list))))))`),
 ((EXCONENVeep_DEF),
  [],
  `((! :(exconenv -> bool) -> bool) (\(e :exconenv).
   (((= :exconenv_pack -> exconenv_pack -> bool) (EXCONENVeep $0))
   (ABS_exconenv_pack
   (((Node :exconenv + pack -> (exconenv + pack) ltree list ->
            (exconenv + pack) ltree)
   ((INL :exconenv -> exconenv + pack) $0))
   (NIL :(exconenv + pack) ltree list))))))`),
 ((exconenv_pack_ISO_DEF),
  [],
  `((/\ ((! :(exconenv_pack -> bool) -> bool) (\(a :exconenv_pack).
   (((= :exconenv_pack -> exconenv_pack -> bool) (ABS_exconenv_pack
   (REP_exconenv_pack $0))) $0))))
   ((! :((exconenv + pack) ltree -> bool) -> bool)
   (\(r :(exconenv + pack) ltree). (((= :bool -> bool -> bool)
   (((TRP :(exconenv + pack -> (exconenv + pack) ltree list ->
           bool) -> (exconenv + pack) ltree -> bool)
   (\(v :exconenv + pack). (\(tl :(exconenv + pack) ltree list). ((\/
   ((/\ ((? :(exconenv -> bool) -> bool) (\(e :exconenv).
   (((= :exconenv + pack -> exconenv + pack -> bool) $2)
   ((INL :exconenv -> exconenv + pack) $0)))))
   (((= :num -> num -> bool)
   ((LENGTH :(exconenv + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :exconenv + pack -> exconenv + pack -> bool) $2)
   ((INR :pack -> exconenv + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(exconenv + pack) ltree list -> num) $0)) 0)))))) $0))
   (((= :(exconenv + pack) ltree -> (exconenv + pack) ltree -> bool)
   (REP_exconenv_pack (ABS_exconenv_pack $0))) $0)))))`),
 ((exconenv_pack_TY_DEF),
  [],
  `((? :((exconenv_pack -> (exconenv + pack) ltree) -> bool) -> bool)
   (\(rep :exconenv_pack -> (exconenv + pack) ltree).
   (((TYPE_DEFINITION :((exconenv + pack) ltree -> bool) ->
                       (exconenv_pack -> (exconenv + pack) ltree) ->
                       bool)
   ((TRP :(exconenv + pack -> (exconenv + pack) ltree list -> bool) ->
          (exconenv + pack) ltree -> bool) (\(v :exconenv + pack).
   (\(tl :(exconenv + pack) ltree list). ((\/ ((/\
   ((? :(exconenv -> bool) -> bool) (\(e :exconenv).
   (((= :exconenv + pack -> exconenv + pack -> bool) $2)
   ((INL :exconenv -> exconenv + pack) $0)))))
   (((= :num -> num -> bool)
   ((LENGTH :(exconenv + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :exconenv + pack -> exconenv + pack -> bool) $2)
   ((INR :pack -> exconenv + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(exconenv + pack) ltree list -> num) $0)) 0)))))))
   $0)))`),
 ((PACKvep_arg_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(ve :pack).
   (((= :pack -> pack -> bool) (PACKvep_arg (PACKvep $0))) $0)))`),
 ((VARENVvep_arg_DEF),
  [],
  `((! :(varenv -> bool) -> bool) (\(ve :varenv).
   (((= :varenv -> varenv -> bool) (VARENVvep_arg (VARENVvep $0)))
   $0)))`),
 ((is_VARENVvep_DEF),
  [],
  `((/\ ((! :(varenv -> bool) -> bool) (\(ve :varenv).
   (((= :bool -> bool -> bool) (is_VARENVvep (VARENVvep $0))) T))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :bool -> bool -> bool) (is_VARENVvep (PACKvep $0))) F))))`),
 ((PACKvep_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :varenv_pack -> varenv_pack -> bool) (PACKvep $0))
   (ABS_varenv_pack
   (((Node :varenv + pack -> (varenv + pack) ltree list ->
            (varenv + pack) ltree) ((INR :pack -> varenv + pack) $0))
   (NIL :(varenv + pack) ltree list))))))`),
 ((VARENVvep_DEF),
  [],
  `((! :(varenv -> bool) -> bool) (\(v' :varenv).
   (((= :varenv_pack -> varenv_pack -> bool) (VARENVvep $0))
   (ABS_varenv_pack
   (((Node :varenv + pack -> (varenv + pack) ltree list ->
            (varenv + pack) ltree) ((INL :varenv -> varenv + pack)
   $0)) (NIL :(varenv + pack) ltree list))))))`),
 ((varenv_pack_ISO_DEF),
  [],
  `((/\ ((! :(varenv_pack -> bool) -> bool) (\(a :varenv_pack).
   (((= :varenv_pack -> varenv_pack -> bool) (ABS_varenv_pack
   (REP_varenv_pack $0))) $0))))
   ((! :((varenv + pack) ltree -> bool) -> bool)
   (\(r :(varenv + pack) ltree). (((= :bool -> bool -> bool)
   (((TRP :(varenv + pack -> (varenv + pack) ltree list -> bool) ->
           (varenv + pack) ltree -> bool) (\(v :varenv + pack).
   (\(tl :(varenv + pack) ltree list). ((\/ ((/\
   ((? :(varenv -> bool) -> bool) (\(v :varenv).
   (((= :varenv + pack -> varenv + pack -> bool) $2)
   ((INL :varenv -> varenv + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(varenv + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :varenv + pack -> varenv + pack -> bool) $2)
   ((INR :pack -> varenv + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(varenv + pack) ltree list -> num) $0)) 0)))))) $0))
   (((= :(varenv + pack) ltree -> (varenv + pack) ltree -> bool)
   (REP_varenv_pack (ABS_varenv_pack $0))) $0)))))`),
 ((varenv_pack_TY_DEF),
  [],
  `((? :((varenv_pack -> (varenv + pack) ltree) -> bool) -> bool)
   (\(rep :varenv_pack -> (varenv + pack) ltree).
   (((TYPE_DEFINITION :((varenv + pack) ltree -> bool) ->
                       (varenv_pack -> (varenv + pack) ltree) -> bool)
   ((TRP :(varenv + pack -> (varenv + pack) ltree list -> bool) ->
          (varenv + pack) ltree -> bool) (\(v :varenv + pack).
   (\(tl :(varenv + pack) ltree list). ((\/ ((/\
   ((? :(varenv -> bool) -> bool) (\(v :varenv).
   (((= :varenv + pack -> varenv + pack -> bool) $2)
   ((INL :varenv -> varenv + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(varenv + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :varenv + pack -> varenv + pack -> bool) $2)
   ((INR :pack -> varenv + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(varenv + pack) ltree list -> num) $0)) 0))))))) $0)))`),
 ((PACKep_arg_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :pack -> pack -> bool) (PACKep_arg (PACKep $0))) $0)))`),
 ((ENVep_arg_DEF),
  [],
  `((! :(env -> bool) -> bool) (\(e :env). (((= :env -> env -> bool)
   (ENVep_arg (ENVep $0))) $0)))`),
 ((is_ENVep_DEF),
  [],
  `((/\ ((! :(env -> bool) -> bool) (\(e :env).
   (((= :bool -> bool -> bool) (is_ENVep (ENVep $0))) T))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :bool -> bool -> bool) (is_ENVep (PACKep $0))) F))))`),
 ((PACKep_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :env_pack -> env_pack -> bool) (PACKep $0)) (ABS_env_pack
   (((Node :env + pack -> (env + pack) ltree list ->
            (env + pack) ltree) ((INR :pack -> env + pack) $0))
   (NIL :(env + pack) ltree list))))))`),
 ((ENVep_DEF),
  [],
  `((! :(env -> bool) -> bool) (\(e :env).
   (((= :env_pack -> env_pack -> bool) (ENVep $0)) (ABS_env_pack
   (((Node :env + pack -> (env + pack) ltree list ->
            (env + pack) ltree) ((INL :env -> env + pack) $0))
   (NIL :(env + pack) ltree list))))))`),
 ((env_pack_ISO_DEF),
  [],
  `((/\ ((! :(env_pack -> bool) -> bool) (\(a :env_pack).
   (((= :env_pack -> env_pack -> bool) (ABS_env_pack (REP_env_pack
   $0))) $0)))) ((! :((env + pack) ltree -> bool) -> bool)
   (\(r :(env + pack) ltree). (((= :bool -> bool -> bool)
   (((TRP :(env + pack -> (env + pack) ltree list -> bool) ->
           (env + pack) ltree -> bool) (\(v :env + pack).
   (\(tl :(env + pack) ltree list). ((\/ ((/\
   ((? :(env -> bool) -> bool) (\(e :env).
   (((= :env + pack -> env + pack -> bool) $2)
   ((INL :env -> env + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(env + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :env + pack -> env + pack -> bool) $2)
   ((INR :pack -> env + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(env + pack) ltree list -> num) $0)) 0)))))) $0))
   (((= :(env + pack) ltree -> (env + pack) ltree -> bool)
   (REP_env_pack (ABS_env_pack $0))) $0)))))`),
 ((env_pack_TY_DEF),
  [],
  `((? :((env_pack -> (env + pack) ltree) -> bool) -> bool)
   (\(rep :env_pack -> (env + pack) ltree).
   (((TYPE_DEFINITION :((env + pack) ltree -> bool) ->
                       (env_pack -> (env + pack) ltree) -> bool)
   ((TRP :(env + pack -> (env + pack) ltree list -> bool) ->
          (env + pack) ltree -> bool) (\(v :env + pack).
   (\(tl :(env + pack) ltree list). ((\/ ((/\
   ((? :(env -> bool) -> bool) (\(e :env).
   (((= :env + pack -> env + pack -> bool) $2)
   ((INL :env -> env + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(env + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :env + pack -> env + pack -> bool) $2)
   ((INR :pack -> env + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(env + pack) ltree list -> num) $0)) 0))))))) $0)))`),
 ((PACKvpf_arg_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :pack -> pack -> bool) (PACKvpf_arg (PACKvpf $0))) $0)))`),
 ((VALvpf_arg_DEF),
  [],
  `((! :(val -> bool) -> bool) (\(v :val). (((= :val -> val -> bool)
   (VALvpf_arg (VALvpf $0))) $0)))`),
 ((is_PACKvpf_DEF),
  [],
  `((/\ ((! :(val -> bool) -> bool) (\(v :val).
   (((= :bool -> bool -> bool) (is_PACKvpf (VALvpf $0))) F)))) ((/\
   ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :bool -> bool -> bool) (is_PACKvpf (PACKvpf $0))) T))))
   (((= :bool -> bool -> bool) (is_PACKvpf FAILvpf)) F)))`),
 ((is_VALvpf_DEF),
  [],
  `((/\ ((! :(val -> bool) -> bool) (\(v :val).
   (((= :bool -> bool -> bool) (is_VALvpf (VALvpf $0))) T)))) ((/\
   ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :bool -> bool -> bool) (is_VALvpf (PACKvpf $0))) F))))
   (((= :bool -> bool -> bool) (is_VALvpf FAILvpf)) F)))`),
 ((FAILvpf_DEF),
  [],
  `(((= :val_pack_fail -> val_pack_fail -> bool) FAILvpf)
   (ABS_val_pack_fail
   (((Node :val + pack + one -> (val + pack + one) ltree list ->
            (val + pack + one) ltree)
   ((INR :pack + one -> val + pack + one) ((INR :one -> pack + one)
   one))) (NIL :(val + pack + one) ltree list))))`),
 ((PACKvpf_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :val_pack_fail -> val_pack_fail -> bool) (PACKvpf $0))
   (ABS_val_pack_fail
   (((Node :val + pack + one -> (val + pack + one) ltree list ->
            (val + pack + one) ltree)
   ((INR :pack + one -> val + pack + one) ((INL :pack -> pack + one)
   $0))) (NIL :(val + pack + one) ltree list))))))`),
 ((VALvpf_DEF),
  [],
  `((! :(val -> bool) -> bool) (\(v' :val).
   (((= :val_pack_fail -> val_pack_fail -> bool) (VALvpf $0))
   (ABS_val_pack_fail
   (((Node :val + pack + one -> (val + pack + one) ltree list ->
            (val + pack + one) ltree) ((INL :val -> val + pack + one)
   $0)) (NIL :(val + pack + one) ltree list))))))`),
 ((val_pack_fail_ISO_DEF),
  [],
  `((/\ ((! :(val_pack_fail -> bool) -> bool) (\(a :val_pack_fail).
   (((= :val_pack_fail -> val_pack_fail -> bool) (ABS_val_pack_fail
   (REP_val_pack_fail $0))) $0))))
   ((! :((val + pack + one) ltree -> bool) -> bool)
   (\(r :(val + pack + one) ltree). (((= :bool -> bool -> bool)
   (((TRP :(val + pack + one -> (val + pack + one) ltree list ->
           bool) -> (val + pack + one) ltree -> bool)
   (\(v :val + pack + one). (\(tl :(val + pack + one) ltree list).
   ((\/ ((/\ ((? :(val -> bool) -> bool) (\(v :val).
   (((= :val + pack + one -> val + pack + one -> bool) $2)
   ((INL :val -> val + pack + one) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :val + pack + one -> val + pack + one -> bool) $2)
   ((INR :pack + one -> val + pack + one) ((INL :pack -> pack + one)
   $0)))))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack + one) ltree list -> num) $0)) 0))) ((/\
   (((= :val + pack + one -> val + pack + one -> bool) $1)
   ((INR :pack + one -> val + pack + one) ((INR :one -> pack + one)
   one)))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack + one) ltree list -> num) $0)) 0))))))) $0))
   (((= :(val + pack + one) ltree -> (val + pack + one) ltree -> bool)
   (REP_val_pack_fail (ABS_val_pack_fail $0))) $0)))))`),
 ((val_pack_fail_TY_DEF),
  [],
  `((? :((val_pack_fail -> (val + pack + one) ltree) -> bool) -> bool)
   (\(rep :val_pack_fail -> (val + pack + one) ltree).
   (((TYPE_DEFINITION :((val + pack + one) ltree -> bool) ->
                       (val_pack_fail -> (val + pack + one) ltree) ->
                       bool)
   ((TRP :(val + pack + one -> (val + pack + one) ltree list ->
          bool) -> (val + pack + one) ltree -> bool)
   (\(v :val + pack + one). (\(tl :(val + pack + one) ltree list).
   ((\/ ((/\ ((? :(val -> bool) -> bool) (\(v :val).
   (((= :val + pack + one -> val + pack + one -> bool) $2)
   ((INL :val -> val + pack + one) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :val + pack + one -> val + pack + one -> bool) $2)
   ((INR :pack + one -> val + pack + one) ((INL :pack -> pack + one)
   $0)))))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack + one) ltree list -> num) $0)) 0))) ((/\
   (((= :val + pack + one -> val + pack + one -> bool) $1)
   ((INR :pack + one -> val + pack + one) ((INR :one -> pack + one)
   one)))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack + one) ltree list -> num) $0)) 0))))))))
   $0)))`),
 ((PACKrp_arg_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :pack -> pack -> bool) (PACKrp_arg (PACKrp $0))) $0)))`),
 ((RECORDrp_arg_DEF),
  [],
  `((! :(record -> bool) -> bool) (\(r :record).
   (((= :record -> record -> bool) (RECORDrp_arg (RECORDrp $0)))
   $0)))`),
 ((is_RECORDrp_DEF),
  [],
  `((/\ ((! :(record -> bool) -> bool) (\(r :record).
   (((= :bool -> bool -> bool) (is_RECORDrp (RECORDrp $0))) T))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :bool -> bool -> bool) (is_RECORDrp (PACKrp $0))) F))))`),
 ((PACKrp_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :record_pack -> record_pack -> bool) (PACKrp $0))
   (ABS_record_pack
   (((Node :record + pack -> (record + pack) ltree list ->
            (record + pack) ltree) ((INR :pack -> record + pack) $0))
   (NIL :(record + pack) ltree list))))))`),
 ((RECORDrp_DEF),
  [],
  `((! :(record -> bool) -> bool) (\(r :record).
   (((= :record_pack -> record_pack -> bool) (RECORDrp $0))
   (ABS_record_pack
   (((Node :record + pack -> (record + pack) ltree list ->
            (record + pack) ltree) ((INL :record -> record + pack)
   $0)) (NIL :(record + pack) ltree list))))))`),
 ((record_pack_ISO_DEF),
  [],
  `((/\ ((! :(record_pack -> bool) -> bool) (\(a :record_pack).
   (((= :record_pack -> record_pack -> bool) (ABS_record_pack
   (REP_record_pack $0))) $0))))
   ((! :((record + pack) ltree -> bool) -> bool)
   (\(r :(record + pack) ltree). (((= :bool -> bool -> bool)
   (((TRP :(record + pack -> (record + pack) ltree list -> bool) ->
           (record + pack) ltree -> bool) (\(v :record + pack).
   (\(tl :(record + pack) ltree list). ((\/ ((/\
   ((? :(record -> bool) -> bool) (\(r :record).
   (((= :record + pack -> record + pack -> bool) $2)
   ((INL :record -> record + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(record + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :record + pack -> record + pack -> bool) $2)
   ((INR :pack -> record + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(record + pack) ltree list -> num) $0)) 0)))))) $0))
   (((= :(record + pack) ltree -> (record + pack) ltree -> bool)
   (REP_record_pack (ABS_record_pack $0))) $0)))))`),
 ((record_pack_TY_DEF),
  [],
  `((? :((record_pack -> (record + pack) ltree) -> bool) -> bool)
   (\(rep :record_pack -> (record + pack) ltree).
   (((TYPE_DEFINITION :((record + pack) ltree -> bool) ->
                       (record_pack -> (record + pack) ltree) -> bool)
   ((TRP :(record + pack -> (record + pack) ltree list -> bool) ->
          (record + pack) ltree -> bool) (\(v :record + pack).
   (\(tl :(record + pack) ltree list). ((\/ ((/\
   ((? :(record -> bool) -> bool) (\(r :record).
   (((= :record + pack -> record + pack -> bool) $2)
   ((INL :record -> record + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(record + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :record + pack -> record + pack -> bool) $2)
   ((INR :pack -> record + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(record + pack) ltree list -> num) $0)) 0))))))) $0)))`),
 ((PACKvp_arg_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(v :pack).
   (((= :pack -> pack -> bool) (PACKvp_arg (PACKvp $0))) $0)))`),
 ((VALvp_arg_DEF),
  [],
  `((! :(val -> bool) -> bool) (\(v :val). (((= :val -> val -> bool)
   (VALvp_arg (VALvp $0))) $0)))`),
 ((is_PACKvp_DEF),
  [],
  `((/\ ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :bool -> bool -> bool) (is_PACKvp (PACKvp $0))) T))))
   ((! :(val -> bool) -> bool) (\(v :val). (((= :bool -> bool -> bool)
   (is_PACKvp (VALvp $0))) F))))`),
 ((is_VALvp_DEF),
  [],
  `((/\ ((! :(val -> bool) -> bool) (\(v :val).
   (((= :bool -> bool -> bool) (is_VALvp (VALvp $0))) T))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :bool -> bool -> bool) (is_VALvp (PACKvp $0))) F))))`),
 ((PACKvp_DEF),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :val_pack -> val_pack -> bool) (PACKvp $0)) (ABS_val_pack
   (((Node :val + pack -> (val + pack) ltree list ->
            (val + pack) ltree) ((INR :pack -> val + pack) $0))
   (NIL :(val + pack) ltree list))))))`),
 ((VALvp_DEF),
  [],
  `((! :(val -> bool) -> bool) (\(v' :val).
   (((= :val_pack -> val_pack -> bool) (VALvp $0)) (ABS_val_pack
   (((Node :val + pack -> (val + pack) ltree list ->
            (val + pack) ltree) ((INL :val -> val + pack) $0))
   (NIL :(val + pack) ltree list))))))`),
 ((val_pack_ISO_DEF),
  [],
  `((/\ ((! :(val_pack -> bool) -> bool) (\(a :val_pack).
   (((= :val_pack -> val_pack -> bool) (ABS_val_pack (REP_val_pack
   $0))) $0)))) ((! :((val + pack) ltree -> bool) -> bool)
   (\(r :(val + pack) ltree). (((= :bool -> bool -> bool)
   (((TRP :(val + pack -> (val + pack) ltree list -> bool) ->
           (val + pack) ltree -> bool) (\(v :val + pack).
   (\(tl :(val + pack) ltree list). ((\/ ((/\
   ((? :(val -> bool) -> bool) (\(v :val).
   (((= :val + pack -> val + pack -> bool) $2)
   ((INL :val -> val + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :val + pack -> val + pack -> bool) $2)
   ((INR :pack -> val + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack) ltree list -> num) $0)) 0)))))) $0))
   (((= :(val + pack) ltree -> (val + pack) ltree -> bool)
   (REP_val_pack (ABS_val_pack $0))) $0)))))`),
 ((val_pack_TY_DEF),
  [],
  `((? :((val_pack -> (val + pack) ltree) -> bool) -> bool)
   (\(rep :val_pack -> (val + pack) ltree).
   (((TYPE_DEFINITION :((val + pack) ltree -> bool) ->
                       (val_pack -> (val + pack) ltree) -> bool)
   ((TRP :(val + pack -> (val + pack) ltree list -> bool) ->
          (val + pack) ltree -> bool) (\(v :val + pack).
   (\(tl :(val + pack) ltree list). ((\/ ((/\
   ((? :(val -> bool) -> bool) (\(v :val).
   (((= :val + pack -> val + pack -> bool) $2)
   ((INL :val -> val + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack) ltree list -> num) $0)) 0))) ((/\
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :val + pack -> val + pack -> bool) $2)
   ((INR :pack -> val + pack) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(val + pack) ltree list -> num) $0)) 0))))))) $0)))`),
 ((PACK_arg_DEF),
  [],
  `((! :(exval -> bool) -> bool) (\(ev :exval).
   (((= :exval -> exval -> bool) (PACK_arg (PACK $0))) $0)))`),
 ((PACK_DEF),
  [],
  `((! :(exval -> bool) -> bool) (\(e :exval).
   (((= :pack -> pack -> bool) (PACK $0)) (ABS_pack
   (((Node :exval -> exval ltree list -> exval ltree) $0)
   (NIL :exval ltree list))))))`),
 ((pack_ISO_DEF),
  [],
  `((/\ ((! :(pack -> bool) -> bool) (\(a :pack).
   (((= :pack -> pack -> bool) (ABS_pack (REP_pack $0))) $0))))
   ((! :(exval ltree -> bool) -> bool) (\(r :exval ltree).
   (((= :bool -> bool -> bool)
   (((TRP :(exval -> exval ltree list -> bool) -> exval ltree -> bool)
   (\(v :exval). (\(tl :exval ltree list). ((/\
   ((? :(exval -> bool) -> bool) (\(e :exval).
   (((= :exval -> exval -> bool) $2) $0)))) (((= :num -> num -> bool)
   ((LENGTH :exval ltree list -> num) $0)) 0))))) $0))
   (((= :exval ltree -> exval ltree -> bool) (REP_pack (ABS_pack $0)))
   $0)))))`),
 ((pack_TY_DEF),
  [],
  `((? :((pack -> exval ltree) -> bool) -> bool)
   (\(rep :pack -> exval ltree).
   (((TYPE_DEFINITION :(exval ltree -> bool) ->
                       (pack -> exval ltree) -> bool)
   ((TRP :(exval -> exval ltree list -> bool) -> exval ltree -> bool)
   (\(v :exval). (\(tl :exval ltree list). ((/\
   ((? :(exval -> bool) -> bool) (\(e :exval).
   (((= :exval -> exval -> bool) $2) $0)))) (((= :num -> num -> bool)
   ((LENGTH :exval ltree list -> num) $0)) 0)))))) $0)))`),
 ((cut_varenv_DEF),
  [],
  `((! :((var # val) list finmap -> bool) -> bool)
   (\(x1 :(var # val) list finmap).
   (((= :(var set -> varenv) -> (var set -> varenv) -> bool)
   (cut_varenv (VARENV $0))) (\(vars :var set). (VARENV
   (((restrict_finmap :(var # val) list finmap -> var set ->
                       (var # val) list finmap) $1) $0))))))`),
 ((vars_from_varenv_DEF),
  [],
  `((! :((var # val) list finmap -> bool) -> bool)
   (\(x1 :(var # val) list finmap). (((= :var set -> var set -> bool)
   (vars_from_varenv (VARENV $0)))
   ((finmap_dom :(var # val) list finmap -> var set) $0))))`),
 ((rec_varenv_DEF),
  [],
  `((! :(varenv -> bool) -> bool) (\(VE :varenv).
   (((= :varenv -> varenv -> bool) (rec_varenv $0)) (VARENV
   ((FINMAP :(var # val) list -> (var # val) list finmap) ((rec_helper
   ((FINMAP_arg :(var # val) list finmap -> (var # val) list)
   (VARENV_arg $0))) $0))))))`),
 ((rec_helper_DEF),
  [],
  `((/\ ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   (((= :(var # val) list -> (var # val) list -> bool) ((rec_helper
   (NIL :(var # val) list)) $0)) (NIL :(var # val) list)))))
   ((! :(var # val -> bool) -> bool) (\(h :var # val).
   ((! :((var # val) list -> bool) -> bool) (\(t :(var # val) list).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   (((= :(var # val) list -> (var # val) list -> bool) ((rec_helper
   (((CONS :var # val -> (var # val) list -> (var # val) list) $2)
   $1)) $0))
   ((((COND :bool -> (var # val) list -> (var # val) list ->
             (var # val) list) (is_CLOSUREval ((SND :var # val -> val)
   $2))) (((CONS :var # val -> (var # val) list -> (var # val) list)
   (((, :var -> val -> var # val) ((FST :var # val -> var) $2))
   (CLOSUREval (((CLOSURE (CLOSURE_arg1 (CLOSUREval_arg
   ((SND :var # val -> val) $2)))) (CLOSURE_arg2 (CLOSUREval_arg
   ((SND :var # val -> val) $2)))) $0)))) ((rec_helper $1) $0)))
   (((CONS :var # val -> (var # val) list -> (var # val) list) $2)
   ((rec_helper $1) $0)))))))))))`),
 ((add_nonemptylist_env_DEF),
  [],
  `((/\ ((! :(env -> bool) -> bool) (\(E :env).
   (((= :env -> env -> bool) (add_nonemptylist_env
   ((ONE :env -> env nonemptylist) $0))) $0))))
   ((! :(env nonemptylist -> bool) -> bool) (\(Es :env nonemptylist).
   ((! :(env -> bool) -> bool) (\(E :env). (((= :env -> env -> bool)
   (add_nonemptylist_env
   (((MORE :env -> env nonemptylist -> env nonemptylist) $0) $1)))
   ((add_env $0) (add_nonemptylist_env $1))))))))`),
 ((add_env_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :(env -> env) -> (env -> env) -> bool) (add_env (((ENV $2) $1)
   $0))) (\(e :env). (((ENV ((add_strenv $3) (ENV_arg1 $0)))
   ((add_varenv $2) (ENV_arg2 $0))) ((add_exconenv $1) (ENV_arg3
   $0)))))))))))`),
 ((add_strenv_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(SE1 :strenv).
   ((! :(strenv -> bool) -> bool) (\(SE2 :strenv).
   (((= :strenv -> strenv -> bool) ((add_strenv $1) $0)) (STRENV
   ((((finmap_modify :(strid -> strid -> bool) ->
                      (strid # env) list finmap ->
                      (strid # env) list finmap ->
                      (strid # env) list finmap) less_strid)
   (STRENV_arg $1)) (STRENV_arg $0))))))))`),
 ((insert_into_strenv_DEF),
  [],
  `((! :((strid # env) list finmap -> bool) -> bool)
   (\(x1 :(strid # env) list finmap).
   (((= :(strid -> env -> strenv) -> (strid -> env -> strenv) -> bool)
   (insert_into_strenv (STRENV $0))) (\(strid :strid). (\(env :env).
   (STRENV
   (((((finmap_insert :(strid -> strid -> bool) -> strid -> env ->
                       (strid # env) list finmap ->
                       (strid # env) list finmap) less_strid) $1) $0)
   $2)))))))`),
 ((empty_strenv_DEF),
  [],
  `(((= :strenv -> strenv -> bool) empty_strenv) (STRENV
   (empty_finmap :(strid # env) list finmap)))`),
 ((add_varenv_DEF),
  [],
  `((! :(varenv -> bool) -> bool) (\(VE1 :varenv).
   ((! :(varenv -> bool) -> bool) (\(VE2 :varenv).
   (((= :varenv -> varenv -> bool) ((add_varenv $1) $0)) (VARENV
   ((((finmap_modify :(var -> var -> bool) ->
                      (var # val) list finmap ->
                      (var # val) list finmap ->
                      (var # val) list finmap) less_var) (VARENV_arg
   $1)) (VARENV_arg $0))))))))`),
 ((insert_into_varenv_DEF),
  [],
  `((! :((var # val) list finmap -> bool) -> bool)
   (\(x1 :(var # val) list finmap).
   (((= :(var -> val -> varenv) -> (var -> val -> varenv) -> bool)
   (insert_into_varenv (VARENV $0))) (\(var :var). (\(val :val).
   (VARENV
   (((((finmap_insert :(var -> var -> bool) -> var -> val ->
                       (var # val) list finmap ->
                       (var # val) list finmap) less_var) $1) $0)
   $2)))))))`),
 ((empty_varenv_DEF),
  [],
  `(((= :varenv -> varenv -> bool) empty_varenv) (VARENV
   (empty_finmap :(var # val) list finmap)))`),
 ((lookuplongexcon_env_DEF),
  [],
  `((/\ ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(excon -> bool) -> bool) (\(ex :excon).
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $1)
   ((BASE :excon -> excon long) $0))) ((lookupexcon_exconenv (ENV_arg3
   $1)) $0))))))) ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(excon long -> bool) -> bool) (\(lex :excon long).
   ((! :(strid -> bool) -> bool) (\(strid :strid).
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $2)
   (((QUALIFIED :strid -> excon long -> excon long) $0) $1)))
   ((((COND :bool -> exname lift -> exname lift -> exname lift)
   (((= :env lift -> env lift -> bool) ((lookupstrid_strenv (ENV_arg1
   $2)) $0)) (undefined :env lift))) (undefined :exname lift))
   ((lookuplongexcon_env ((lower :env lift -> env)
   ((lookupstrid_strenv (ENV_arg1 $2)) $0))) $1))))))))))`),
 ((lookuplongvar_env_DEF),
  [],
  `((/\ ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(var -> bool) -> bool) (\(v :var).
   (((= :val lift -> val lift -> bool) ((lookuplongvar_env $1)
   ((BASE :var -> var long) $0))) ((lookupvar_varenv (ENV_arg2 $1))
   $0))))))) ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(var long -> bool) -> bool) (\(lv :var long).
   ((! :(strid -> bool) -> bool) (\(strid :strid).
   (((= :val lift -> val lift -> bool) ((lookuplongvar_env $2)
   (((QUALIFIED :strid -> var long -> var long) $0) $1)))
   ((((COND :bool -> val lift -> val lift -> val lift)
   (((= :env lift -> env lift -> bool) ((lookupstrid_strenv (ENV_arg1
   $2)) $0)) (undefined :env lift))) (undefined :val lift))
   ((lookuplongvar_env ((lower :env lift -> env) ((lookupstrid_strenv
   (ENV_arg1 $2)) $0))) $1))))))))))`),
 ((lookupexcon_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :(excon -> exname lift) -> (excon -> exname lift) -> bool)
   (lookupexcon_env (((ENV $2) $1) $0))) (lookupexcon_exconenv
   $0))))))))`),
 ((lookupvar_DEF),
  [],
  `((/\ ((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :(var -> val lift) -> (var -> val lift) -> bool)
   (lookupvar_env (((ENV $2) $1) $0))) (lookupvar_varenv $1)))))))))
   ((! :((var # val) list finmap -> bool) -> bool)
   (\(x1 :(var # val) list finmap).
   (((= :(var -> val lift) -> (var -> val lift) -> bool)
   (lookupvar_varenv (VARENV $0))) (\(v :var).
   (((finmap_lookup :var -> (var # val) list finmap -> val lift) $0)
   $1))))))`),
 ((lookuplongstrid_env_DEF),
  [],
  `((/\ ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(strid -> bool) -> bool) (\(s :strid).
   (((= :env lift -> env lift -> bool) ((lookuplongstrid_env $1)
   ((BASE :strid -> strid long) $0))) ((lookupstrid_strenv (ENV_arg1
   $1)) $0))))))) ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(strid long -> bool) -> bool) (\(ls :strid long).
   ((! :(strid -> bool) -> bool) (\(strid :strid).
   (((= :env lift -> env lift -> bool) ((lookuplongstrid_env $2)
   (((QUALIFIED :strid -> strid long -> strid long) $0) $1)))
   ((((COND :bool -> env lift -> env lift -> env lift)
   (((= :env lift -> env lift -> bool) ((lookupstrid_strenv (ENV_arg1
   $2)) $0)) (undefined :env lift))) (undefined :env lift))
   ((lookuplongstrid_env ((lower :env lift -> env)
   ((lookupstrid_strenv (ENV_arg1 $2)) $0))) $1))))))))))`),
 ((lookupstrid_DEF),
  [],
  `((/\ ((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :(strid -> env lift) -> (strid -> env lift) -> bool)
   (lookupstrid_env (((ENV $2) $1) $0))) (lookupstrid_strenv
   $2))))))))) ((! :((strid # env) list finmap -> bool) -> bool)
   (\(x1 :(strid # env) list finmap).
   (((= :(strid -> env lift) -> (strid -> env lift) -> bool)
   (lookupstrid_strenv (STRENV $0))) (\(strid :strid).
   (((finmap_lookup :strid -> (strid # env) list finmap -> env lift)
   $0) $1))))))`),
 ((strfield2_DEF),
  [],
  `((! :(val -> bool) -> bool) (\(v :val).
   (((= :string -> string -> bool) (strfield2 $0)) (SVSTR_arg
   (SVALval_arg (field2_val $0))))))`),
 ((strfield1_DEF),
  [],
  `((! :(val -> bool) -> bool) (\(v :val).
   (((= :string -> string -> bool) (strfield1 $0)) (SVSTR_arg
   (SVALval_arg (field1_val $0))))))`),
 ((intfield2_DEF),
  [],
  `((! :(val -> bool) -> bool) (\(v :val).
   (((= :integer -> integer -> bool) (intfield2 $0)) (SVINT_arg
   (SVALval_arg (field2_val $0))))))`),
 ((intfield1_DEF),
  [],
  `((! :(val -> bool) -> bool) (\(v :val).
   (((= :integer -> integer -> bool) (intfield1 $0)) (SVINT_arg
   (SVALval_arg (field1_val $0))))))`),
 ((field2_val_DEF),
  [],
  `((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :val -> val -> bool) (field2_val (RECORDval $0)))
   ((lower :val lift -> val) ((lookup_label $0) (LABEL "2"))))))) ((/\
   (((= :val -> val -> bool) (field2_val ASSGval))
   ((@ :(val -> bool) -> val) (\(x :val). T)))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :val -> val -> bool) (field2_val (SVALval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :val -> val -> bool) (field2_val (BASval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con). (((= :val -> val -> bool)
   (field2_val (CONval $0))) ((@ :(val -> bool) -> val) (\(x :val).
   T)))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :val -> val -> bool)
   (field2_val ((APPCONval $1) $0))) ((@ :(val -> bool) -> val)
   (\(x :val). T)))))))) ((/\ ((! :(exval -> bool) -> bool)
   (\(x1 :exval). (((= :val -> val -> bool) (field2_val (EXVALval
   $0))) ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :val -> val -> bool) (field2_val (ADDRval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :val -> val -> bool) (field2_val (CLOSUREval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))))))))))`),
 ((field1_val_DEF),
  [],
  `((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :val -> val -> bool) (field1_val (RECORDval $0)))
   ((lower :val lift -> val) ((lookup_label $0) (LABEL "1"))))))) ((/\
   (((= :val -> val -> bool) (field1_val ASSGval))
   ((@ :(val -> bool) -> val) (\(x :val). T)))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :val -> val -> bool) (field1_val (SVALval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :val -> val -> bool) (field1_val (BASval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con). (((= :val -> val -> bool)
   (field1_val (CONval $0))) ((@ :(val -> bool) -> val) (\(x :val).
   T)))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :val -> val -> bool)
   (field1_val ((APPCONval $1) $0))) ((@ :(val -> bool) -> val)
   (\(x :val). T)))))))) ((/\ ((! :(exval -> bool) -> bool)
   (\(x1 :exval). (((= :val -> val -> bool) (field1_val (EXVALval
   $0))) ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :val -> val -> bool) (field1_val (ADDRval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :val -> val -> bool) (field1_val (CLOSUREval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))))))))))`),
 ((add_record_DEF),
  [],
  `((! :(record -> bool) -> bool) (\(rec1 :record).
   ((! :(record -> bool) -> bool) (\(rec2 :record).
   (((= :record -> record -> bool) ((add_record $1) $0)) (RECORD
   ((((finmap_modify :(label -> label -> bool) ->
                      (label # val) list finmap ->
                      (label # val) list finmap ->
                      (label # val) list finmap) less_label)
   (RECORD_arg $1)) (RECORD_arg $0))))))))`),
 ((insert_into_record_DEF),
  [],
  `((! :((label # val) list finmap -> bool) -> bool)
   (\(x1 :(label # val) list finmap).
   (((= :(label -> val -> record) -> (label -> val -> record) -> bool)
   (insert_into_record (RECORD $0))) (\(l :label). (\(v :val). (RECORD
   (((((finmap_insert :(label -> label -> bool) -> label -> val ->
                       (label # val) list finmap ->
                       (label # val) list finmap) less_label) $1) $0)
   $2)))))))`),
 ((empty_record_DEF),
  [],
  `(((= :record -> record -> bool) empty_record) (RECORD
   (empty_finmap :(label # val) list finmap)))`),
 ((lookup_label_DEF),
  [],
  `((! :((label # val) list finmap -> bool) -> bool)
   (\(x1 :(label # val) list finmap).
   (((= :(label -> val lift) -> (label -> val lift) -> bool)
   (lookup_label (RECORD $0))) (\(l :label).
   (((finmap_lookup :label -> (label # val) list finmap -> val lift)
   $0) $1)))))`),
 ((label_in_rec_DEF),
  [],
  `((! :((label # val) list finmap -> bool) -> bool)
   (\(x1 :(label # val) list finmap).
   (((= :(label -> bool) -> (label -> bool) -> bool) (label_in_rec
   (RECORD $0))) (\(l :label).
   (((in_dom :(label # val) list finmap -> label -> bool) $1)
   $0)))))`),
 ((STRENV_arg_DEF),
  [],
  `((! :((strid # env) list finmap -> bool) -> bool)
   (\(x1 :(strid # env) list finmap).
   (((= :(strid # env) list finmap -> (strid # env) list finmap ->
         bool) (STRENV_arg (STRENV $0))) $0)))`),
 ((CLOSUREval_arg_DEF),
  [],
  `((/\ ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :closure -> closure -> bool) (CLOSUREval_arg (CLOSUREval $0)))
   $0)))) ((/\ (((= :closure -> closure -> bool) (CLOSUREval_arg
   ASSGval)) ((@ :(closure -> bool) -> closure) (\(x :closure). T))))
   ((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :closure -> closure -> bool) (CLOSUREval_arg (SVALval $0)))
   ((@ :(closure -> bool) -> closure) (\(x :closure). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :closure -> closure -> bool) (CLOSUREval_arg (BASval $0)))
   ((@ :(closure -> bool) -> closure) (\(x :closure). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :closure -> closure -> bool) (CLOSUREval_arg (CONval $0)))
   ((@ :(closure -> bool) -> closure) (\(x :closure). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :closure -> closure -> bool) (CLOSUREval_arg ((APPCONval $1)
   $0))) ((@ :(closure -> bool) -> closure) (\(x :closure). T))))))))
   ((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :closure -> closure -> bool) (CLOSUREval_arg (EXVALval $0)))
   ((@ :(closure -> bool) -> closure) (\(x :closure). T)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :closure -> closure -> bool) (CLOSUREval_arg (RECORDval $0)))
   ((@ :(closure -> bool) -> closure) (\(x :closure). T))))))
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :closure -> closure -> bool) (CLOSUREval_arg (ADDRval $0)))
   ((@ :(closure -> bool) -> closure) (\(x :closure).
   T)))))))))))))`),
 ((CLOSURE_arg3_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :varenv -> varenv -> bool) (CLOSURE_arg3 (((CLOSURE $2) $1)
   $0))) $0)))))))`),
 ((CLOSURE_arg2_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :env -> env -> bool) (CLOSURE_arg2 (((CLOSURE $2) $1) $0)))
   $1)))))))`),
 ((CLOSURE_arg1_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :match -> match -> bool) (CLOSURE_arg1 (((CLOSURE $2) $1)
   $0))) $2)))))))`),
 ((VARENV_arg_DEF),
  [],
  `((! :((var # val) list finmap -> bool) -> bool)
   (\(x1 :(var # val) list finmap).
   (((= :(var # val) list finmap -> (var # val) list finmap -> bool)
   (VARENV_arg (VARENV $0))) $0)))`),
 ((ENV_arg3_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :exconenv -> exconenv -> bool) (ENV_arg3 (((ENV $2) $1) $0)))
   $0)))))))`),
 ((ENV_arg2_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :varenv -> varenv -> bool) (ENV_arg2 (((ENV $2) $1) $0)))
   $1)))))))`),
 ((ENV_arg1_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :strenv -> strenv -> bool) (ENV_arg1 (((ENV $2) $1) $0)))
   $2)))))))`),
 ((SVALval_arg_DEF),
  [],
  `((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :sval -> sval -> bool) (SVALval_arg (SVALval $0))) $0)))) ((/\
   (((= :sval -> sval -> bool) (SVALval_arg ASSGval))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :sval -> sval -> bool) (SVALval_arg (BASval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :sval -> sval -> bool) (SVALval_arg (CONval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :sval -> sval -> bool) (SVALval_arg ((APPCONval $1) $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :sval -> sval -> bool) (SVALval_arg (EXVALval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :sval -> sval -> bool) (SVALval_arg (RECORDval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :sval -> sval -> bool) (SVALval_arg (ADDRval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :sval -> sval -> bool) (SVALval_arg (CLOSUREval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))))))))))`),
 ((RECORD_arg_DEF),
  [],
  `((! :((label # val) list finmap -> bool) -> bool)
   (\(x1 :(label # val) list finmap).
   (((= :(label # val) list finmap -> (label # val) list finmap ->
         bool) (RECORD_arg (RECORD $0))) $0)))`),
 ((is_NAMEVALexval_DEF),
  [],
  `((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname). (~
   (is_NAMEVALexval (NAMEexval $0)))))) ((! :(exname -> bool) -> bool)
   (\(x1 :exname). ((! :(val -> bool) -> bool) (\(x2 :val).
   (is_NAMEVALexval ((NAMEVALexval $1) $0)))))))`),
 ((is_NAMEexval_DEF),
  [],
  `((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname). (is_NAMEexval
   (NAMEexval $0))))) ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(val -> bool) -> bool) (\(x2 :val). (~ (is_NAMEexval
   ((NAMEVALexval $1) $0))))))))`),
 ((is_CLOSUREval_DEF),
  [],
  `((/\ ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (is_CLOSUREval (CLOSUREval $0))))) ((/\ (~ (is_CLOSUREval
   ASSGval))) ((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval). (~
   (is_CLOSUREval (SVALval $0)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval). (~ (is_CLOSUREval
   (BASval $0)))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con). (~
   (is_CLOSUREval (CONval $0)))))) ((/\ ((! :(con -> bool) -> bool)
   (\(x1 :con). ((! :(val -> bool) -> bool) (\(x2 :val). (~
   (is_CLOSUREval ((APPCONval $1) $0)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval). (~ (is_CLOSUREval
   (EXVALval $0)))))) ((/\ ((! :(record -> bool) -> bool)
   (\(x1 :record). (~ (is_CLOSUREval (RECORDval $0))))))
   ((! :(addr -> bool) -> bool) (\(x1 :addr). (~ (is_CLOSUREval
   (ADDRval $0)))))))))))))`),
 ((is_ADDRval_DEF),
  [],
  `((/\ ((! :(addr -> bool) -> bool) (\(x1 :addr). (is_ADDRval
   (ADDRval $0))))) ((/\ (~ (is_ADDRval ASSGval))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval). (~ (is_ADDRval (SVALval
   $0)))))) ((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval). (~
   (is_ADDRval (BASval $0)))))) ((/\ ((! :(con -> bool) -> bool)
   (\(x1 :con). (~ (is_ADDRval (CONval $0)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (~ (is_ADDRval ((APPCONval
   $1) $0)))))))) ((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval). (~
   (is_ADDRval (EXVALval $0)))))) ((/\ ((! :(record -> bool) -> bool)
   (\(x1 :record). (~ (is_ADDRval (RECORDval $0))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure). (~ (is_ADDRval
   (CLOSUREval $0)))))))))))))`),
 ((is_RECORDval_DEF),
  [],
  `((/\ ((! :(record -> bool) -> bool) (\(x1 :record). (is_RECORDval
   (RECORDval $0))))) ((/\ (~ (is_RECORDval ASSGval))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval). (~ (is_RECORDval
   (SVALval $0)))))) ((/\ ((! :(basval -> bool) -> bool)
   (\(x1 :basval). (~ (is_RECORDval (BASval $0)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con). (~ (is_RECORDval (CONval
   $0)))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (~ (is_RECORDval
   ((APPCONval $1) $0)))))))) ((/\ ((! :(exval -> bool) -> bool)
   (\(x1 :exval). (~ (is_RECORDval (EXVALval $0)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr). (~ (is_RECORDval
   (ADDRval $0)))))) ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (~ (is_RECORDval (CLOSUREval $0)))))))))))))`),
 ((is_EXVALval_DEF),
  [],
  `((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval). (is_EXVALval
   (EXVALval $0))))) ((/\ (~ (is_EXVALval ASSGval))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval). (~ (is_EXVALval (SVALval
   $0)))))) ((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval). (~
   (is_EXVALval (BASval $0)))))) ((/\ ((! :(con -> bool) -> bool)
   (\(x1 :con). (~ (is_EXVALval (CONval $0)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (~ (is_EXVALval
   ((APPCONval $1) $0)))))))) ((/\ ((! :(record -> bool) -> bool)
   (\(x1 :record). (~ (is_EXVALval (RECORDval $0)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr). (~ (is_EXVALval (ADDRval
   $0)))))) ((! :(closure -> bool) -> bool) (\(x1 :closure). (~
   (is_EXVALval (CLOSUREval $0)))))))))))))`),
 ((is_APPCONval_DEF),
  [],
  `((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (is_APPCONval ((APPCONval
   $1) $0))))))) ((/\ (~ (is_APPCONval ASSGval))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval). (~ (is_APPCONval
   (SVALval $0)))))) ((/\ ((! :(basval -> bool) -> bool)
   (\(x1 :basval). (~ (is_APPCONval (BASval $0)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con). (~ (is_APPCONval (CONval
   $0)))))) ((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval). (~
   (is_APPCONval (EXVALval $0)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record). (~ (is_APPCONval
   (RECORDval $0)))))) ((/\ ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (~ (is_APPCONval (ADDRval $0)))))) ((! :(closure -> bool) -> bool)
   (\(x1 :closure). (~ (is_APPCONval (CLOSUREval $0)))))))))))))`),
 ((is_CONval_DEF),
  [],
  `((/\ ((! :(con -> bool) -> bool) (\(x1 :con). (is_CONval (CONval
   $0))))) ((/\ (~ (is_CONval ASSGval))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval). (~ (is_CONval (SVALval
   $0)))))) ((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval). (~
   (is_CONval (BASval $0)))))) ((/\ ((! :(con -> bool) -> bool)
   (\(x1 :con). ((! :(val -> bool) -> bool) (\(x2 :val). (~ (is_CONval
   ((APPCONval $1) $0)))))))) ((/\ ((! :(exval -> bool) -> bool)
   (\(x1 :exval). (~ (is_CONval (EXVALval $0)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record). (~ (is_CONval
   (RECORDval $0)))))) ((/\ ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (~ (is_CONval (ADDRval $0)))))) ((! :(closure -> bool) -> bool)
   (\(x1 :closure). (~ (is_CONval (CLOSUREval $0)))))))))))))`),
 ((is_BASval_DEF),
  [],
  `((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval). (is_BASval
   (BASval $0))))) ((/\ (~ (is_BASval ASSGval))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval). (~ (is_BASval (SVALval
   $0)))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con). (~
   (is_BASval (CONval $0)))))) ((/\ ((! :(con -> bool) -> bool)
   (\(x1 :con). ((! :(val -> bool) -> bool) (\(x2 :val). (~ (is_BASval
   ((APPCONval $1) $0)))))))) ((/\ ((! :(exval -> bool) -> bool)
   (\(x1 :exval). (~ (is_BASval (EXVALval $0)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record). (~ (is_BASval
   (RECORDval $0)))))) ((/\ ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (~ (is_BASval (ADDRval $0)))))) ((! :(closure -> bool) -> bool)
   (\(x1 :closure). (~ (is_BASval (CLOSUREval $0)))))))))))))`),
 ((is_SVALval_DEF),
  [],
  `((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval). (is_SVALval
   (SVALval $0))))) ((/\ (~ (is_SVALval ASSGval))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval). (~ (is_SVALval
   (BASval $0)))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con). (~
   (is_SVALval (CONval $0)))))) ((/\ ((! :(con -> bool) -> bool)
   (\(x1 :con). ((! :(val -> bool) -> bool) (\(x2 :val). (~
   (is_SVALval ((APPCONval $1) $0)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval). (~ (is_SVALval
   (EXVALval $0)))))) ((/\ ((! :(record -> bool) -> bool)
   (\(x1 :record). (~ (is_SVALval (RECORDval $0)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr). (~ (is_SVALval (ADDRval
   $0)))))) ((! :(closure -> bool) -> bool) (\(x1 :closure). (~
   (is_SVALval (CLOSUREval $0)))))))))))))`),
 ((is_ASSGval_DEF),
  [],
  `((/\ (is_ASSGval ASSGval)) ((/\ ((! :(sval -> bool) -> bool)
   (\(x1 :sval). (~ (is_ASSGval (SVALval $0)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval). (~ (is_ASSGval
   (BASval $0)))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con). (~
   (is_ASSGval (CONval $0)))))) ((/\ ((! :(con -> bool) -> bool)
   (\(x1 :con). ((! :(val -> bool) -> bool) (\(x2 :val). (~
   (is_ASSGval ((APPCONval $1) $0)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval). (~ (is_ASSGval
   (EXVALval $0)))))) ((/\ ((! :(record -> bool) -> bool)
   (\(x1 :record). (~ (is_ASSGval (RECORDval $0)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr). (~ (is_ASSGval (ADDRval
   $0)))))) ((! :(closure -> bool) -> bool) (\(x1 :closure). (~
   (is_ASSGval (CLOSUREval $0)))))))))))))`),
 ((int_VARENV_arg_DEF),
  [],
  `((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool) (int_VARENV_arg (int_VARENV $0))) $0)))`),
 ((int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_arg_DEF),
  [],
  `((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_arg
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) $0)))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_arg2_DEF),
  [],
  `((/\
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_arg2
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) $0))))))
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_arg2
   int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv))
   ((@ :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) ->
        var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv)
   (\(x :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   T))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_arg1_DEF),
  [],
  `((/\
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_arg1
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) $1))))))
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_arg1
   int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv))
   ((@ :(var_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) ->
        var_val_prod_closure_env_exval_record_strenv_val_varenv)
   (\(x :var_val_prod_closure_env_exval_record_strenv_val_varenv).
   T))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val_arg2_DEF),
  [],
  `((! :(var -> bool) -> bool) (\(x1 :var).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :val -> val -> bool)
   (int_closure_env_exval_record_strenv_val_varenv_ch44_var_val_arg2
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val $1)
   $0))) $0)))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val_arg1_DEF),
  [],
  `((! :(var -> bool) -> bool) (\(x1 :var).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :var -> var -> bool)
   (int_closure_env_exval_record_strenv_val_varenv_ch44_var_val_arg1
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val $1)
   $0))) $1)))))`),
 ((int_CLOSUREval_arg_DEF),
  [],
  `((/\ ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :closure -> closure -> bool) (int_CLOSUREval_arg
   (int_CLOSUREval $0))) $0)))) ((/\ (((= :closure -> closure -> bool)
   (int_CLOSUREval_arg int_ASSGval))
   ((@ :(closure -> bool) -> closure) (\(x :closure). T)))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :closure -> closure -> bool) (int_CLOSUREval_arg (int_SVALval
   $0))) ((@ :(closure -> bool) -> closure) (\(x :closure). T))))))
   ((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :closure -> closure -> bool) (int_CLOSUREval_arg (int_BASval
   $0))) ((@ :(closure -> bool) -> closure) (\(x :closure). T))))))
   ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :closure -> closure -> bool) (int_CLOSUREval_arg (int_CONval
   $0))) ((@ :(closure -> bool) -> closure) (\(x :closure). T))))))
   ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :closure -> closure -> bool) (int_CLOSUREval_arg
   ((int_APPCONval $1) $0))) ((@ :(closure -> bool) -> closure)
   (\(x :closure). T)))))))) ((/\ ((! :(exval -> bool) -> bool)
   (\(x1 :exval). (((= :closure -> closure -> bool)
   (int_CLOSUREval_arg (int_EXVALval $0)))
   ((@ :(closure -> bool) -> closure) (\(x :closure). T)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :closure -> closure -> bool) (int_CLOSUREval_arg
   (int_RECORDval $0))) ((@ :(closure -> bool) -> closure)
   (\(x :closure). T)))))) ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :closure -> closure -> bool) (int_CLOSUREval_arg (int_ADDRval
   $0))) ((@ :(closure -> bool) -> closure) (\(x :closure).
   T)))))))))))))`),
 ((int_ADDRval_arg_DEF),
  [],
  `((/\ ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :addr -> addr -> bool) (int_ADDRval_arg (int_ADDRval $0)))
   $0)))) ((/\ (((= :addr -> addr -> bool) (int_ADDRval_arg
   int_ASSGval)) ((@ :(addr -> bool) -> addr) (\(x :addr). T)))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :addr -> addr -> bool) (int_ADDRval_arg (int_SVALval $0)))
   ((@ :(addr -> bool) -> addr) (\(x :addr). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :addr -> addr -> bool) (int_ADDRval_arg (int_BASval $0)))
   ((@ :(addr -> bool) -> addr) (\(x :addr). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :addr -> addr -> bool) (int_ADDRval_arg (int_CONval $0)))
   ((@ :(addr -> bool) -> addr) (\(x :addr). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :addr -> addr -> bool) (int_ADDRval_arg ((int_APPCONval $1)
   $0))) ((@ :(addr -> bool) -> addr) (\(x :addr). T)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :addr -> addr -> bool) (int_ADDRval_arg (int_EXVALval $0)))
   ((@ :(addr -> bool) -> addr) (\(x :addr). T)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :addr -> addr -> bool) (int_ADDRval_arg (int_RECORDval $0)))
   ((@ :(addr -> bool) -> addr) (\(x :addr). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :addr -> addr -> bool) (int_ADDRval_arg (int_CLOSUREval $0)))
   ((@ :(addr -> bool) -> addr) (\(x :addr). T)))))))))))))`),
 ((int_RECORDval_arg_DEF),
  [],
  `((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :record -> record -> bool) (int_RECORDval_arg (int_RECORDval
   $0))) $0)))) ((/\ (((= :record -> record -> bool)
   (int_RECORDval_arg int_ASSGval)) ((@ :(record -> bool) -> record)
   (\(x :record). T)))) ((/\ ((! :(sval -> bool) -> bool)
   (\(x1 :sval). (((= :record -> record -> bool) (int_RECORDval_arg
   (int_SVALval $0))) ((@ :(record -> bool) -> record) (\(x :record).
   T)))))) ((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :record -> record -> bool) (int_RECORDval_arg (int_BASval
   $0))) ((@ :(record -> bool) -> record) (\(x :record). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :record -> record -> bool) (int_RECORDval_arg (int_CONval
   $0))) ((@ :(record -> bool) -> record) (\(x :record). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :record -> record -> bool) (int_RECORDval_arg ((int_APPCONval
   $1) $0))) ((@ :(record -> bool) -> record) (\(x :record). T))))))))
   ((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :record -> record -> bool) (int_RECORDval_arg (int_EXVALval
   $0))) ((@ :(record -> bool) -> record) (\(x :record). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :record -> record -> bool) (int_RECORDval_arg (int_ADDRval
   $0))) ((@ :(record -> bool) -> record) (\(x :record). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :record -> record -> bool) (int_RECORDval_arg (int_CLOSUREval
   $0))) ((@ :(record -> bool) -> record) (\(x :record).
   T)))))))))))))`),
 ((int_EXVALval_arg_DEF),
  [],
  `((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :exval -> exval -> bool) (int_EXVALval_arg (int_EXVALval $0)))
   $0)))) ((/\ (((= :exval -> exval -> bool) (int_EXVALval_arg
   int_ASSGval)) ((@ :(exval -> bool) -> exval) (\(x :exval). T))))
   ((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :exval -> exval -> bool) (int_EXVALval_arg (int_SVALval $0)))
   ((@ :(exval -> bool) -> exval) (\(x :exval). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :exval -> exval -> bool) (int_EXVALval_arg (int_BASval $0)))
   ((@ :(exval -> bool) -> exval) (\(x :exval). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :exval -> exval -> bool) (int_EXVALval_arg (int_CONval $0)))
   ((@ :(exval -> bool) -> exval) (\(x :exval). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :exval -> exval -> bool) (int_EXVALval_arg ((int_APPCONval $1)
   $0))) ((@ :(exval -> bool) -> exval) (\(x :exval). T)))))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :exval -> exval -> bool) (int_EXVALval_arg (int_RECORDval
   $0))) ((@ :(exval -> bool) -> exval) (\(x :exval). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :exval -> exval -> bool) (int_EXVALval_arg (int_ADDRval $0)))
   ((@ :(exval -> bool) -> exval) (\(x :exval). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :exval -> exval -> bool) (int_EXVALval_arg (int_CLOSUREval
   $0))) ((@ :(exval -> bool) -> exval) (\(x :exval).
   T)))))))))))))`),
 ((int_APPCONval_arg2_DEF),
  [],
  `((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :val -> val -> bool)
   (int_APPCONval_arg2 ((int_APPCONval $1) $0))) $0)))))) ((/\
   (((= :val -> val -> bool) (int_APPCONval_arg2 int_ASSGval))
   ((@ :(val -> bool) -> val) (\(x :val). T)))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :val -> val -> bool) (int_APPCONval_arg2 (int_SVALval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :val -> val -> bool) (int_APPCONval_arg2 (int_BASval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con). (((= :val -> val -> bool)
   (int_APPCONval_arg2 (int_CONval $0))) ((@ :(val -> bool) -> val)
   (\(x :val). T)))))) ((/\ ((! :(exval -> bool) -> bool)
   (\(x1 :exval). (((= :val -> val -> bool) (int_APPCONval_arg2
   (int_EXVALval $0))) ((@ :(val -> bool) -> val) (\(x :val). T))))))
   ((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :val -> val -> bool) (int_APPCONval_arg2 (int_RECORDval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :val -> val -> bool) (int_APPCONval_arg2 (int_ADDRval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :val -> val -> bool) (int_APPCONval_arg2 (int_CLOSUREval $0)))
   ((@ :(val -> bool) -> val) (\(x :val). T)))))))))))))`),
 ((int_APPCONval_arg1_DEF),
  [],
  `((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :con -> con -> bool)
   (int_APPCONval_arg1 ((int_APPCONval $1) $0))) $1)))))) ((/\
   (((= :con -> con -> bool) (int_APPCONval_arg1 int_ASSGval))
   ((@ :(con -> bool) -> con) (\(x :con). T)))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :con -> con -> bool) (int_APPCONval_arg1 (int_SVALval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :con -> con -> bool) (int_APPCONval_arg1 (int_BASval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con). (((= :con -> con -> bool)
   (int_APPCONval_arg1 (int_CONval $0))) ((@ :(con -> bool) -> con)
   (\(x :con). T)))))) ((/\ ((! :(exval -> bool) -> bool)
   (\(x1 :exval). (((= :con -> con -> bool) (int_APPCONval_arg1
   (int_EXVALval $0))) ((@ :(con -> bool) -> con) (\(x :con). T))))))
   ((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :con -> con -> bool) (int_APPCONval_arg1 (int_RECORDval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :con -> con -> bool) (int_APPCONval_arg1 (int_ADDRval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :con -> con -> bool) (int_APPCONval_arg1 (int_CLOSUREval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))))))))))`),
 ((int_CONval_arg_DEF),
  [],
  `((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :con -> con -> bool) (int_CONval_arg (int_CONval $0))) $0))))
   ((/\ (((= :con -> con -> bool) (int_CONval_arg int_ASSGval))
   ((@ :(con -> bool) -> con) (\(x :con). T)))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :con -> con -> bool) (int_CONval_arg (int_SVALval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :con -> con -> bool) (int_CONval_arg (int_BASval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :con -> con -> bool)
   (int_CONval_arg ((int_APPCONval $1) $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :con -> con -> bool) (int_CONval_arg (int_EXVALval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :con -> con -> bool) (int_CONval_arg (int_RECORDval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :con -> con -> bool) (int_CONval_arg (int_ADDRval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :con -> con -> bool) (int_CONval_arg (int_CLOSUREval $0)))
   ((@ :(con -> bool) -> con) (\(x :con). T)))))))))))))`),
 ((int_BASval_arg_DEF),
  [],
  `((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :basval -> basval -> bool) (int_BASval_arg (int_BASval $0)))
   $0)))) ((/\ (((= :basval -> basval -> bool) (int_BASval_arg
   int_ASSGval)) ((@ :(basval -> bool) -> basval) (\(x :basval). T))))
   ((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :basval -> basval -> bool) (int_BASval_arg (int_SVALval $0)))
   ((@ :(basval -> bool) -> basval) (\(x :basval). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :basval -> basval -> bool) (int_BASval_arg (int_CONval $0)))
   ((@ :(basval -> bool) -> basval) (\(x :basval). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :basval -> basval -> bool) (int_BASval_arg ((int_APPCONval $1)
   $0))) ((@ :(basval -> bool) -> basval) (\(x :basval). T))))))))
   ((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :basval -> basval -> bool) (int_BASval_arg (int_EXVALval $0)))
   ((@ :(basval -> bool) -> basval) (\(x :basval). T)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :basval -> basval -> bool) (int_BASval_arg (int_RECORDval
   $0))) ((@ :(basval -> bool) -> basval) (\(x :basval). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :basval -> basval -> bool) (int_BASval_arg (int_ADDRval $0)))
   ((@ :(basval -> bool) -> basval) (\(x :basval). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :basval -> basval -> bool) (int_BASval_arg (int_CLOSUREval
   $0))) ((@ :(basval -> bool) -> basval) (\(x :basval).
   T)))))))))))))`),
 ((int_SVALval_arg_DEF),
  [],
  `((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :sval -> sval -> bool) (int_SVALval_arg (int_SVALval $0)))
   $0)))) ((/\ (((= :sval -> sval -> bool) (int_SVALval_arg
   int_ASSGval)) ((@ :(sval -> bool) -> sval) (\(x :sval). T)))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :sval -> sval -> bool) (int_SVALval_arg (int_BASval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :sval -> sval -> bool) (int_SVALval_arg (int_CONval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :sval -> sval -> bool) (int_SVALval_arg ((int_APPCONval $1)
   $0))) ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :sval -> sval -> bool) (int_SVALval_arg (int_EXVALval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :sval -> sval -> bool) (int_SVALval_arg (int_RECORDval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :sval -> sval -> bool) (int_SVALval_arg (int_ADDRval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :sval -> sval -> bool) (int_SVALval_arg (int_CLOSUREval $0)))
   ((@ :(sval -> bool) -> sval) (\(x :sval). T)))))))))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_arg_DEF),
  [],
  `((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_arg
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) $0)))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_arg2_DEF),
  [],
  `((/\
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_arg2
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) $0))))))
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_arg2
   int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv))
   ((@ :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) ->
        strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv)
   (\(x :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   T))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_arg1_DEF),
  [],
  `((/\
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_arg1
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) $1))))))
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_arg1
   int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv))
   ((@ :(strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) ->
        strid_env_prod_closure_env_exval_record_strenv_val_varenv)
   (\(x :strid_env_prod_closure_env_exval_record_strenv_val_varenv).
   T))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env_arg2_DEF),
  [],
  `((! :(strid -> bool) -> bool) (\(x1 :strid).
   ((! :(env -> bool) -> bool) (\(x2 :env). (((= :env -> env -> bool)
   (int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env_arg2
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env $1)
   $0))) $0)))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env_arg1_DEF),
  [],
  `((! :(strid -> bool) -> bool) (\(x1 :strid).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   (((= :strid -> strid -> bool)
   (int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env_arg1
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env $1)
   $0))) $1)))))`),
 ((int_STRENV_arg_DEF),
  [],
  `((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool) (int_STRENV_arg (int_STRENV $0))) $0)))`),
 ((int_RECORD_arg_DEF),
  [],
  `((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool) (int_RECORD_arg (int_RECORD $0))) $0)))`),
 ((int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_arg_DEF),
  [],
  `((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_arg
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) $0)))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_arg2_DEF),
  [],
  `((/\
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_arg2
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) $0))))))
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_arg2
   int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv))
   ((@ :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) ->
        label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv)
   (\(x :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   T))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_arg1_DEF),
  [],
  `((/\
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_arg1
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) $1))))))
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_arg1
   int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv))
   ((@ :(label_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) ->
        label_val_prod_closure_env_exval_record_strenv_val_varenv)
   (\(x :label_val_prod_closure_env_exval_record_strenv_val_varenv).
   T))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val_arg2_DEF),
  [],
  `((! :(label -> bool) -> bool) (\(x1 :label).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :val -> val -> bool)
   (int_closure_env_exval_record_strenv_val_varenv_ch44_label_val_arg2
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val $1)
   $0))) $0)))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val_arg1_DEF),
  [],
  `((! :(label -> bool) -> bool) (\(x1 :label).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :label -> label -> bool)
   (int_closure_env_exval_record_strenv_val_varenv_ch44_label_val_arg1
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val $1)
   $0))) $1)))))`),
 ((int_NAMEVALexval_arg2_DEF),
  [],
  `((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :val -> val -> bool)
   (int_NAMEVALexval_arg2 ((int_NAMEVALexval $1) $0))) $0))))))
   ((! :(exname -> bool) -> bool) (\(x1 :exname).
   (((= :val -> val -> bool) (int_NAMEVALexval_arg2 (int_NAMEexval
   $0))) ((@ :(val -> bool) -> val) (\(x :val). T))))))`),
 ((int_NAMEVALexval_arg1_DEF),
  [],
  `((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :exname -> exname -> bool) (int_NAMEVALexval_arg1
   ((int_NAMEVALexval $1) $0))) $1))))))
   ((! :(exname -> bool) -> bool) (\(x1 :exname).
   (((= :exname -> exname -> bool) (int_NAMEVALexval_arg1
   (int_NAMEexval $0))) ((@ :(exname -> bool) -> exname)
   (\(x :exname). T))))))`),
 ((int_NAMEexval_arg_DEF),
  [],
  `((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname).
   (((= :exname -> exname -> bool) (int_NAMEexval_arg (int_NAMEexval
   $0))) $0)))) ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :exname -> exname -> bool) (int_NAMEexval_arg
   ((int_NAMEVALexval $1) $0))) ((@ :(exname -> bool) -> exname)
   (\(x :exname). T))))))))`),
 ((int_ENV_arg3_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :exconenv -> exconenv -> bool) (int_ENV_arg3 (((int_ENV $2)
   $1) $0))) $0)))))))`),
 ((int_ENV_arg2_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :varenv -> varenv -> bool) (int_ENV_arg2 (((int_ENV $2) $1)
   $0))) $1)))))))`),
 ((int_ENV_arg1_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :strenv -> strenv -> bool) (int_ENV_arg1 (((int_ENV $2) $1)
   $0))) $2)))))))`),
 ((int_CLOSURE_arg3_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :varenv -> varenv -> bool) (int_CLOSURE_arg3 (((int_CLOSURE
   $2) $1) $0))) $0)))))))`),
 ((int_CLOSURE_arg2_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :env -> env -> bool) (int_CLOSURE_arg2 (((int_CLOSURE $2) $1)
   $0))) $1)))))))`),
 ((int_CLOSURE_arg1_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :match -> match -> bool) (int_CLOSURE_arg1 (((int_CLOSURE $2)
   $1) $0))) $2)))))))`),
 ((dist_aux_ftn_closure_DEF),
  [],
  `((/\ ((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :num -> num -> bool) (dist_aux_ftn_closure (((int_CLOSURE $2)
   $1) $0))) 0)))))))) ((/\ ((! :(strenv -> bool) -> bool)
   (\(x1 :strenv). ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :num -> num -> bool) (dist_aux_ftn_env (((int_ENV $2) $1)
   $0))) 1)))))))) ((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname).
   (((= :num -> num -> bool) (dist_aux_ftn_exval (int_NAMEexval $0)))
   2)))) ((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :num -> num -> bool)
   (dist_aux_ftn_exval ((int_NAMEVALexval $1) $0))) 3)))))) ((/\
   ((! :(label -> bool) -> bool) (\(x1 :label).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :num -> num -> bool)
   (dist_aux_ftn_label_val_prod_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val $1)
   $0))) 4)))))) ((/\ (((= :num -> num -> bool)
   (dist_aux_ftn_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv))
   5)) ((/\
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool)
   (dist_aux_ftn_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) 6)))))) ((/\
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool)
   (dist_aux_ftn_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) 7)))) ((/\
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool) (dist_aux_ftn_record (int_RECORD $0)))
   8)))) ((/\
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool) (dist_aux_ftn_strenv (int_STRENV $0)))
   9)))) ((/\ ((! :(strid -> bool) -> bool) (\(x1 :strid).
   ((! :(env -> bool) -> bool) (\(x2 :env). (((= :num -> num -> bool)
   (dist_aux_ftn_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env $1)
   $0))) 10)))))) ((/\ (((= :num -> num -> bool)
   (dist_aux_ftn_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv))
   11)) ((/\
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool)
   (dist_aux_ftn_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) 12)))))) ((/\
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool)
   (dist_aux_ftn_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) 13)))) ((/\ (((= :num -> num -> bool) (dist_aux_ftn_val
   int_ASSGval)) 14)) ((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :num -> num -> bool) (dist_aux_ftn_val (int_SVALval $0)))
   15)))) ((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :num -> num -> bool) (dist_aux_ftn_val (int_BASval $0)))
   16)))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   (((= :num -> num -> bool) (dist_aux_ftn_val (int_CONval $0)))
   17)))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :num -> num -> bool)
   (dist_aux_ftn_val ((int_APPCONval $1) $0))) 18)))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :num -> num -> bool) (dist_aux_ftn_val (int_EXVALval $0)))
   19)))) ((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :num -> num -> bool) (dist_aux_ftn_val (int_RECORDval $0)))
   20)))) ((/\ ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :num -> num -> bool) (dist_aux_ftn_val (int_ADDRval $0)))
   21)))) ((/\ ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :num -> num -> bool) (dist_aux_ftn_val (int_CLOSUREval $0)))
   22)))) ((/\ ((! :(var -> bool) -> bool) (\(x1 :var).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :num -> num -> bool)
   (dist_aux_ftn_var_val_prod_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val $1)
   $0))) 23)))))) ((/\ (((= :num -> num -> bool)
   (dist_aux_ftn_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv))
   24)) ((/\
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool)
   (dist_aux_ftn_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) 25)))))) ((/\
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool)
   (dist_aux_ftn_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) 26))))
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :num -> num -> bool) (dist_aux_ftn_varenv (int_VARENV $0)))
   27))))))))))))))))))))))))))))))`),
 ((VARENV),
  [],
  `(((= :((var # val) list finmap -> varenv) ->
         ((var # val) list finmap -> varenv) -> bool) VARENV)
   (\(x0 :(var # val) list finmap). (int_VARENV
   (int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   $0))))`),
 ((int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :(var # val) list finmap -> (var # val) list finmap -> bool)
   (int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) ((FINMAP :(var # val) list -> (var # val) list finmap)
   (int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0)))))`),
 ((int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :((var # val) list -> bool) -> bool) (\(x0 :(var # val) list).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   ((FINMAP :(var # val) list -> (var # val) list finmap) $0)))
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0)))))`),
 ((int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv),
  [],
  `((/\ (((= :(var # val) list -> (var # val) list -> bool)
   (int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv))
   (NIL :(var # val) list)))
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :(var # val) list -> (var # val) list -> bool)
   (int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0)))
   (((CONS :var # val -> (var # val) list -> (var # val) list)
   (int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1))
   (int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))))))))`),
 ((int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv),
  [],
  `((/\
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (NIL :(var # val) list)))
   int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv))
   ((! :((var # val) list -> bool) -> bool) (\(x1 :(var # val) list).
   ((! :(var # val -> bool) -> bool) (\(x0 :var # val).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (((CONS :var # val -> (var # val) list -> (var # val) list) $0)
   $1)))
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   (int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $0))
   (int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $1))))))))`),
 ((int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(var -> bool) -> bool) (\(x1 :var).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :var # val -> var # val -> bool)
   (int_inv_var_val_prod_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val $1)
   $0))) (((, :var -> val -> var # val) $1) $0))))))`),
 ((int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(val -> bool) -> bool) (\(x1 :val).
   ((! :(var -> bool) -> bool) (\(x0 :var).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_var_val_prod_closure_env_exval_record_strenv_val_varenv
   (((, :var -> val -> var # val) $0) $1)))
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val $0)
   $1))))))`),
 ((CLOSUREval),
  [],
  `(((= :(closure -> val) -> (closure -> val) -> bool) CLOSUREval)
   (\(x0 :closure). (int_CLOSUREval $0)))`),
 ((ADDRval),
  [],
  `(((= :(addr -> val) -> (addr -> val) -> bool) ADDRval)
   (\(x0 :addr). (int_ADDRval $0)))`),
 ((RECORDval),
  [],
  `(((= :(record -> val) -> (record -> val) -> bool) RECORDval)
   (\(x0 :record). (int_RECORDval $0)))`),
 ((EXVALval),
  [],
  `(((= :(exval -> val) -> (exval -> val) -> bool) EXVALval)
   (\(x0 :exval). (int_EXVALval $0)))`),
 ((APPCONval),
  [],
  `(((= :(con -> val -> val) -> (con -> val -> val) -> bool)
   APPCONval) (\(x0 :con). (\(x1 :val). ((int_APPCONval $1) $0))))`),
 ((CONval),
  [],
  `(((= :(con -> val) -> (con -> val) -> bool) CONval) (\(x0 :con).
   (int_CONval $0)))`),
 ((BASval),
  [],
  `(((= :(basval -> val) -> (basval -> val) -> bool) BASval)
   (\(x0 :basval). (int_BASval $0)))`),
 ((SVALval),
  [],
  `(((= :(sval -> val) -> (sval -> val) -> bool) SVALval)
   (\(x0 :sval). (int_SVALval $0)))`),
 ((ASSGval), [], `(((= :val -> val -> bool) ASSGval) int_ASSGval)`),
 ((STRENV),
  [],
  `(((= :((strid # env) list finmap -> strenv) ->
         ((strid # env) list finmap -> strenv) -> bool) STRENV)
   (\(x0 :(strid # env) list finmap). (int_STRENV
   (int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   $0))))`),
 ((int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :(strid # env) list finmap -> (strid # env) list finmap ->
         bool)
   (int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) ((FINMAP :(strid # env) list -> (strid # env) list finmap)
   (int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0)))))`),
 ((int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :((strid # env) list -> bool) -> bool)
   (\(x0 :(strid # env) list).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   ((FINMAP :(strid # env) list -> (strid # env) list finmap) $0)))
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0)))))`),
 ((int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv),
  [],
  `((/\ (((= :(strid # env) list -> (strid # env) list -> bool)
   (int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv))
   (NIL :(strid # env) list)))
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :(strid # env) list -> (strid # env) list -> bool)
   (int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0)))
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   (int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1))
   (int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))))))))`),
 ((int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv),
  [],
  `((/\
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (NIL :(strid # env) list)))
   int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv))
   ((! :((strid # env) list -> bool) -> bool)
   (\(x1 :(strid # env) list). ((! :(strid # env -> bool) -> bool)
   (\(x0 :strid # env).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $0) $1)))
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   (int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $0))
   (int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $1))))))))`),
 ((int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(strid -> bool) -> bool) (\(x1 :strid).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   (((= :strid # env -> strid # env -> bool)
   (int_inv_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env $1)
   $0))) (((, :strid -> env -> strid # env) $1) $0))))))`),
 ((int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(env -> bool) -> bool) (\(x1 :env).
   ((! :(strid -> bool) -> bool) (\(x0 :strid).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   (((, :strid -> env -> strid # env) $0) $1)))
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env $0)
   $1))))))`),
 ((RECORD),
  [],
  `(((= :((label # val) list finmap -> record) ->
         ((label # val) list finmap -> record) -> bool) RECORD)
   (\(x0 :(label # val) list finmap). (int_RECORD
   (int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   $0))))`),
 ((int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :(label # val) list finmap -> (label # val) list finmap ->
         bool)
   (int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) ((FINMAP :(label # val) list -> (label # val) list finmap)
   (int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0)))))`),
 ((int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :((label # val) list -> bool) -> bool)
   (\(x0 :(label # val) list).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv
   ((FINMAP :(label # val) list -> (label # val) list finmap) $0)))
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0)))))`),
 ((int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv),
  [],
  `((/\ (((= :(label # val) list -> (label # val) list -> bool)
   (int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv))
   (NIL :(label # val) list)))
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :(label # val) list -> (label # val) list -> bool)
   (int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0)))
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   (int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1))
   (int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))))))))`),
 ((int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv),
  [],
  `((/\
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (NIL :(label # val) list)))
   int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv))
   ((! :((label # val) list -> bool) -> bool)
   (\(x1 :(label # val) list). ((! :(label # val -> bool) -> bool)
   (\(x0 :label # val).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $0) $1)))
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   (int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $0))
   (int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $1))))))))`),
 ((int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(label -> bool) -> bool) (\(x1 :label).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :label # val -> label # val -> bool)
   (int_inv_label_val_prod_closure_env_exval_record_strenv_val_varenv
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val $1)
   $0))) (((, :label -> val -> label # val) $1) $0))))))`),
 ((int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv),
  [],
  `((! :(val -> bool) -> bool) (\(x1 :val).
   ((! :(label -> bool) -> bool) (\(x0 :label).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_inj_label_val_prod_closure_env_exval_record_strenv_val_varenv
   (((, :label -> val -> label # val) $0) $1)))
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val $0)
   $1))))))`),
 ((NAMEVALexval),
  [],
  `(((= :(exname -> val -> exval) -> (exname -> val -> exval) -> bool)
   NAMEVALexval) (\(x0 :exname). (\(x1 :val). ((int_NAMEVALexval $1)
   $0))))`),
 ((NAMEexval),
  [],
  `(((= :(exname -> exval) -> (exname -> exval) -> bool) NAMEexval)
   (\(x0 :exname). (int_NAMEexval $0)))`),
 ((ENV),
  [],
  `(((= :(strenv -> varenv -> exconenv -> env) ->
         (strenv -> varenv -> exconenv -> env) -> bool) ENV)
   (\(x0 :strenv). (\(x1 :varenv). (\(x2 :exconenv). (((int_ENV $2)
   $1) $0)))))`),
 ((CLOSURE),
  [],
  `(((= :(match -> env -> varenv -> closure) ->
         (match -> env -> varenv -> closure) -> bool) CLOSURE)
   (\(x0 :match). (\(x1 :env). (\(x2 :varenv). (((int_CLOSURE $2) $1)
   $0)))))`),
 ((int_VARENV_DEF),
  [],
  `((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :varenv -> varenv -> bool) (int_VARENV $0)) (varenv_abs
   (JOINT_int_VARENV
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :var_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_rep $1))
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `(((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv)
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val_DEF),
  [],
  `((! :(var -> bool) -> bool) (\(x1 :var).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_var_val $1)
   $0)) (var_val_prod_closure_env_exval_record_strenv_val_varenv_abs
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_var_val
   $1) (val_rep $0))))))))`),
 ((int_CLOSUREval_DEF),
  [],
  `((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :val -> val -> bool) (int_CLOSUREval $0)) (val_abs
   (JOINT_int_CLOSUREval (closure_rep $0))))))`),
 ((int_ADDRval_DEF),
  [],
  `((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :val -> val -> bool) (int_ADDRval $0)) (val_abs
   (JOINT_int_ADDRval $0)))))`),
 ((int_RECORDval_DEF),
  [],
  `((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :val -> val -> bool) (int_RECORDval $0)) (val_abs
   (JOINT_int_RECORDval (record_rep $0))))))`),
 ((int_EXVALval_DEF),
  [],
  `((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :val -> val -> bool) (int_EXVALval $0)) (val_abs
   (JOINT_int_EXVALval (exval_rep $0))))))`),
 ((int_APPCONval_DEF),
  [],
  `((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :val -> val -> bool)
   ((int_APPCONval $1) $0)) (val_abs ((JOINT_int_APPCONval $1)
   (val_rep $0))))))))`),
 ((int_CONval_DEF),
  [],
  `((! :(con -> bool) -> bool) (\(x1 :con). (((= :val -> val -> bool)
   (int_CONval $0)) (val_abs (JOINT_int_CONval $0)))))`),
 ((int_BASval_DEF),
  [],
  `((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :val -> val -> bool) (int_BASval $0)) (val_abs
   (JOINT_int_BASval $0)))))`),
 ((int_SVALval_DEF),
  [],
  `((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :val -> val -> bool) (int_SVALval $0)) (val_abs
   (JOINT_int_SVALval $0)))))`),
 ((int_ASSGval_DEF),
  [],
  `(((= :val -> val -> bool) int_ASSGval) (val_abs
   JOINT_int_ASSGval))`),
 ((int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_rep $1))
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `(((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv)
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env_DEF),
  [],
  `((! :(strid -> bool) -> bool) (\(x1 :strid).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env $1)
   $0)) (strid_env_prod_closure_env_exval_record_strenv_val_varenv_abs
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env
   $1) (env_rep $0))))))))`),
 ((int_STRENV_DEF),
  [],
  `((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :strenv -> strenv -> bool) (int_STRENV $0)) (strenv_abs
   (JOINT_int_STRENV
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))`),
 ((int_RECORD_DEF),
  [],
  `((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :record -> record -> bool) (int_RECORD $0)) (record_abs
   (JOINT_int_RECORD
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x1 :label_val_prod_closure_env_exval_record_strenv_val_varenv).
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(x2 :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   ((int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_rep $1))
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))))))))`),
 ((int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `(((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv)
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv))`),
 ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val_DEF),
  [],
  `((! :(label -> bool) -> bool) (\(x1 :label).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   ((int_closure_env_exval_record_strenv_val_varenv_ch44_label_val $1)
   $0)) (label_val_prod_closure_env_exval_record_strenv_val_varenv_abs
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_label_val
   $1) (val_rep $0))))))))`),
 ((int_NAMEVALexval_DEF),
  [],
  `((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :exval -> exval -> bool) ((int_NAMEVALexval $1) $0))
   (exval_abs ((JOINT_int_NAMEVALexval $1) (val_rep $0))))))))`),
 ((int_NAMEexval_DEF),
  [],
  `((! :(exname -> bool) -> bool) (\(x1 :exname).
   (((= :exval -> exval -> bool) (int_NAMEexval $0)) (exval_abs
   (JOINT_int_NAMEexval $0)))))`),
 ((int_ENV_DEF),
  [],
  `((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :env -> env -> bool) (((int_ENV $2) $1) $0)) (env_abs
   (((JOINT_int_ENV (strenv_rep $2)) (varenv_rep $1)) $0)))))))))`),
 ((int_CLOSURE_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :closure -> closure -> bool) (((int_CLOSURE $2) $1) $0))
   (closure_abs (((JOINT_int_CLOSURE $2) (env_rep $1)) (varenv_rep
   $0))))))))))`),
 ((exval_REP_ABS),
  [],
  `((/\ ((! :(exval -> bool) -> bool) (\(a :exval).
   (((= :exval -> exval -> bool) (exval_abs (exval_rep $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 3)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (exval_rep (exval_abs $0))) $0)))))`),
 ((exval_TY_DEF),
  [],
  `((? :((exval ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :exval ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (exval ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 3))) $0)))`),
 ((label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 5)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   $0))) $0)))))`),
 ((label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 5))) $0)))`),
 ((label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 6)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   $0))) $0)))))`),
 ((label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 6))) $0)))`),
 ((record_REP_ABS),
  [],
  `((/\ ((! :(record -> bool) -> bool) (\(a :record).
   (((= :record -> record -> bool) (record_abs (record_rep $0)))
   $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 7)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (record_rep (record_abs $0))) $0)))))`),
 ((record_TY_DEF),
  [],
  `((? :((record ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :record ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (record ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 7))) $0)))`),
 ((strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 10)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   $0))) $0)))))`),
 ((strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 10))) $0)))`),
 ((strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 11)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   $0))) $0)))))`),
 ((strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 11))) $0)))`),
 ((val_REP_ABS),
  [],
  `((/\ ((! :(val -> bool) -> bool) (\(a :val).
   (((= :val -> val -> bool) (val_abs (val_rep $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 12)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (val_rep (val_abs $0))) $0)))))`),
 ((val_TY_DEF),
  [],
  `((? :((val ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :val ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (val ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 12))) $0)))`),
 ((var_val_prod_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :var_val_prod_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_abs
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_rep $0)))
   $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 13)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_rep
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_abs $0)))
   $0)))))`),
 ((var_val_prod_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((var_val_prod_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :var_val_prod_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (var_val_prod_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 13))) $0)))`),
 ((var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 14)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_rep
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_abs
   $0))) $0)))))`),
 ((var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 14))) $0)))`),
 ((var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv).
   (((= :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 15)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_rep
   (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_abs
   $0))) $0)))))`),
 ((var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 15))) $0)))`),
 ((varenv_REP_ABS),
  [],
  `((/\ ((! :(varenv -> bool) -> bool) (\(a :varenv).
   (((= :varenv -> varenv -> bool) (varenv_abs (varenv_rep $0)))
   $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 16)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (varenv_rep (varenv_abs $0))) $0)))))`),
 ((varenv_TY_DEF),
  [],
  `((? :((varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 16))) $0)))`),
 ((strenv_REP_ABS),
  [],
  `((/\ ((! :(strenv -> bool) -> bool) (\(a :strenv).
   (((= :strenv -> strenv -> bool) (strenv_abs (strenv_rep $0)))
   $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 8)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (strenv_rep (strenv_abs $0))) $0)))))`),
 ((strenv_TY_DEF),
  [],
  `((? :((strenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :strenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (strenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 8))) $0)))`),
 ((label_val_prod_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(label_val_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :label_val_prod_closure_env_exval_record_strenv_val_varenv).
   (((= :label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_abs
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_rep
   $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 4)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_rep
   (label_val_prod_closure_env_exval_record_strenv_val_varenv_abs
   $0))) $0)))))`),
 ((label_val_prod_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((label_val_prod_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :label_val_prod_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (label_val_prod_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 4))) $0)))`),
 ((env_REP_ABS),
  [],
  `((/\ ((! :(env -> bool) -> bool) (\(a :env).
   (((= :env -> env -> bool) (env_abs (env_rep $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 2)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (env_rep (env_abs $0))) $0)))))`),
 ((env_TY_DEF),
  [],
  `((? :((env ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :env ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (env ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 2))) $0)))`),
 ((closure_REP_ABS),
  [],
  `((/\ ((! :(closure -> bool) -> bool) (\(a :closure).
   (((= :closure -> closure -> bool) (closure_abs (closure_rep $0)))
   $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 1)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (closure_rep (closure_abs $0))) $0)))))`),
 ((closure_TY_DEF),
  [],
  `((? :((closure ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :closure ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (closure ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 1))) $0)))`),
 ((strid_env_prod_closure_env_exval_record_strenv_val_varenv_REP_ABS),
  [],
  `((/\
   ((! :(strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
        bool) -> bool)
   (\(a :strid_env_prod_closure_env_exval_record_strenv_val_varenv).
   (((= :strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         bool)
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_abs
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_rep
   $0))) $0))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(r :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :bool -> bool -> bool)
   ((\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 9)) $0))
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_rep
   (strid_env_prod_closure_env_exval_record_strenv_val_varenv_abs
   $0))) $0)))))`),
 ((strid_env_prod_closure_env_exval_record_strenv_val_varenv_TY_DEF),
  [],
  `((? :((strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
        bool) -> bool)
   (\(rep :strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((TYPE_DEFINITION :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       bool) ->
                       (strid_env_prod_closure_env_exval_record_strenv_val_varenv ->
                       joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv) ->
                       bool)
   (\(x :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 9))) $0)))`),
 ((joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select_DEF),
  [],
  `((/\ ((! :(match -> bool) -> bool) (\(m :match).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (((JOINT_int_CLOSURE $2) $1) $0)))
   ((((COND :bool -> num -> num -> num) ((/\ (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $1)) 2)) (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 16))) 1) 0))))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(exconenv -> bool) -> bool) (\(e :exconenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (((JOINT_int_ENV $2) $1) $0))) ((((COND :bool -> num -> num -> num)
   ((/\ (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $2)) 8)) (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $1)) 16))) 2) 0))))))))) ((/\ ((! :(exname -> bool) -> bool)
   (\(e :exname). (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_NAMEexval $0))) 3)))) ((/\
   ((! :(exname -> bool) -> bool) (\(e :exname).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   ((JOINT_int_NAMEVALexval $1) $0)))
   ((((COND :bool -> num -> num -> num) (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 12)) 3) 0))))))) ((/\ ((! :(label -> bool) -> bool)
   (\(l' :label).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_label_val
   $1) $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 12)) 4) 0))))))) ((/\ (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv))
   5)) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) ((((COND :bool -> num -> num -> num) ((/\
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $1)) 4)) (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 5))) 5) 0))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 5)) 6) 0))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_RECORD $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 6)) 7) 0))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_STRENV $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 11)) 8) 0))))) ((/\ ((! :(strid -> bool) -> bool)
   (\(s :strid).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env
   $1) $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 2)) 9) 0))))))) ((/\ (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv))
   10)) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) ((((COND :bool -> num -> num -> num) ((/\
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $1)) 9)) (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 10))) 10) 0))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 10)) 11) 0))))) ((/\ (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   JOINT_int_ASSGval)) 12)) ((/\ ((! :(sval -> bool) -> bool)
   (\(s :sval). (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_SVALval $0))) 12)))) ((/\ ((! :(basval -> bool) -> bool)
   (\(b :basval). (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_BASval $0))) 12)))) ((/\ ((! :(con -> bool) -> bool)
   (\(c :con). (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_CONval $0))) 12)))) ((/\ ((! :(con -> bool) -> bool)
   (\(c :con).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   ((JOINT_int_APPCONval $1) $0)))
   ((((COND :bool -> num -> num -> num) (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 12)) 12) 0))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_EXVALval $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 3)) 12) 0))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_RECORDval $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 7)) 12) 0))))) ((/\ ((! :(addr -> bool) -> bool) (\(a :addr).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_ADDRval $0))) 12)))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_CLOSUREval $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 1)) 12) 0))))) ((/\ ((! :(var -> bool) -> bool) (\(v' :var).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_var_val
   $1) $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 12)) 13) 0))))))) ((/\ (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv))
   14)) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) ((((COND :bool -> num -> num -> num) ((/\
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $1)) 13)) (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 14))) 14) 0))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 14)) 15) 0)))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   (JOINT_int_VARENV $0))) ((((COND :bool -> num -> num -> num)
   (((= :num -> num -> bool)
   (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_select
   $0)) 15)) 16) 0)))))))))))))))))))))))))))))))`),
 ((JOINT_int_VARENV_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_VARENV $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INR :one + one -> one + one + one) ((INR :one -> one + one)
   one))))))))))))))))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INR :one + one -> one + one + one) ((INL :one -> one + one)
   one))))))))))))))))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INL :one -> one + one + one) one)))))))))))))))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $1))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `(((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv)
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INL :one -> one + one + one + one) one))))))))))))))))))))))))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_var_val_DEF),
  [],
  `((! :(var -> bool) -> bool) (\(v' :var).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_var_val
   $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INL :var -> var + one + one + one + one)
   $1)))))))))))))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))))`),
 ((JOINT_int_CLOSUREval_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_CLOSUREval $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INL :one -> one + var + one + one + one + one)
   one))))))))))))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_ADDRval_DEF),
  [],
  `((! :(addr -> bool) -> bool) (\(a :addr).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_ADDRval $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INL :addr -> addr + one + var + one + one + one + one)
   $0)))))))))))))))))))))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))`),
 ((JOINT_int_RECORDval_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_RECORDval $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INL :one -> one + addr + one + var + one + one + one + one)
   one))))))))))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_EXVALval_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_EXVALval $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :one -> one + one + addr + one + var + one + one + one + one)
   one)))))))))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_APPCONval_DEF),
  [],
  `((! :(con -> bool) -> bool) (\(c :con).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) ((JOINT_int_APPCONval $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INL :con ->
          con + one + one + addr + one + var + one + one + one + one)
   $1))))))))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))))`),
 ((JOINT_int_CONval_DEF),
  [],
  `((! :(con -> bool) -> bool) (\(c :con).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_CONval $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :con ->
          con + con + one + one + addr + one + var + one + one + one +
          one) $0)))))))))))))))))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))`),
 ((JOINT_int_BASval_DEF),
  [],
  `((! :(basval -> bool) -> bool) (\(b :basval).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_BASval $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INL :basval ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) $0))))))))))))))))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))`),
 ((JOINT_int_SVALval_DEF),
  [],
  `((! :(sval -> bool) -> bool) (\(s :sval).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_SVALval $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INL :sval ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one) $0)))))))))))))))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))`),
 ((JOINT_int_ASSGval_DEF),
  [],
  `(((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) JOINT_int_ASSGval)
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INL :one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one) one))))))))))))))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one) one)))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one) one))))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $1))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `(((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv)
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   one)))))))))))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env_DEF),
  [],
  `((! :(strid -> bool) -> bool) (\(s :strid).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env
   $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :strid ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   $1))))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))))`),
 ((JOINT_int_STRENV_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_STRENV $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INL :one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   one)))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_RECORD_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_RECORD $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one) one))))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INL :one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) one)))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one) one))))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $1))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv_DEF),
  [],
  `(((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv)
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one) one)))))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))`),
 ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_label_val_DEF),
  [],
  `((! :(label -> bool) -> bool) (\(l' :label).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_label_val
   $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INL :label ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one) $1))))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))))`),
 ((JOINT_int_NAMEVALexval_DEF),
  [],
  `((! :(exname -> bool) -> bool) (\(e :exname).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) ((JOINT_int_NAMEVALexval $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INL :exname ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one) $1)))))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list)))))))))`),
 ((JOINT_int_NAMEexval_DEF),
  [],
  `((! :(exname -> bool) -> bool) (\(e :exname).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (JOINT_int_NAMEexval $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :exname ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one) $0))))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))`),
 ((JOINT_int_ENV_DEF),
  [],
  `((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(exconenv -> bool) -> bool) (\(e :exconenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (((JOINT_int_ENV $2) $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :exconenv ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   $0)))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $2))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $1))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))))))))`),
 ((JOINT_int_CLOSURE_DEF),
  [],
  `((! :(match -> bool) -> bool) (\(m :match).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool) (((JOINT_int_CLOSURE $2) $1) $0))
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (((Node :match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree)
   ((INL :match ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) $2))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $1))
   (((CONS :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list ->
            (match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one) ltree list)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))
   (NIL :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree list))))))))))))`),
 ((joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_ISO_DEF),
  [],
  `((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(a :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         bool)
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))) $0))))
   ((! :((match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree -> bool) -> bool)
   (\(r :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree). (((= :bool -> bool -> bool)
   (((TRP :(match + exconenv + exname + exname + label + one + one +
            one + one + one + strid + one + one + one + one + sval +
            basval + con + con + one + one + addr + one + var + one +
            one + one + one ->
           (match + exconenv + exname + exname + label + one + one +
           one + one + one + strid + one + one + one + one + sval +
           basval + con + con + one + one + addr + one + var + one +
           one + one + one) ltree list -> bool) ->
           (match + exconenv + exname + exname + label + one + one +
           one + one + one + strid + one + one + one + one + sval +
           basval + con + con + one + one + addr + one + var + one +
           one + one + one) ltree -> bool)
   (\(v :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one).
   (\(tl :(match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) ltree list). ((\/ ((/\
   ((? :(match -> bool) -> bool) (\(m :match).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INL :match ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\ ((? :(exconenv -> bool) -> bool) (\(e :exconenv).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :exconenv ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   $0)))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\ ((? :(exname -> bool) -> bool) (\(e :exname).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :exname ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   $0))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(exname -> bool) -> bool) (\(e :exname).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INL :exname ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one) $0))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\ ((? :(label -> bool) -> bool) (\(l :label).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INL :label ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one) $0)))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one) one))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one) one)))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INL :one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) one)))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one) one))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INL :one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   one)))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\ ((? :(strid -> bool) -> bool) (\(s :strid).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :strid ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   $0))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   one)))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one) one)))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one) one))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INL :one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one) one)))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(sval -> bool) -> bool) (\(s :sval).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INL :sval ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one) $0))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(basval -> bool) -> bool) (\(b :basval).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INL :basval ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) $0)))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(con -> bool) -> bool) (\(c :con).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :con ->
          con + con + one + one + addr + one + var + one + one + one +
          one) $0)))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(con -> bool) -> bool) (\(c :con).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INL :con ->
          con + one + one + addr + one + var + one + one + one + one)
   $0))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :one -> one + one + addr + one + var + one + one + one + one)
   one)))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INL :one -> one + addr + one + var + one + one + one + one)
   one))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\ ((? :(addr -> bool) -> bool) (\(a :addr).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INL :addr -> addr + one + var + one + one + one + one)
   $0)))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INL :one -> one + var + one + one + one + one)
   one))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\ ((? :(var -> bool) -> bool) (\(v :var).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INL :var -> var + one + one + one + one)
   $0)))))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INL :one -> one + one + one + one) one)))))))))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INL :one -> one + one + one) one))))))))))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INR :one + one -> one + one + one) ((INL :one -> one + one)
   one))))))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INR :one + one -> one + one + one) ((INR :one -> one + one)
   one))))))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC
   0))))))))))))))))))))))))))))))))) $0))
   (((= :(match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree ->
         (match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree -> bool)
   (REP_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   (ABS_joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv
   $0))) $0)))))`),
 ((joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_TY_DEF),
  [],
  `((? :((joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         (match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one) ltree) -> bool) -> bool)
   (\(rep :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           (match + exconenv + exname + exname + label + one + one +
           one + one + one + strid + one + one + one + one + sval +
           basval + con + con + one + one + addr + one + var + one +
           one + one + one) ltree).
   (((TYPE_DEFINITION :((match + exconenv + exname + exname + label +
                        one + one + one + one + one + strid + one +
                        one + one + one + sval + basval + con + con +
                        one + one + addr + one + var + one + one +
                        one + one) ltree -> bool) ->
                       (joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
                       (match + exconenv + exname + exname + label +
                       one + one + one + one + one + strid + one +
                       one + one + one + sval + basval + con + con +
                       one + one + addr + one + var + one + one +
                       one + one) ltree) -> bool)
   ((TRP :(match + exconenv + exname + exname + label + one + one +
           one + one + one + strid + one + one + one + one + sval +
           basval + con + con + one + one + addr + one + var + one +
           one + one + one ->
          (match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) ltree list -> bool) ->
          (match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) ltree -> bool)
   (\(v :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one).
   (\(tl :(match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) ltree list). ((\/ ((/\
   ((? :(match -> bool) -> bool) (\(m :match).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INL :match ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) $0))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\ ((? :(exconenv -> bool) -> bool) (\(e :exconenv).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :exconenv ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   $0)))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\ ((? :(exname -> bool) -> bool) (\(e :exname).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :exname ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   $0))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(exname -> bool) -> bool) (\(e :exname).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INL :exname ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one) $0))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\ ((? :(label -> bool) -> bool) (\(l :label).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INL :label ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one) $0)))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one) one))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one) one)))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INL :one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) one)))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one) one))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INL :one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   one)))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\ ((? :(strid -> bool) -> bool) (\(s :strid).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :strid ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   $0))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   one)))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one) one)))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INL :one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one) one))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INL :one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one) one)))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(sval -> bool) -> bool) (\(s :sval).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INL :sval ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one) $0))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(basval -> bool) -> bool) (\(b :basval).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INL :basval ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one) $0)))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(con -> bool) -> bool) (\(c :con).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INL :con ->
          con + con + one + one + addr + one + var + one + one + one +
          one) $0)))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   ((? :(con -> bool) -> bool) (\(c :con).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INL :con ->
          con + one + one + addr + one + var + one + one + one + one)
   $0))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INL :one -> one + one + addr + one + var + one + one + one + one)
   one)))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INL :one -> one + addr + one + var + one + one + one + one)
   one))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\ ((? :(addr -> bool) -> bool) (\(a :addr).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INL :addr -> addr + one + var + one + one + one + one)
   $0)))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INL :one -> one + var + one + one + one + one)
   one))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\ ((? :(var -> bool) -> bool) (\(v :var).
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $2)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INL :var -> var + one + one + one + one)
   $0)))))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((\/
   ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INL :one -> one + one + one + one) one)))))))))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) 0))) ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INL :one -> one + one + one) one))))))))))))))))))))))))))))
   (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC (SUC 0)))))
   ((\/ ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INR :one + one -> one + one + one) ((INL :one -> one + one)
   one))))))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC 0)))) ((/\
   (((= :match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one ->
         match + exconenv + exname + exname + label + one + one +
         one + one + one + strid + one + one + one + one + sval +
         basval + con + con + one + one + addr + one + var + one +
         one + one + one -> bool) $1)
   ((INR :exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          match + exconenv + exname + exname + label + one + one +
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          exconenv + exname + exname + label + one + one + one + one +
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          exname + exname + label + one + one + one + one + one +
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          exname + label + one + one + one + one + one + strid + one +
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          label + one + one + one + one + one + strid + one + one +
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + one + one + one + one + strid + one + one + one +
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          one + one + one + one + strid + one + one + one + one +
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + one + strid + one + one + one + one + sval +
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one +
          one ->
          one + one + strid + one + one + one + one + sval + basval +
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one ->
          one + strid + one + one + one + one + sval + basval + con +
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one ->
          strid + one + one + one + one + sval + basval + con + con +
          one + one + addr + one + var + one + one + one + one)
   ((INR :one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one ->
          one + one + one + one + sval + basval + con + con + one +
          one + addr + one + var + one + one + one + one)
   ((INR :one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one ->
          one + one + one + sval + basval + con + con + one + one +
          addr + one + var + one + one + one + one)
   ((INR :one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one ->
          one + one + sval + basval + con + con + one + one + addr +
          one + var + one + one + one + one)
   ((INR :sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one ->
          one + sval + basval + con + con + one + one + addr + one +
          var + one + one + one + one)
   ((INR :basval + con + con + one + one + addr + one + var + one +
          one + one + one ->
          sval + basval + con + con + one + one + addr + one + var +
          one + one + one + one)
   ((INR :con + con + one + one + addr + one + var + one + one + one +
          one ->
          basval + con + con + one + one + addr + one + var + one +
          one + one + one)
   ((INR :con + one + one + addr + one + var + one + one + one +
          one ->
          con + con + one + one + addr + one + var + one + one + one +
          one)
   ((INR :one + one + addr + one + var + one + one + one + one ->
          con + one + one + addr + one + var + one + one + one + one)
   ((INR :one + addr + one + var + one + one + one + one ->
          one + one + addr + one + var + one + one + one + one)
   ((INR :addr + one + var + one + one + one + one ->
          one + addr + one + var + one + one + one + one)
   ((INR :one + var + one + one + one + one ->
          addr + one + var + one + one + one + one)
   ((INR :var + one + one + one + one ->
          one + var + one + one + one + one)
   ((INR :one + one + one + one -> var + one + one + one + one)
   ((INR :one + one + one -> one + one + one + one)
   ((INR :one + one -> one + one + one) ((INR :one -> one + one)
   one))))))))))))))))))))))))))))) (((= :num -> num -> bool)
   ((LENGTH :(match + exconenv + exname + exname + label + one + one +
             one + one + one + strid + one + one + one + one + sval +
             basval + con + con + one + one + addr + one + var + one +
             one + one + one) ltree list -> num) $0)) (SUC
   0)))))))))))))))))))))))))))))))))) $0)))`)]
theorems =
[((eval_induction),
  [],
  `((! :((atexp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(P_atexp :atexp -> state -> env -> state -> val_pack -> bool).
   ((! :((exprow -> state -> env -> state -> record_pack -> bool) ->
        bool) -> bool)
   (\(P_exprow :exprow -> state -> env -> state -> record_pack ->
                bool).
   ((! :((exp -> state -> env -> state -> val_pack -> bool) ->
        bool) -> bool)
   (\(P_exp :exp -> state -> env -> state -> val_pack -> bool).
   ((! :((match -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(P_match :match -> state -> env -> val -> state ->
               val_pack_fail -> bool).
   ((! :((mrule -> state -> env -> val -> state -> val_pack_fail ->
         bool) -> bool) -> bool)
   (\(P_mrule :mrule -> state -> env -> val -> state ->
               val_pack_fail -> bool).
   ((! :((dec -> state -> env -> state -> env_pack -> bool) ->
        bool) -> bool)
   (\(P_dec :dec -> state -> env -> state -> env_pack -> bool).
   ((! :((valbind -> state -> env -> state -> varenv_pack -> bool) ->
        bool) -> bool)
   (\(P_valbind :valbind -> state -> env -> state -> varenv_pack ->
                 bool). ((==> ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(scon -> bool) -> bool) (\(scon :scon). ((((($9 (SCONatexp
   $0)) $2) $1) $2) (VALvp (SVALval (value_of $0))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(var long -> bool) -> bool) (\(longvar :var long).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   (((= :val lift -> val lift -> bool) ((lookuplongvar_env $2) $1))
   ((lift :val -> val lift) $0))) ((((($10 (VARatexp $1)) $3) $2) $3)
   (VALvp $0)))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(con -> bool) -> bool) (\(con :con). ((==>
   (((= :con -> con -> bool) ((long_base :con long -> con) $1)) $0))
   ((((($10 (CONatexp $1)) $3) $2) $3) (VALvp (CONval $0)))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(excon long -> bool) -> bool) (\(longexcon :excon long). ((==>
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $2)
   $0)) ((lift :exname -> exname lift) $1))) ((((($10 (EXCONatexp $0))
   $3) $2) $3) (VALvp (EXVALval (NAMEexval $1)))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((((($8 (RECORDatexp
   (NONE :exprow option))) $1) $0) $1) (VALvp (RECORDval
   empty_record)))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exprow -> bool) -> bool) (\(exprow :exprow).
   ((! :(record -> bool) -> bool) (\(r :record). ((==> ((((($10 $1)
   $4) $3) $2) (RECORDrp $0))) ((((($11 (RECORDatexp
   ((SOME :exprow -> exprow option) $1))) $4) $3) $2) (VALvp
   (RECORDval ((add_record empty_record) $0)))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exprow -> bool) -> bool) (\(exprow :exprow).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($10 $1) $4)
   $3) $2) (PACKrp $0))) ((((($11 (RECORDatexp
   ((SOME :exprow -> exprow option) $1))) $4) $3) $2) (PACKvp
   $0)))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec :dec).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(env -> bool) -> bool) (\(E' :env). ((==> ((/\ ((((($9 $4) $7)
   $6) $1) (ENVep $0))) ((((($12 $3) $1) ((add_env $6) $0)) $5) (VALvp
   $2)))) ((((($14 ((LETatexp $4) $3)) $7) $6) $5) (VALvp
   $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec :dec).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($7 $2) $5) $4)
   $3) (PACKep $0))) ((((($12 ((LETatexp $2) $1)) $5) $4) $3) (PACKvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec :dec).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(env -> bool) -> bool) (\(E' :env). ((==> ((/\ ((((($9 $4) $7)
   $6) $1) (ENVep $0))) ((((($12 $3) $1) ((add_env $6) $0)) $5)
   (PACKvp $2)))) ((((($14 ((LETatexp $4) $3)) $7) $6) $5) (PACKvp
   $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val_pack -> bool) -> bool) (\(vp :val_pack). ((==> ((((($9
   $1) $4) $3) $2) $0)) ((((($11 (PARatexp $1)) $4) $3) $2)
   $0))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((((($10 $1) $5) $4)
   $3) (VALvp $0))) ((((($11 (((EXPROW $2) $1) (NONE :exprow option)))
   $5) $4) $3) (RECORDrp (((insert_into_record empty_record) $2)
   $0))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(exprow option -> bool) -> bool) (\(exprow_op :exprow option).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($11 $2) $6)
   $5) $4) (PACKvp $0))) ((((($12 (((EXPROW $3) $2) $1)) $6) $5) $4)
   (PACKrp $0)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(exprow -> bool) -> bool) (\(exprow :exprow).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($13
   $4) $8) $7) $0) (VALvp $2))) ((((($14 $3) $0) $7) $6) (RECORDrp
   $1)))) ((((($14 (((EXPROW $5) $4) ((SOME :exprow -> exprow option)
   $3))) $8) $7) $6) (RECORDrp ((add_record (((insert_into_record
   empty_record) $5) $2)) $1))))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(exprow -> bool) -> bool) (\(exprow :exprow).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((/\ ((((($13 $4) $8)
   $7) $1) (VALvp $0))) ((((($14 $3) $1) $7) $6) (PACKrp $2))))
   ((((($14 (((EXPROW $5) $4) ((SOME :exprow -> exprow option) $3)))
   $8) $7) $6) (PACKrp $2)))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(val_pack -> bool) -> bool) (\(vp :val_pack). ((==> ((((($11
   $1) $4) $3) $2) $0)) ((((($9 (ATEXPexp $1)) $4) $3) $2)
   $0))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(con -> bool) -> bool) (\(c :con). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\
   ((((($12 $4) $7) $6) $0) (VALvp (CONval $2)))) ((/\ (~
   (((= :con -> con -> bool) $2) (CON "ref")))) ((((($14 $3) $0) $6)
   $5) (VALvp $1))))) ((((($12 ((APPexp $4) $3)) $7) $6) $5) (VALvp
   ((APPCONval $2) $1))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($10 $2) $5)
   $4) $3) (PACKvp $0))) ((((($10 ((APPexp $2) $1)) $5) $4) $3)
   (PACKvp $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(con -> bool) -> bool) (\(c :con). ((==> ((/\ ((((($12 $4) $7)
   $6) $1) (VALvp (CONval $0)))) ((/\ (~ (((= :con -> con -> bool) $0)
   (CON "ref")))) ((((($14 $3) $1) $6) $5) (PACKvp $2))))) ((((($12
   ((APPexp $4) $3)) $7) $6) $5) (PACKvp $2)))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($12
   $4) $7) $6) $0) (VALvp (EXVALval (NAMEexval $2))))) ((((($14 $3)
   $0) $6) $5) (VALvp $1)))) ((((($12 ((APPexp $4) $3)) $7) $6) $5)
   (VALvp (EXVALval ((NAMEVALexval $2) $1)))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==> ((/\ ((((($12
   $4) $7) $6) $1) (VALvp (EXVALval (NAMEexval $0))))) ((((($14 $3)
   $1) $6) $5) (PACKvp $2)))) ((((($12 ((APPexp $4) $3)) $7) $6) $5)
   (PACKvp $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(addr -> bool) -> bool) (\(a :addr).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($12
   $4) $7) $6) $0) (VALvp (CONval (CON "ref"))))) ((/\ ((((($14 $3)
   $0) $6) $5) (VALvp $1))) (((= :addr -> addr -> bool) $2) (new_addr
   $5))))) ((((($12 ((APPexp $4) $3)) $7) $6) (((insert_into_state_mem
   $5) $2) $1)) (VALvp (ADDRval $2))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($11
   $3) $6) $5) $0) (VALvp (CONval (CON "ref"))))) ((((($13 $2) $0) $5)
   $4) (PACKvp $1)))) ((((($11 ((APPexp $3) $2)) $6) $5) $4) (PACKvp
   $1)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(addr -> bool) -> bool) (\(a :addr).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($12
   $4) $7) $6) $0) (VALvp ASSGval))) ((((($14 $3) $0) $6) $5) (VALvp
   (RECORDval (((insert_into_record (((insert_into_record
   empty_record) (LABEL "1")) (ADDRval $2))) (LABEL "2")) $1))))))
   ((((($12 ((APPexp $4) $3)) $7) $6) (((insert_into_state_mem $5) $2)
   $1)) (VALvp (RECORDval empty_record))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($11
   $3) $6) $5) $0) (VALvp ASSGval))) ((((($13 $2) $0) $5) $4) (PACKvp
   $1)))) ((((($11 ((APPexp $3) $2)) $6) $5) $4) (PACKvp
   $1)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(val_pack -> bool) -> bool) (\(v' :val_pack).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(basval -> bool) -> bool) (\(b :basval).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((/\ ((((($13 $5) $8)
   $7) $2) (VALvp (BASval $1)))) ((/\ ((((($15 $4) $2) $7) $6) (VALvp
   $0))) (((= :val_pack -> val_pack -> bool) ((apply $1) $0)) $3))))
   ((((($13 ((APPexp $5) $4)) $8) $7) $6) $3))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(basval -> bool) -> bool) (\(b :basval). ((==> ((/\ ((((($12
   $4) $7) $6) $1) (VALvp (BASval $0)))) ((((($14 $3) $1) $6) $5)
   (PACKvp $2)))) ((((($12 ((APPexp $4) $3)) $7) $6) $5) (PACKvp
   $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(val -> bool) -> bool) (\(v' :val).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(state -> bool) -> bool) (\(s3 :state).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(env -> bool) -> bool) (\(E' :env).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((/\ ((((($16 $8)
   $11) $10) $5) (VALvp (CLOSUREval (((CLOSURE $3) $2) $1))))) ((/\
   ((((($18 $7) $5) $10) $4) (VALvp $0))) (((((($15 $3) $4) ((add_env
   $2) (((ENV empty_strenv) (rec_varenv $1)) empty_exconenv))) $0) $9)
   (VALvpf $6))))) ((((($16 ((APPexp $8) $7)) $11) $10) $9) (VALvp
   $6)))))))))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s3 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(env -> bool) -> bool) (\(E' :env).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> ((/\ ((((($14
   $6) $9) $8) $3) (VALvp (CLOSUREval (((CLOSURE $2) $1) $0)))))
   ((((($16 $5) $3) $8) $7) (PACKvp $4)))) ((((($14 ((APPexp $6) $5))
   $9) $8) $7) (PACKvp $4)))))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(state -> bool) -> bool) (\(s3 :state).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(env -> bool) -> bool) (\(E' :env).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((/\ ((((($16 $8)
   $11) $10) $5) (VALvp (CLOSUREval (((CLOSURE $3) $2) $1))))) ((/\
   ((((($18 $7) $5) $10) $4) (VALvp $0))) (((((($15 $3) $4) ((add_env
   $2) (((ENV empty_strenv) (rec_varenv $1)) empty_exconenv))) $0) $9)
   (PACKvpf $6))))) ((((($16 ((APPexp $8) $7)) $11) $10) $9) (PACKvp
   $6)))))))))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(atexp -> bool) -> bool) (\(atexp :atexp).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(state -> bool) -> bool) (\(s3 :state).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(env -> bool) -> bool) (\(E' :env).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((/\ ((((($15 $7)
   $10) $9) $5) (VALvp (CLOSUREval (((CLOSURE $3) $2) $1))))) ((/\
   ((((($17 $6) $5) $9) $4) (VALvp $0))) (((((($14 $3) $4) ((add_env
   $2) (((ENV empty_strenv) (rec_varenv $1)) empty_exconenv))) $0) $8)
   FAILvpf)))) ((((($15 ((APPexp $7) $6)) $10) $9) $8) (PACKvp (PACK
   (NAMEexval (EXNAME 7))))))))))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((((($10 $2) $5) $4)
   $3) (VALvp $0))) ((((($10 ((HANDLEexp $2) $1)) $5) $4) $3) (VALvp
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exval -> bool) -> bool) (\(e :exval). ((==> ((/\ ((((($12 $4)
   $7) $6) $1) (PACKvp (PACK $0)))) (((((($11 $3) $1) $6) (EXVALval
   $0)) $5) (VALvpf $2)))) ((((($12 ((HANDLEexp $4) $3)) $7) $6) $5)
   (VALvp $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exval -> bool) -> bool) (\(e :exval). ((==> ((/\ ((((($12 $4)
   $7) $6) $1) (PACKvp (PACK $0)))) (((((($11 $3) $1) $6) (EXVALval
   $0)) $5) (PACKvpf $2)))) ((((($12 ((HANDLEexp $4) $3)) $7) $6) $5)
   (PACKvp $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(exval -> bool) -> bool) (\(e :exval).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($11
   $3) $6) $5) $0) (PACKvp (PACK $1)))) (((((($10 $2) $0) $5)
   (EXVALval $1)) $4) FAILvpf))) ((((($11 ((HANDLEexp $3) $2)) $6) $5)
   $4) (PACKvp (PACK $1))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(exval -> bool) -> bool) (\(e :exval). ((==> ((((($9 $1) $4)
   $3) $2) (VALvp (EXVALval $0)))) ((((($9 (RAISEexp $1)) $4) $3) $2)
   (PACKvp (PACK $0))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($9 $1) $4) $3)
   $2) (PACKvp $0))) ((((($9 (RAISEexp $1)) $4) $3) $2) (PACKvp
   $0)))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(match -> bool) -> bool) (\(match :match). ((((($7 (FNexp $0))
   $2) $1) $2) (VALvp (CLOSUREval (((CLOSURE $0) $1)
   empty_varenv))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(mrule -> bool) -> bool) (\(mrule :mrule).
   ((! :(match option -> bool) -> bool) (\(match_op :match option).
   ((! :(val -> bool) -> bool) (\(v :val). ((! :(val -> bool) -> bool)
   (\(v' :val). ((==> (((((($9 $3) $6) $5) $1) $4) (VALvpf $0)))
   (((((($10 ((MATCH $3) $2)) $6) $5) $1) $4) (VALvpf
   $0)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(mrule -> bool) -> bool) (\(mrule :mrule).
   ((! :(match option -> bool) -> bool) (\(match_op :match option).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> (((((($9 $3) $6)
   $5) $1) $4) (PACKvpf $0))) (((((($10 ((MATCH $3) $2)) $6) $5) $1)
   $4) (PACKvpf $0)))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(mrule -> bool) -> bool) (\(mrule :mrule).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> (((((($7 $1) $4) $3)
   $0) $2) FAILvpf)) (((((($8 ((MATCH $1) (NONE :match option))) $4)
   $3) $0) $2) FAILvpf))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(mrule -> bool) -> bool) (\(mrule :mrule).
   ((! :(match -> bool) -> bool) (\(match :match).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(val_pack_fail -> bool) -> bool) (\(vpf :val_pack_fail).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ (((((($10
   $4) $7) $6) $2) $0) FAILvpf)) (((((($11 $3) $0) $6) $2) $5) $1)))
   (((((($11 ((MATCH $4) ((SOME :match -> match option) $3))) $7) $6)
   $2) $5) $1))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val). ((! :(val -> bool) -> bool)
   (\(v' :val). ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> ((/\
   ((((((eval_pat $5) $8) $7) $3) $1) (VARENVvef $0))) ((((($13 $4)
   $1) ((add_env $7) (((ENV empty_strenv) $0) empty_exconenv))) $6)
   (VALvp $2)))) (((((($11 ((MRULE $5) $4)) $8) $7) $3) $6) (VALvpf
   $2)))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> ((/\
   ((((((eval_pat $5) $8) $7) $3) $1) (VARENVvef $0))) ((((($13 $4)
   $1) ((add_env $7) (((ENV empty_strenv) $0) empty_exconenv))) $6)
   (PACKvp $2)))) (((((($11 ((MRULE $5) $4)) $8) $7) $3) $6) (PACKvpf
   $2)))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((((((eval_pat $2)
   $5) $4) $0) $3) FAILvef)) (((((($8 ((MRULE $2) $1)) $5) $4) $0) $3)
   FAILvpf))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> ((((($5 $1)
   $4) $3) $2) (VARENVvep $0))) ((((($6 (VALdec $1)) $4) $3) $2)
   (ENVep (((ENV empty_strenv) $0) empty_exconenv))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($5 $1) $4) $3)
   $2) (PACKvep $0))) ((((($6 (VALdec $1)) $4) $3) $2) (PACKep
   $0)))))))))))))) ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exbind -> bool) -> bool) (\(exbind :exbind).
   ((! :(exconenv -> bool) -> bool) (\(EE :exconenv). ((==>
   (((((eval_exbind $1) $4) $3) $2) (EXCONENVeep $0))) ((((($6
   (EXCEPTdec $1)) $4) $3) $2) (ENVep (((ENV empty_strenv)
   empty_varenv) $0))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(exbind -> bool) -> bool) (\(exbind :exbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> (((((eval_exbind
   $1) $4) $3) $2) (PACKeep $0))) ((((($6 (EXCEPTdec $1)) $4) $3) $2)
   (PACKep $0)))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(env -> bool) -> bool) (\(E2 :env).
   ((! :(env -> bool) -> bool) (\(E1 :env).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($9 $4)
   $7) $6) $0) (ENVep $1))) ((((($9 $3) $0) ((add_env $6) $1)) $5)
   (ENVep $2)))) ((((($9 ((LOCALdec $4) $3)) $7) $6) $5) (ENVep
   $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($7 $2) $5) $4)
   $3) (PACKep $0))) ((((($7 ((LOCALdec $2) $1)) $5) $4) $3) (PACKep
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(env -> bool) -> bool) (\(E1 :env).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($9 $4)
   $7) $6) $0) (ENVep $1))) ((((($9 $3) $0) ((add_env $6) $1)) $5)
   (PACKep $2)))) ((((($9 ((LOCALdec $4) $3)) $7) $6) $5) (PACKep
   $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(strid long nonemptylist -> bool) -> bool)
   (\(longstrid_1_n :strid long nonemptylist).
   ((! :(env nonemptylist -> bool) -> bool)
   (\(E_1_n :env nonemptylist). ((==>
   (((= :env lift nonemptylist -> env lift nonemptylist -> bool)
   (((nonempty_MAP :(strid long -> env lift) ->
                    strid long nonemptylist -> env lift nonemptylist)
   (lookuplongstrid_env $2)) $1))
   (((nonempty_MAP :(env -> env lift) -> env nonemptylist ->
                    env lift nonemptylist) (lift :env -> env lift))
   $0))) ((((($5 (OPENdec $1)) $3) $2) $3) (ENVep
   (add_nonemptylist_env $0))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((((($3 EMPTYdec) $1) $0)
   $1) (ENVep (((ENV empty_strenv) empty_varenv)
   empty_exconenv)))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(env -> bool) -> bool) (\(E1 :env).
   ((! :(env -> bool) -> bool) (\(E2 :env).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($9 $4)
   $7) $6) $0) (ENVep $2))) ((((($9 $3) $0) ((add_env $6) $2)) $5)
   (ENVep $1)))) ((((($9 ((SEQdec $4) $3)) $7) $6) $5) (ENVep
   ((add_env $2) $1))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($7 $2) $5) $4)
   $3) (PACKep $0))) ((((($7 ((SEQdec $2) $1)) $5) $4) $3) (PACKep
   $0)))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(dec -> bool) -> bool) (\(dec1 :dec).
   ((! :(dec -> bool) -> bool) (\(dec2 :dec).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(env -> bool) -> bool) (\(E1 :env).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($9 $4)
   $7) $6) $0) (ENVep $1))) ((((($9 $3) $0) ((add_env $6) $1)) $5)
   (PACKep $2)))) ((((($9 ((SEQdec $4) $3)) $7) $6) $5) (PACKep
   $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($12
   $3) $7) $6) $0) (VALvp $1))) ((((((eval_pat $4) $0) $6) $1) $5)
   (VARENVvef $2)))) ((((($8 (((PLAINvalbind $4) $3)
   (NONE :valbind option))) $7) $6) $5) (VARENVvep
   $2)))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($10 $1) $5)
   $4) $3) (PACKvp $0))) ((((($6 (((PLAINvalbind $2) $1)
   (NONE :valbind option))) $5) $4) $3) (PACKvep $0))))))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(varenv -> bool) -> bool) (\(VE' :varenv).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(state -> bool) -> bool) (\(s3 :state). ((==> ((/\ ((((($15
   $6) $10) $9) $1) (VALvp $2))) ((/\ ((((((eval_pat $7) $1) $9) $2)
   $0) (VARENVvef $4))) ((((($11 $5) $0) $9) $8) (VARENVvep $3)))))
   ((((($11 (((PLAINvalbind $7) $6) ((SOME :valbind -> valbind option)
   $5))) $10) $9) $8) (VARENVvep ((add_varenv $4)
   $3))))))))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($11 $2) $6)
   $5) $4) (PACKvp $0))) ((((($7 (((PLAINvalbind $3) $2)
   ((SOME :valbind -> valbind option) $1))) $6) $5) $4) (PACKvep
   $0)))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s4 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(state -> bool) -> bool) (\(s3 :state). ((==> ((/\ ((((($15
   $6) $10) $9) $1) (VALvp $3))) ((/\ ((((((eval_pat $7) $1) $9) $3)
   $0) (VARENVvef $2))) ((((($11 $5) $0) $9) $8) (PACKvep $4)))))
   ((((($11 (((PLAINvalbind $7) $6) ((SOME :valbind -> valbind option)
   $5))) $10) $9) $8) (PACKvep $4)))))))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($11
   $2) $6) $5) $0) (VALvp $1))) ((((((eval_pat $3) $0) $5) $1) $4)
   FAILvef))) ((((($7 (((PLAINvalbind $3) $2) (NONE :valbind option)))
   $6) $5) $4) (PACKvep (PACK (NAMEexval (EXNAME
   8))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(exp -> bool) -> bool) (\(exp :exp).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ ((((($12
   $3) $7) $6) $0) (VALvp $1))) ((((((eval_pat $4) $0) $6) $1) $5)
   FAILvef))) ((((($8 (((PLAINvalbind $4) $3)
   ((SOME :valbind -> valbind option) $2))) $7) $6) $5) (PACKvep (PACK
   (NAMEexval (EXNAME 8))))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> ((((($5 $1)
   $4) $3) $2) (VARENVvep $0))) ((((($5 (RECvalbind $1)) $4) $3) $2)
   (VARENVvep (rec_varenv $0)))))))))))))))
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(valbind -> bool) -> bool) (\(valbind :valbind).
   ((! :(pack -> bool) -> bool) (\(p :pack). ((==> ((((($5 $1) $4) $3)
   $2) (PACKvep $0))) ((((($5 (RECvalbind $1)) $4) $3) $2) (PACKvep
   $0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
   ((/\ ((! :(atexp -> bool) -> bool) (\(ae :atexp).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(val_pack -> bool) -> bool) (\(vp :val_pack). ((==>
   (((((eval_atexp $4) $3) $2) $1) $0)) ((((($11 $4) $3) $2) $1)
   $0))))))))))))) ((/\ ((! :(exprow -> bool) -> bool) (\(er :exprow).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(record_pack -> bool) -> bool) (\(rp :record_pack). ((==>
   (((((eval_exprow $4) $3) $2) $1) $0)) ((((($10 $4) $3) $2) $1)
   $0))))))))))))) ((/\ ((! :(exp -> bool) -> bool) (\(ex :exp).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(val_pack -> bool) -> bool) (\(vp :val_pack). ((==>
   (((((eval_exp $4) $3) $2) $1) $0)) ((((($9 $4) $3) $2) $1)
   $0))))))))))))) ((/\ ((! :(match -> bool) -> bool) (\(mat :match).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(v :env). ((! :(val -> bool) -> bool)
   (\(e :val). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(val_pack_fail -> bool) -> bool) (\(vpf :val_pack_fail). ((==>
   ((((((eval_match $5) $4) $3) $2) $1) $0)) (((((($9 $5) $4) $3) $2)
   $1) $0))))))))))))))) ((/\ ((! :(mrule -> bool) -> bool)
   (\(mr :mrule). ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(v :env). ((! :(val -> bool) -> bool)
   (\(e :val). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(val_pack_fail -> bool) -> bool) (\(vpf :val_pack_fail). ((==>
   ((((((eval_mrule $5) $4) $3) $2) $1) $0)) (((((($8 $5) $4) $3) $2)
   $1) $0))))))))))))))) ((/\ ((! :(dec -> bool) -> bool) (\(d :dec).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env_pack -> bool) -> bool) (\(ep :env_pack). ((==>
   (((((eval_dec $4) $3) $2) $1) $0)) ((((($6 $4) $3) $2) $1)
   $0))))))))))))) ((! :(valbind -> bool) -> bool) (\(vb :valbind).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(varenv_pack -> bool) -> bool) (\(vep :varenv_pack). ((==>
   (((((eval_valbind $4) $3) $2) $1) $0)) ((((($5 $4) $3) $2) $1)
   $0)))))))))))))))))))))))))))))))))`),
 ((EVAL_RULES_SATISFIED),
  [],
  `(((((((eval_pred eval_atexp) eval_exprow) eval_exp) eval_match)
   eval_mrule) eval_dec) eval_valbind)`),
 ((eval_pat_induction),
  [],
  `((! :((atpat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(P_atpat :atpat -> state -> env -> val -> state -> varenv_fail ->
               bool).
   ((! :((patrow -> state -> env -> record -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(P_patrow :patrow -> state -> env -> record -> state ->
                varenv_fail -> bool).
   ((! :((pat -> state -> env -> val -> state -> varenv_fail ->
         bool) -> bool) -> bool)
   (\(P_pat :pat -> state -> env -> val -> state -> varenv_fail ->
             bool). ((==> ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(val -> bool) -> bool) (\(v :val). (((((($5 WILDCARDatpat) $2)
   $1) $0) $2) (VARENVvef empty_varenv))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(scon -> bool) -> bool) (\(scon :scon).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   (((= :val -> val -> bool) $0) (SVALval (value_of $1)))) (((((($6
   (SCONatpat $1)) $3) $2) $0) $3) (VARENVvef empty_varenv))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(scon -> bool) -> bool) (\(scon :scon).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> (~
   (((= :val -> val -> bool) $0) (SVALval (value_of $1))))) (((((($6
   (SCONatpat $1)) $3) $2) $0) $3) FAILvef))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(var -> bool) -> bool)
   (\(var :var). ((! :(val -> bool) -> bool) (\(v :val). (((((($6
   (VARatpat $1)) $3) $2) $0) $3) (VARENVvef (((insert_into_varenv
   empty_varenv) $1) $0)))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(val -> bool) -> bool) (\(v :val). ((==>
   (((= :val -> val -> bool) $0) (CONval ((long_base :con long -> con)
   $1)))) (((((($6 (CONatpat $1)) $3) $2) $0) $3) (VARENVvef
   empty_varenv)))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> (~
   (((= :val -> val -> bool) $0) (CONval ((long_base :con long -> con)
   $1))))) (((((($6 (CONatpat $1)) $3) $2) $0) $3) FAILvef)))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(excon long -> bool) -> bool) (\(longexcon :excon long).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==>
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $2)
   $1)) ((lift :exname -> exname lift) $0))) (((((($6 (EXCONatpat $1))
   $3) $2) (EXVALval (NAMEexval $0))) $3) (VARENVvef
   empty_varenv)))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(excon long -> bool) -> bool) (\(longexcon :excon long).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(exname -> bool) -> bool) (\(en' :exname). ((==> ((/\
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $3)
   $2)) ((lift :exname -> exname lift) $0))) (~
   (((= :exname -> exname -> bool) $1) $0)))) (((((($7 (EXCONatpat
   $2)) $4) $3) (EXVALval (NAMEexval $1))) $4) FAILvef)))))))))))))
   ((/\ ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((==> (((= :val -> val -> bool) $0) (RECORDval
   empty_record))) (((((($5 (RECORDatpat (NONE :patrow option))) $2)
   $1) $0) $2) (VARENVvef empty_varenv)))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(patrow -> bool) -> bool) (\(patrow :patrow).
   ((! :(record -> bool) -> bool) (\(r :record). ((==> ((/\
   (((= :val -> val -> bool) $3) (RECORDval ((add_record empty_record)
   $0)))) (((((($8 $1) $6) $4) $0) $5) (VARENVvef $2)))) (((((($9
   (RECORDatpat ((SOME :patrow -> patrow option) $1))) $6) $4) $3) $5)
   (VARENVvef ((add_varenv empty_varenv) $2))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(patrow -> bool) -> bool) (\(patrow :patrow).
   ((! :(record -> bool) -> bool) (\(r :record). ((==> ((/\
   (((= :val -> val -> bool) $2) (RECORDval ((add_record empty_record)
   $0)))) (((((($7 $1) $5) $3) $0) $4) FAILvef))) (((((($8
   (RECORDatpat ((SOME :patrow -> patrow option) $1))) $5) $3) $2) $4)
   FAILvef))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(varenv_fail -> bool) -> bool)
   (\(vef :varenv_fail). ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((==> (((((($6 $0) $5) $3) $2) $4) $1)) (((((($8 (PARatpat $0)) $5)
   $3) $2) $4) $1))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record). (((((($4 DOTDOTDOT)
   $2) $1) $0) $2) (VARENVvef empty_varenv))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat). ((==> (((((($6 $0) $5)
   $3) ((lower :val lift -> val) ((lookup_label $2) $1))) $4)
   FAILvef)) (((((($7 (((PATROW $1) $0) (NONE :patrow option))) $5)
   $3) $2) $4) FAILvef))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(patrow -> bool) -> bool) (\(patrow :patrow). ((==> (((((($7
   $1) $6) $4) ((lower :val lift -> val) ((lookup_label $3) $2))) $5)
   FAILvef)) (((((($8 (((PATROW $2) $1)
   ((SOME :patrow -> patrow option) $0))) $6) $4) $3) $5)
   FAILvef))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> (((((($7 $1)
   $6) $4) ((lower :val lift -> val) ((lookup_label $3) $2))) $5)
   (VARENVvef $0))) (((((($8 (((PATROW $2) $1) (NONE :patrow option)))
   $6) $4) $3) $5) (VARENVvef $0)))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(patrow -> bool) -> bool) (\(patrow :patrow).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv).
   ((! :(varenv -> bool) -> bool) (\(VE' :varenv).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\ (((((($10
   $4) $9) $7) ((lower :val lift -> val) ((lookup_label $6) $5))) $0)
   (VARENVvef $2))) (((((($11 $3) $0) $7) $6) $8) (VARENVvef $1))))
   (((((($11 (((PATROW $5) $4) ((SOME :patrow -> patrow option) $3)))
   $9) $7) $6) $8) (VARENVvef ((add_varenv $2)
   $1))))))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(label -> bool) -> bool) (\(lab :label).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(patrow -> bool) -> bool) (\(patrow :patrow).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> ((/\ (((((($9
   $3) $8) $6) ((lower :val lift -> val) ((lookup_label $5) $4))) $1)
   (VARENVvef $0))) (((((($10 $2) $1) $6) $5) $7) FAILvef))) (((((($10
   (((PATROW $4) $3) ((SOME :patrow -> patrow option) $2))) $8) $6)
   $5) $7) FAILvef))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(atpat -> bool) -> bool) (\(atpat :atpat).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail). ((==>
   (((((($8 $1) $5) $3) $2) $4) $0)) (((((($6 (ATPATpat $1)) $5) $3)
   $2) $4) $0))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s1 :state). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(atpat -> bool) -> bool) (\(atpat :atpat).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail).
   ((! :(con -> bool) -> bool) (\(con :con).
   ((! :(val -> bool) -> bool) (\(v' :val). ((==> ((/\
   (((= :con -> con -> bool) ((long_base :con long -> con) $4)) $1))
   ((/\ (~ (((= :con -> con -> bool) $1) (CON "ref")))) ((/\
   (((= :val -> val -> bool) $5) ((APPCONval $1) $0))) (((((($11 $3)
   $8) $6) $0) $7) $2))))) (((((($9 ((CONpat $4) $3)) $8) $6) $5) $7)
   $2))))))))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(val -> bool) -> bool) (\(v :val).
   ((! :(con long -> bool) -> bool) (\(longcon :con long).
   ((! :(atpat -> bool) -> bool) (\(atpat :atpat).
   ((! :(con -> bool) -> bool) (\(con :con). ((==> ((/\
   (((= :con -> con -> bool) ((long_base :con long -> con) $2)) $0))
   ((/\ (~ (((= :con -> con -> bool) $0) (CON "ref"))))
   ((! :(val -> bool) -> bool) (\(v' :val). (~
   (((= :val -> val -> bool) $4) ((APPCONval $1) $0)))))))) (((((($6
   ((CONpat $2) $1)) $5) $4) $3) $5) FAILvef))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(excon long -> bool) -> bool)
   (\(longexcon :excon long). ((! :(atpat -> bool) -> bool)
   (\(atpat :atpat). ((! :(varenv_fail -> bool) -> bool)
   (\(vef :varenv_fail). ((! :(val -> bool) -> bool) (\(v' :val).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==> ((/\
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $6)
   $4)) ((lift :exname -> exname lift) $0))) ((/\
   (((= :val -> val -> bool) $5) (EXVALval ((NAMEVALexval $0) $1))))
   (((((($11 $3) $8) $6) $1) $7) $2)))) (((((($9 ((EXCONpat $4) $3))
   $8) $6) $5) $7) $2))))))))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(excon long -> bool) -> bool)
   (\(longexcon :excon long). ((! :(atpat -> bool) -> bool)
   (\(atpat :atpat). ((! :(exname -> bool) -> bool) (\(en :exname).
   ((==> ((/\ (((= :exname lift -> exname lift -> bool)
   ((lookuplongexcon_env $4) $2)) ((lift :exname -> exname lift) $0)))
   ((! :(val -> bool) -> bool) (\(v' :val). (~
   (((= :val -> val -> bool) $4) (EXVALval ((NAMEVALexval $1)
   $0)))))))) (((((($6 ((EXCONpat $2) $1)) $5) $4) $3) $5)
   FAILvef))))))))))))))) ((/\ ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(addr -> bool) -> bool) (\(a :addr).
   ((! :(atpat -> bool) -> bool) (\(atpat :atpat).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail).
   ((! :(val -> bool) -> bool) (\(v :val). ((==> ((/\
   (((= :val lift -> val lift -> bool) ((lookupaddr_state $5) $3))
   ((lift :val -> val lift) $0))) (((((($8 $2) $5) $4) $0) $5) $1)))
   (((((($6 ((CONpat ((BASE :con -> con long) (CON "ref"))) $2)) $5)
   $4) (ADDRval $3)) $5) $1))))))))))))))) ((/\
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(var -> bool) -> bool) (\(var :var).
   ((! :(pat -> bool) -> bool) (\(pat :pat).
   ((! :(varenv -> bool) -> bool) (\(VE :varenv). ((==> (((((($7 $1)
   $6) $4) $3) $5) (VARENVvef $0))) (((((($7 ((LAYEREDpat $2) $1)) $6)
   $4) $3) $5) (VARENVvef ((add_varenv (((insert_into_varenv
   empty_varenv) $2) $3)) $0)))))))))))))))))))
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(env -> bool) -> bool) (\(E :env). ((! :(val -> bool) -> bool)
   (\(v :val). ((! :(var -> bool) -> bool) (\(var :var).
   ((! :(pat -> bool) -> bool) (\(pat :pat). ((==> (((((($6 $0) $5)
   $3) $2) $4) FAILvef)) (((((($6 ((LAYEREDpat $1) $0)) $5) $3) $2)
   $4) FAILvef)))))))))))))))))))))))))))))))))))))))) ((/\
   ((! :(atpat -> bool) -> bool) (\(ap :atpat).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(v :env). ((! :(val -> bool) -> bool)
   (\(e :val). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail). ((==>
   ((((((eval_atpat $5) $4) $3) $2) $1) $0)) (((((($8 $5) $4) $3) $2)
   $1) $0))))))))))))))) ((/\ ((! :(patrow -> bool) -> bool)
   (\(pr :patrow). ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(r :env).
   ((! :(record -> bool) -> bool) (\(e :record).
   ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail). ((==>
   ((((((eval_patrow $5) $4) $3) $2) $1) $0)) (((((($7 $5) $4) $3) $2)
   $1) $0))))))))))))))) ((! :(pat -> bool) -> bool) (\(p :pat).
   ((! :(state -> bool) -> bool) (\(s1 :state).
   ((! :(env -> bool) -> bool) (\(v :env). ((! :(val -> bool) -> bool)
   (\(e :val). ((! :(state -> bool) -> bool) (\(s2 :state).
   ((! :(varenv_fail -> bool) -> bool) (\(vef :varenv_fail). ((==>
   ((((((eval_pat $5) $4) $3) $2) $1) $0)) (((((($6 $5) $4) $3) $2)
   $1) $0)))))))))))))))))))))))`),
 ((EVAL_PAT_RULES_SATISFIED),
  [],
  `(((eval_pat_pred eval_atpat) eval_patrow) eval_pat)`),
 ((eval_exbind_induction),
  [],
  `((! :((exbind -> state -> env -> state -> exconenv_pack -> bool) ->
        bool) -> bool)
   (\(P_exbind :exbind -> state -> env -> state -> exconenv_pack ->
                bool). ((==> ((/\ ((! :(excon -> bool) -> bool)
   (\(excon :excon). ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==> ((/\
   (((= :exname -> exname -> bool) $0) (new_exname (STATE_arg2 $3))))
   (((= :state -> state -> bool) $1) ((add_exname $0) $3)))) ((((($5
   ((EXBIND1 $4) (NONE :exbind option))) $3) $2) $1) (EXCONENVeep
   (((insert_into_exconenv empty_exconenv) $4) $0))))))))))))))) ((/\
   ((! :(excon -> bool) -> bool) (\(excon :excon).
   ((! :(exbind -> bool) -> bool) (\(eb :exbind).
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(exconenv -> bool) -> bool) (\(EE :exconenv).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\
   (((= :exname -> exname -> bool) $2) (new_exname (STATE_arg2 $5))))
   ((/\ (((= :state -> state -> bool) $0) ((add_exname $2) $5)))
   ((((($8 $6) $0) $4) $3) (EXCONENVeep $1))))) ((((($8 ((EXBIND1 $7)
   ((SOME :exbind -> exbind option) $6))) $5) $4) $3) (EXCONENVeep
   ((add_exconenv (((insert_into_exconenv empty_exconenv) $7) $2))
   $1))))))))))))))))))))) ((/\ ((! :(excon -> bool) -> bool)
   (\(excon :excon). ((! :(exbind -> bool) -> bool) (\(eb :exbind).
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s'' :state).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(state -> bool) -> bool) (\(s' :state). ((==> ((/\
   (((= :exname -> exname -> bool) $1) (new_exname (STATE_arg2 $5))))
   ((/\ (((= :state -> state -> bool) $0) ((add_exname $1) $5)))
   ((((($8 $6) $0) $4) $3) (PACKeep $2))))) ((((($8 ((EXBIND1 $7)
   ((SOME :exbind -> exbind option) $6))) $5) $4) $3) (PACKeep
   $2)))))))))))))))))))) ((/\ ((! :(excon -> bool) -> bool)
   (\(excon :excon). ((! :(excon long -> bool) -> bool)
   (\(longexcon :excon long). ((! :(state -> bool) -> bool)
   (\(s :state). ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==>
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $1)
   $3)) ((lift :exname -> exname lift) $0))) ((((($5 (((EXBIND2 $4)
   $3) (NONE :exbind option))) $2) $1) $2) (EXCONENVeep
   (((insert_into_exconenv empty_exconenv) $4) $0))))))))))))))) ((/\
   ((! :(excon -> bool) -> bool) (\(excon :excon).
   ((! :(excon long -> bool) -> bool) (\(longexcon :excon long).
   ((! :(exbind -> bool) -> bool) (\(eb :exbind).
   ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exname -> bool) -> bool) (\(en :exname).
   ((! :(exconenv -> bool) -> bool) (\(EE :exconenv). ((==> ((/\
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $3)
   $6)) ((lift :exname -> exname lift) $1))) ((((($8 $5) $4) $3) $2)
   (EXCONENVeep $0)))) ((((($8 (((EXBIND2 $7) $6)
   ((SOME :exbind -> exbind option) $5))) $4) $3) $2) (EXCONENVeep
   ((add_exconenv (((insert_into_exconenv empty_exconenv) $7) $1))
   $0))))))))))))))))))))) ((! :(excon -> bool) -> bool)
   (\(excon :excon). ((! :(excon long -> bool) -> bool)
   (\(longexcon :excon long). ((! :(exbind -> bool) -> bool)
   (\(eb :exbind). ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(exname -> bool) -> bool) (\(en :exname). ((==> ((/\
   (((= :exname lift -> exname lift -> bool) ((lookuplongexcon_env $3)
   $6)) ((lift :exname -> exname lift) $0))) ((((($8 $5) $4) $3) $2)
   (PACKeep $1)))) ((((($8 (((EXBIND2 $7) $6)
   ((SOME :exbind -> exbind option) $5))) $4) $3) $2) (PACKeep
   $1))))))))))))))))))))))))) ((! :(exbind -> bool) -> bool)
   (\(eb :exbind). ((! :(state -> bool) -> bool) (\(s :state).
   ((! :(env -> bool) -> bool) (\(E :env).
   ((! :(state -> bool) -> bool) (\(s' :state).
   ((! :(exconenv_pack -> bool) -> bool) (\(eep :exconenv_pack). ((==>
   (((((eval_exbind $4) $3) $2) $1) $0)) ((((($5 $4) $3) $2) $1)
   $0)))))))))))))))`),
 ((EVAL_EXBIND_RULES_SATISFIED),
  [],
  `(eval_exbind_pred eval_exbind)`),
 ((state_constructors_one_one),
  [],
  `((! :(mem -> bool) -> bool) (\(m :mem).
   ((! :(exnameset -> bool) -> bool) (\(e :exnameset).
   ((! :(mem -> bool) -> bool) (\(m' :mem).
   ((! :(exnameset -> bool) -> bool) (\(e' :exnameset).
   (((= :bool -> bool -> bool) (((= :state -> state -> bool) ((STATE
   $3) $2)) ((STATE $1) $0))) ((/\ (((= :mem -> mem -> bool) $3) $1))
   (((= :exnameset -> exnameset -> bool) $2) $0)))))))))))`),
 ((state_cases_thm),
  [],
  `((! :(state -> bool) -> bool) (\(s :state).
   ((? :(mem -> bool) -> bool) (\(m :mem).
   ((? :(exnameset -> bool) -> bool) (\(e :exnameset).
   (((= :state -> state -> bool) $2) ((STATE $1) $0))))))))`),
 ((state_induction_thm),
  [],
  `((! :((state -> bool) -> bool) -> bool) (\(P :state -> bool). ((==>
   ((! :(mem -> bool) -> bool) (\(m :mem).
   ((! :(exnameset -> bool) -> bool) (\(e :exnameset). ($2 ((STATE $1)
   $0))))))) ((! :(state -> bool) -> bool) (\(s :state). ($1
   $0))))))`),
 ((state_Axiom),
  [],
  `((! :((mem -> exnameset -> 'a) -> bool) -> bool)
   (\(f :mem -> exnameset -> 'a).
   ((?! :((state -> 'a) -> bool) -> bool) (\(fn :state -> 'a).
   ((! :(mem -> bool) -> bool) (\(m :mem).
   ((! :(exnameset -> bool) -> bool) (\(e :exnameset).
   (((= :'a -> 'a -> bool) ($2 ((STATE $1) $0))) (($3 $1)
   $0))))))))))`),
 ((mem_constructors_one_one),
  [],
  `((! :((addr # val) list finmap -> bool) -> bool)
   (\(f' :(addr # val) list finmap).
   ((! :((addr # val) list finmap -> bool) -> bool)
   (\(f'' :(addr # val) list finmap). (((= :bool -> bool -> bool)
   (((= :mem -> mem -> bool) (MEM $1)) (MEM $0)))
   (((= :(addr # val) list finmap -> (addr # val) list finmap -> bool)
   $1) $0))))))`),
 ((mem_cases_thm),
  [],
  `((! :(mem -> bool) -> bool) (\(m :mem).
   ((? :((addr # val) list finmap -> bool) -> bool)
   (\(f' :(addr # val) list finmap). (((= :mem -> mem -> bool) $1)
   (MEM $0))))))`),
 ((mem_induction_thm),
  [],
  `((! :((mem -> bool) -> bool) -> bool) (\(P :mem -> bool). ((==>
   ((! :((addr # val) list finmap -> bool) -> bool)
   (\(f' :(addr # val) list finmap). ($1 (MEM $0)))))
   ((! :(mem -> bool) -> bool) (\(m :mem). ($1 $0))))))`),
 ((mem_Axiom),
  [],
  `((! :(((addr # val) list finmap -> 'a) -> bool) -> bool)
   (\(f :(addr # val) list finmap -> 'a).
   ((?! :((mem -> 'a) -> bool) -> bool) (\(fn :mem -> 'a).
   ((! :((addr # val) list finmap -> bool) -> bool)
   (\(f' :(addr # val) list finmap). (((= :'a -> 'a -> bool) ($1 (MEM
   $0))) ($2 $0))))))))`),
 ((varenv_fail_constructors_distinct),
  [],
  `((! :(varenv -> bool) -> bool) (\(v' :varenv). (~
   (((= :varenv_fail -> varenv_fail -> bool) (VARENVvef $0))
   FAILvef))))`),
 ((varenv_fail_constructors_one_one),
  [],
  `((! :(varenv -> bool) -> bool) (\(v' :varenv).
   ((! :(varenv -> bool) -> bool) (\(v'' :varenv).
   (((= :bool -> bool -> bool)
   (((= :varenv_fail -> varenv_fail -> bool) (VARENVvef $1))
   (VARENVvef $0))) (((= :varenv -> varenv -> bool) $1) $0))))))`),
 ((varenv_fail_cases_thm),
  [],
  `((! :(varenv_fail -> bool) -> bool) (\(v :varenv_fail). ((\/
   ((? :(varenv -> bool) -> bool) (\(v' :varenv).
   (((= :varenv_fail -> varenv_fail -> bool) $1) (VARENVvef $0)))))
   (((= :varenv_fail -> varenv_fail -> bool) $0) FAILvef))))`),
 ((varenv_fail_induction_thm),
  [],
  `((! :((varenv_fail -> bool) -> bool) -> bool)
   (\(P :varenv_fail -> bool). ((==> ((/\
   ((! :(varenv -> bool) -> bool) (\(v' :varenv). ($1 (VARENVvef
   $0))))) ($0 FAILvef))) ((! :(varenv_fail -> bool) -> bool)
   (\(v :varenv_fail). ($1 $0))))))`),
 ((varenv_fail_Axiom),
  [],
  `((! :((varenv -> 'a) -> bool) -> bool) (\(f :varenv -> 'a).
   ((! :('a -> bool) -> bool) (\(e :'a).
   ((?! :((varenv_fail -> 'a) -> bool) -> bool)
   (\(fn :varenv_fail -> 'a). ((/\ ((! :(varenv -> bool) -> bool)
   (\(v' :varenv). (((= :'a -> 'a -> bool) ($1 (VARENVvef $0))) ($3
   $0))))) (((= :'a -> 'a -> bool) ($0 FAILvef)) $1))))))))`),
 ((exconenv_pack_constructors_distinct),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(exconenv -> bool) -> bool) (\(e :exconenv). (~
   (((= :exconenv_pack -> exconenv_pack -> bool) (EXCONENVeep $0))
   (PACKeep $1)))))))`),
 ((exconenv_pack_constructors_one_one),
  [],
  `((/\ ((! :(exconenv -> bool) -> bool) (\(e :exconenv).
   ((! :(exconenv -> bool) -> bool) (\(e' :exconenv).
   (((= :bool -> bool -> bool)
   (((= :exconenv_pack -> exconenv_pack -> bool) (EXCONENVeep $1))
   (EXCONENVeep $0))) (((= :exconenv -> exconenv -> bool) $1)
   $0))))))) ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(pack -> bool) -> bool) (\(p' :pack).
   (((= :bool -> bool -> bool)
   (((= :exconenv_pack -> exconenv_pack -> bool) (PACKeep $1))
   (PACKeep $0))) (((= :pack -> pack -> bool) $1) $0)))))))`),
 ((exconenv_pack_cases_thm),
  [],
  `((! :(exconenv_pack -> bool) -> bool) (\(e :exconenv_pack). ((\/
   ((? :(exconenv -> bool) -> bool) (\(e' :exconenv).
   (((= :exconenv_pack -> exconenv_pack -> bool) $1) (EXCONENVeep
   $0))))) ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :exconenv_pack -> exconenv_pack -> bool) $1) (PACKeep
   $0)))))))`),
 ((exconenv_pack_induction_thm),
  [],
  `((! :((exconenv_pack -> bool) -> bool) -> bool)
   (\(P :exconenv_pack -> bool). ((==> ((/\
   ((! :(exconenv -> bool) -> bool) (\(e :exconenv). ($1 (EXCONENVeep
   $0))))) ((! :(pack -> bool) -> bool) (\(p :pack). ($1 (PACKeep
   $0)))))) ((! :(exconenv_pack -> bool) -> bool)
   (\(e :exconenv_pack). ($1 $0))))))`),
 ((exconenv_pack_Axiom),
  [],
  `((! :((exconenv -> 'a) -> bool) -> bool) (\(f0 :exconenv -> 'a).
   ((! :((pack -> 'a) -> bool) -> bool) (\(f1 :pack -> 'a).
   ((?! :((exconenv_pack -> 'a) -> bool) -> bool)
   (\(fn :exconenv_pack -> 'a). ((/\ ((! :(exconenv -> bool) -> bool)
   (\(e :exconenv). (((= :'a -> 'a -> bool) ($1 (EXCONENVeep $0))) ($3
   $0))))) ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :'a -> 'a -> bool) ($1 (PACKeep $0))) ($2 $0)))))))))))`),
 ((varenv_pack_constructors_distinct),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(varenv -> bool) -> bool) (\(v' :varenv). (~
   (((= :varenv_pack -> varenv_pack -> bool) (VARENVvep $0)) (PACKvep
   $1)))))))`),
 ((varenv_pack_constructors_one_one),
  [],
  `((/\ ((! :(varenv -> bool) -> bool) (\(v' :varenv).
   ((! :(varenv -> bool) -> bool) (\(v'' :varenv).
   (((= :bool -> bool -> bool)
   (((= :varenv_pack -> varenv_pack -> bool) (VARENVvep $1))
   (VARENVvep $0))) (((= :varenv -> varenv -> bool) $1) $0)))))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(pack -> bool) -> bool) (\(p' :pack).
   (((= :bool -> bool -> bool)
   (((= :varenv_pack -> varenv_pack -> bool) (PACKvep $1)) (PACKvep
   $0))) (((= :pack -> pack -> bool) $1) $0)))))))`),
 ((varenv_pack_cases_thm),
  [],
  `((! :(varenv_pack -> bool) -> bool) (\(v :varenv_pack). ((\/
   ((? :(varenv -> bool) -> bool) (\(v' :varenv).
   (((= :varenv_pack -> varenv_pack -> bool) $1) (VARENVvep $0)))))
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :varenv_pack -> varenv_pack -> bool) $1) (PACKvep $0)))))))`),
 ((varenv_pack_induction_thm),
  [],
  `((! :((varenv_pack -> bool) -> bool) -> bool)
   (\(P :varenv_pack -> bool). ((==> ((/\
   ((! :(varenv -> bool) -> bool) (\(v' :varenv). ($1 (VARENVvep
   $0))))) ((! :(pack -> bool) -> bool) (\(p :pack). ($1 (PACKvep
   $0)))))) ((! :(varenv_pack -> bool) -> bool) (\(v :varenv_pack).
   ($1 $0))))))`),
 ((varenv_pack_Axiom),
  [],
  `((! :((varenv -> 'a) -> bool) -> bool) (\(f0 :varenv -> 'a).
   ((! :((pack -> 'a) -> bool) -> bool) (\(f1 :pack -> 'a).
   ((?! :((varenv_pack -> 'a) -> bool) -> bool)
   (\(fn :varenv_pack -> 'a). ((/\ ((! :(varenv -> bool) -> bool)
   (\(v' :varenv). (((= :'a -> 'a -> bool) ($1 (VARENVvep $0))) ($3
   $0))))) ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :'a -> 'a -> bool) ($1 (PACKvep $0))) ($2 $0)))))))))))`),
 ((env_pack_constructors_distinct),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(env -> bool) -> bool) (\(e :env). (~
   (((= :env_pack -> env_pack -> bool) (ENVep $0)) (PACKep
   $1)))))))`),
 ((env_pack_constructors_one_one),
  [],
  `((/\ ((! :(env -> bool) -> bool) (\(e :env).
   ((! :(env -> bool) -> bool) (\(e' :env).
   (((= :bool -> bool -> bool) (((= :env_pack -> env_pack -> bool)
   (ENVep $1)) (ENVep $0))) (((= :env -> env -> bool) $1) $0)))))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(pack -> bool) -> bool) (\(p' :pack).
   (((= :bool -> bool -> bool) (((= :env_pack -> env_pack -> bool)
   (PACKep $1)) (PACKep $0))) (((= :pack -> pack -> bool) $1)
   $0)))))))`),
 ((env_pack_cases_thm),
  [],
  `((! :(env_pack -> bool) -> bool) (\(e :env_pack). ((\/
   ((? :(env -> bool) -> bool) (\(e' :env).
   (((= :env_pack -> env_pack -> bool) $1) (ENVep $0)))))
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :env_pack -> env_pack -> bool) $1) (PACKep $0)))))))`),
 ((env_pack_induction_thm),
  [],
  `((! :((env_pack -> bool) -> bool) -> bool) (\(P :env_pack -> bool).
   ((==> ((/\ ((! :(env -> bool) -> bool) (\(e :env). ($1 (ENVep
   $0))))) ((! :(pack -> bool) -> bool) (\(p :pack). ($1 (PACKep
   $0)))))) ((! :(env_pack -> bool) -> bool) (\(e :env_pack). ($1
   $0))))))`),
 ((env_pack_Axiom),
  [],
  `((! :((env -> 'a) -> bool) -> bool) (\(f0 :env -> 'a).
   ((! :((pack -> 'a) -> bool) -> bool) (\(f1 :pack -> 'a).
   ((?! :((env_pack -> 'a) -> bool) -> bool) (\(fn :env_pack -> 'a).
   ((/\ ((! :(env -> bool) -> bool) (\(e :env).
   (((= :'a -> 'a -> bool) ($1 (ENVep $0))) ($3 $0)))))
   ((! :(pack -> bool) -> bool) (\(p :pack). (((= :'a -> 'a -> bool)
   ($1 (PACKep $0))) ($2 $0)))))))))))`),
 ((val_pack_fail_constructors_distinct),
  [],
  `((/\ ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(val -> bool) -> bool) (\(v' :val). (~
   (((= :val_pack_fail -> val_pack_fail -> bool) (VALvpf $0)) (PACKvpf
   $1)))))))) ((/\ ((! :(val -> bool) -> bool) (\(v' :val). (~
   (((= :val_pack_fail -> val_pack_fail -> bool) (VALvpf $0))
   FAILvpf))))) ((! :(pack -> bool) -> bool) (\(p :pack). (~
   (((= :val_pack_fail -> val_pack_fail -> bool) (PACKvpf $0))
   FAILvpf))))))`),
 ((val_pack_fail_constructors_one_one),
  [],
  `((/\ ((! :(val -> bool) -> bool) (\(v' :val).
   ((! :(val -> bool) -> bool) (\(v'' :val).
   (((= :bool -> bool -> bool)
   (((= :val_pack_fail -> val_pack_fail -> bool) (VALvpf $1)) (VALvpf
   $0))) (((= :val -> val -> bool) $1) $0)))))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(pack -> bool) -> bool) (\(p' :pack).
   (((= :bool -> bool -> bool)
   (((= :val_pack_fail -> val_pack_fail -> bool) (PACKvpf $1))
   (PACKvpf $0))) (((= :pack -> pack -> bool) $1) $0)))))))`),
 ((val_pack_fail_cases_thm),
  [],
  `((! :(val_pack_fail -> bool) -> bool) (\(v :val_pack_fail). ((\/
   ((? :(val -> bool) -> bool) (\(v' :val).
   (((= :val_pack_fail -> val_pack_fail -> bool) $1) (VALvpf $0)))))
   ((\/ ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :val_pack_fail -> val_pack_fail -> bool) $1) (PACKvpf $0)))))
   (((= :val_pack_fail -> val_pack_fail -> bool) $0) FAILvpf)))))`),
 ((val_pack_fail_induction_thm),
  [],
  `((! :((val_pack_fail -> bool) -> bool) -> bool)
   (\(P :val_pack_fail -> bool). ((==> ((/\
   ((! :(val -> bool) -> bool) (\(v' :val). ($1 (VALvpf $0))))) ((/\
   ((! :(pack -> bool) -> bool) (\(p :pack). ($1 (PACKvpf $0))))) ($0
   FAILvpf)))) ((! :(val_pack_fail -> bool) -> bool)
   (\(v :val_pack_fail). ($1 $0))))))`),
 ((val_pack_fail_Axiom),
  [],
  `((! :((val -> 'a) -> bool) -> bool) (\(f0 :val -> 'a).
   ((! :((pack -> 'a) -> bool) -> bool) (\(f1 :pack -> 'a).
   ((! :('a -> bool) -> bool) (\(e :'a).
   ((?! :((val_pack_fail -> 'a) -> bool) -> bool)
   (\(fn :val_pack_fail -> 'a). ((/\ ((! :(val -> bool) -> bool)
   (\(v' :val). (((= :'a -> 'a -> bool) ($1 (VALvpf $0))) ($4 $0)))))
   ((/\ ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :'a -> 'a -> bool) ($1 (PACKvpf $0))) ($3 $0)))))
   (((= :'a -> 'a -> bool) ($0 FAILvpf)) $1)))))))))))`),
 ((record_pack_constructors_distinct),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(record -> bool) -> bool) (\(r :record). (~
   (((= :record_pack -> record_pack -> bool) (RECORDrp $0)) (PACKrp
   $1)))))))`),
 ((record_pack_constructors_one_one),
  [],
  `((/\ ((! :(record -> bool) -> bool) (\(r :record).
   ((! :(record -> bool) -> bool) (\(r' :record).
   (((= :bool -> bool -> bool)
   (((= :record_pack -> record_pack -> bool) (RECORDrp $1)) (RECORDrp
   $0))) (((= :record -> record -> bool) $1) $0)))))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(pack -> bool) -> bool) (\(p' :pack).
   (((= :bool -> bool -> bool)
   (((= :record_pack -> record_pack -> bool) (PACKrp $1)) (PACKrp
   $0))) (((= :pack -> pack -> bool) $1) $0)))))))`),
 ((record_pack_cases_thm),
  [],
  `((! :(record_pack -> bool) -> bool) (\(r :record_pack). ((\/
   ((? :(record -> bool) -> bool) (\(r' :record).
   (((= :record_pack -> record_pack -> bool) $1) (RECORDrp $0)))))
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :record_pack -> record_pack -> bool) $1) (PACKrp $0)))))))`),
 ((record_pack_induction_thm),
  [],
  `((! :((record_pack -> bool) -> bool) -> bool)
   (\(P :record_pack -> bool). ((==> ((/\
   ((! :(record -> bool) -> bool) (\(r :record). ($1 (RECORDrp $0)))))
   ((! :(pack -> bool) -> bool) (\(p :pack). ($1 (PACKrp $0))))))
   ((! :(record_pack -> bool) -> bool) (\(r :record_pack). ($1
   $0))))))`),
 ((record_pack_Axiom),
  [],
  `((! :((record -> 'a) -> bool) -> bool) (\(f0 :record -> 'a).
   ((! :((pack -> 'a) -> bool) -> bool) (\(f1 :pack -> 'a).
   ((?! :((record_pack -> 'a) -> bool) -> bool)
   (\(fn :record_pack -> 'a). ((/\ ((! :(record -> bool) -> bool)
   (\(r :record). (((= :'a -> 'a -> bool) ($1 (RECORDrp $0))) ($3
   $0))))) ((! :(pack -> bool) -> bool) (\(p :pack).
   (((= :'a -> 'a -> bool) ($1 (PACKrp $0))) ($2 $0)))))))))))`),
 ((val_pack_constructors_distinct),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(val -> bool) -> bool) (\(v' :val). (~
   (((= :val_pack -> val_pack -> bool) (VALvp $0)) (PACKvp
   $1)))))))`),
 ((val_pack_constructors_one_one),
  [],
  `((/\ ((! :(val -> bool) -> bool) (\(v' :val).
   ((! :(val -> bool) -> bool) (\(v'' :val).
   (((= :bool -> bool -> bool) (((= :val_pack -> val_pack -> bool)
   (VALvp $1)) (VALvp $0))) (((= :val -> val -> bool) $1) $0)))))))
   ((! :(pack -> bool) -> bool) (\(p :pack).
   ((! :(pack -> bool) -> bool) (\(p' :pack).
   (((= :bool -> bool -> bool) (((= :val_pack -> val_pack -> bool)
   (PACKvp $1)) (PACKvp $0))) (((= :pack -> pack -> bool) $1)
   $0)))))))`),
 ((val_pack_cases_thm),
  [],
  `((! :(val_pack -> bool) -> bool) (\(v :val_pack). ((\/
   ((? :(val -> bool) -> bool) (\(v' :val).
   (((= :val_pack -> val_pack -> bool) $1) (VALvp $0)))))
   ((? :(pack -> bool) -> bool) (\(p :pack).
   (((= :val_pack -> val_pack -> bool) $1) (PACKvp $0)))))))`),
 ((val_pack_induction_thm),
  [],
  `((! :((val_pack -> bool) -> bool) -> bool) (\(P :val_pack -> bool).
   ((==> ((/\ ((! :(val -> bool) -> bool) (\(v' :val). ($1 (VALvp
   $0))))) ((! :(pack -> bool) -> bool) (\(p :pack). ($1 (PACKvp
   $0)))))) ((! :(val_pack -> bool) -> bool) (\(v :val_pack). ($1
   $0))))))`),
 ((val_pack_Axiom),
  [],
  `((! :((val -> 'a) -> bool) -> bool) (\(f0 :val -> 'a).
   ((! :((pack -> 'a) -> bool) -> bool) (\(f1 :pack -> 'a).
   ((?! :((val_pack -> 'a) -> bool) -> bool) (\(fn :val_pack -> 'a).
   ((/\ ((! :(val -> bool) -> bool) (\(v' :val).
   (((= :'a -> 'a -> bool) ($1 (VALvp $0))) ($3 $0)))))
   ((! :(pack -> bool) -> bool) (\(p :pack). (((= :'a -> 'a -> bool)
   ($1 (PACKvp $0))) ($2 $0)))))))))))`),
 ((pack_constructors_one_one),
  [],
  `((! :(exval -> bool) -> bool) (\(e :exval).
   ((! :(exval -> bool) -> bool) (\(e' :exval).
   (((= :bool -> bool -> bool) (((= :pack -> pack -> bool) (PACK $1))
   (PACK $0))) (((= :exval -> exval -> bool) $1) $0))))))`),
 ((pack_cases_thm),
  [],
  `((! :(pack -> bool) -> bool) (\(p :pack).
   ((? :(exval -> bool) -> bool) (\(e :exval).
   (((= :pack -> pack -> bool) $1) (PACK $0))))))`),
 ((pack_induction_thm),
  [],
  `((! :((pack -> bool) -> bool) -> bool) (\(P :pack -> bool). ((==>
   ((! :(exval -> bool) -> bool) (\(e :exval). ($1 (PACK $0)))))
   ((! :(pack -> bool) -> bool) (\(p :pack). ($1 $0))))))`),
 ((pack_Axiom),
  [],
  `((! :((exval -> 'a) -> bool) -> bool) (\(f :exval -> 'a).
   ((?! :((pack -> 'a) -> bool) -> bool) (\(fn :pack -> 'a).
   ((! :(exval -> bool) -> bool) (\(e :exval). (((= :'a -> 'a -> bool)
   ($1 (PACK $0))) ($2 $0))))))))`),
 ((insert_into_strenv_lemma),
  [],
  `((! :((strid # env) list finmap -> bool) -> bool)
   (\(f :(strid # env) list finmap). ((! :(strid -> bool) -> bool)
   (\(s :strid). ((! :(env -> bool) -> bool) (\(e :env).
   (((= :strenv -> strenv -> bool) (((insert_into_strenv (STRENV $2))
   $1) $0)) (STRENV
   (((((finmap_insert :(strid -> strid -> bool) -> strid -> env ->
                       (strid # env) list finmap ->
                       (strid # env) list finmap) less_strid) $1) $0)
   $2)))))))))`),
 ((lookupvar_lemma),
  [],
  `((/\ ((! :(strenv -> bool) -> bool) (\(se :strenv).
   ((! :(varenv -> bool) -> bool) (\(ve :varenv).
   ((! :(exconenv -> bool) -> bool) (\(ee :exconenv).
   (((= :(var -> val lift) -> (var -> val lift) -> bool)
   (lookupvar_env (((ENV $2) $1) $0))) (lookupvar_varenv $1)))))))))
   ((! :((var # val) list finmap -> bool) -> bool)
   (\(f :(var # val) list finmap). ((! :(var -> bool) -> bool)
   (\(v :var). (((= :val lift -> val lift -> bool) ((lookupvar_varenv
   (VARENV $1)) $0))
   (((finmap_lookup :var -> (var # val) list finmap -> val lift) $0)
   $1)))))))`),
 ((lookupstrid_lemma),
  [],
  `((/\ ((! :(strenv -> bool) -> bool) (\(se :strenv).
   ((! :(varenv -> bool) -> bool) (\(ve :varenv).
   ((! :(exconenv -> bool) -> bool) (\(ee :exconenv).
   (((= :(strid -> env lift) -> (strid -> env lift) -> bool)
   (lookupstrid_env (((ENV $2) $1) $0))) (lookupstrid_strenv
   $2))))))))) ((! :((strid # env) list finmap -> bool) -> bool)
   (\(f :(strid # env) list finmap). ((! :(strid -> bool) -> bool)
   (\(strid :strid). (((= :env lift -> env lift -> bool)
   ((lookupstrid_strenv (STRENV $1)) $0))
   (((finmap_lookup :strid -> (strid # env) list finmap -> env lift)
   $0) $1)))))))`),
 ((LABEL_11),
  [],
  `((! :(string -> bool) -> bool) (\(s :string).
   ((! :(string -> bool) -> bool) (\(s' :string).
   (((= :bool -> bool -> bool) (((= :label -> label -> bool) (LABEL
   $1)) (LABEL $0))) (((= :string -> string -> bool) $1) $0))))))`),
 ((insert_into_record_lemma),
  [],
  `((! :((label # val) list finmap -> bool) -> bool)
   (\(f :(label # val) list finmap). ((! :(label -> bool) -> bool)
   (\(l :label). ((! :(val -> bool) -> bool) (\(v :val).
   (((= :record -> record -> bool) (((insert_into_record (RECORD $2))
   $1) $0)) (RECORD
   (((((finmap_insert :(label -> label -> bool) -> label -> val ->
                       (label # val) list finmap ->
                       (label # val) list finmap) less_label) $1) $0)
   $2)))))))))`),
 ((lookup_label_lemma),
  [],
  `((! :((label # val) list finmap -> bool) -> bool)
   (\(f :(label # val) list finmap). ((! :(label -> bool) -> bool)
   (\(l :label). (((= :val lift -> val lift -> bool) ((lookup_label
   (RECORD $1)) $0))
   (((finmap_lookup :label -> (label # val) list finmap -> val lift)
   $0) $1))))))`),
 ((label_in_rec_lemma),
  [],
  `((! :((label # val) list finmap -> bool) -> bool)
   (\(f :(label # val) list finmap). ((! :(label -> bool) -> bool)
   (\(l :label). (((= :bool -> bool -> bool) ((label_in_rec (RECORD
   $1)) $0)) (((in_dom :(label # val) list finmap -> label -> bool)
   $1) $0))))))`),
 ((env_cases),
  [],
  `((/\ ((! :(closure -> bool) -> bool) (\(x1 :closure).
   ((? :(match -> bool) -> bool) (\(y :match).
   ((? :(env -> bool) -> bool) (\(y'' :env).
   ((? :(varenv -> bool) -> bool) (\(y' :varenv).
   (((= :closure -> closure -> bool) $3) (((CLOSURE $2) $1)
   $0))))))))))) ((/\ ((! :(env -> bool) -> bool) (\(x2 :env).
   ((? :(strenv -> bool) -> bool) (\(y :strenv).
   ((? :(varenv -> bool) -> bool) (\(y'' :varenv).
   ((? :(exconenv -> bool) -> bool) (\(y' :exconenv).
   (((= :env -> env -> bool) $3) (((ENV $2) $1) $0))))))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x3 :exval). ((\/
   ((? :(exname -> bool) -> bool) (\(y :exname).
   (((= :exval -> exval -> bool) $1) (NAMEexval $0)))))
   ((? :(exname -> bool) -> bool) (\(y :exname).
   ((? :(val -> bool) -> bool) (\(y' :val).
   (((= :exval -> exval -> bool) $2) ((NAMEVALexval $1) $0))))))))))
   ((/\ ((! :(label # val -> bool) -> bool) (\(x4 :label # val).
   ((? :(label -> bool) -> bool) (\(y :label).
   ((? :(val -> bool) -> bool) (\(y' :val).
   (((= :label # val -> label # val -> bool) $2)
   (((, :label -> val -> label # val) $1) $0))))))))) ((/\
   ((! :((label # val) list -> bool) -> bool)
   (\(x5 :(label # val) list). ((\/
   (((= :(label # val) list -> (label # val) list -> bool) $0)
   (NIL :(label # val) list))) ((? :(label # val -> bool) -> bool)
   (\(y :label # val). ((? :((label # val) list -> bool) -> bool)
   (\(y' :(label # val) list).
   (((= :(label # val) list -> (label # val) list -> bool) $2)
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $1) $0)))))))))) ((/\
   ((! :((label # val) list finmap -> bool) -> bool)
   (\(x6 :(label # val) list finmap).
   ((? :((label # val) list -> bool) -> bool)
   (\(y :(label # val) list).
   (((= :(label # val) list finmap -> (label # val) list finmap ->
         bool) $1)
   ((FINMAP :(label # val) list -> (label # val) list finmap)
   $0))))))) ((/\ ((! :(record -> bool) -> bool) (\(x7 :record).
   ((? :((label # val) list finmap -> bool) -> bool)
   (\(y :(label # val) list finmap). (((= :record -> record -> bool)
   $1) (RECORD $0))))))) ((/\ ((! :(strenv -> bool) -> bool)
   (\(x8 :strenv). ((? :((strid # env) list finmap -> bool) -> bool)
   (\(y :(strid # env) list finmap). (((= :strenv -> strenv -> bool)
   $1) (STRENV $0))))))) ((/\ ((! :(strid # env -> bool) -> bool)
   (\(x9 :strid # env). ((? :(strid -> bool) -> bool) (\(y :strid).
   ((? :(env -> bool) -> bool) (\(y' :env).
   (((= :strid # env -> strid # env -> bool) $2)
   (((, :strid -> env -> strid # env) $1) $0))))))))) ((/\
   ((! :((strid # env) list -> bool) -> bool)
   (\(x10 :(strid # env) list). ((\/
   (((= :(strid # env) list -> (strid # env) list -> bool) $0)
   (NIL :(strid # env) list))) ((? :(strid # env -> bool) -> bool)
   (\(y :strid # env). ((? :((strid # env) list -> bool) -> bool)
   (\(y' :(strid # env) list).
   (((= :(strid # env) list -> (strid # env) list -> bool) $2)
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $1) $0)))))))))) ((/\
   ((! :((strid # env) list finmap -> bool) -> bool)
   (\(x11 :(strid # env) list finmap).
   ((? :((strid # env) list -> bool) -> bool)
   (\(y :(strid # env) list).
   (((= :(strid # env) list finmap -> (strid # env) list finmap ->
         bool) $1)
   ((FINMAP :(strid # env) list -> (strid # env) list finmap)
   $0))))))) ((/\ ((! :(val -> bool) -> bool) (\(x12 :val). ((\/
   (((= :val -> val -> bool) $0) ASSGval)) ((\/
   ((? :(sval -> bool) -> bool) (\(y :sval). (((= :val -> val -> bool)
   $1) (SVALval $0))))) ((\/ ((? :(basval -> bool) -> bool)
   (\(y :basval). (((= :val -> val -> bool) $1) (BASval $0))))) ((\/
   ((? :(con -> bool) -> bool) (\(y :con). (((= :val -> val -> bool)
   $1) (CONval $0))))) ((\/ ((? :(con -> bool) -> bool) (\(y :con).
   ((? :(val -> bool) -> bool) (\(y' :val). (((= :val -> val -> bool)
   $2) ((APPCONval $1) $0))))))) ((\/ ((? :(exval -> bool) -> bool)
   (\(y :exval). (((= :val -> val -> bool) $1) (EXVALval $0))))) ((\/
   ((? :(record -> bool) -> bool) (\(y :record).
   (((= :val -> val -> bool) $1) (RECORDval $0))))) ((\/
   ((? :(addr -> bool) -> bool) (\(y :addr). (((= :val -> val -> bool)
   $1) (ADDRval $0))))) ((? :(closure -> bool) -> bool)
   (\(y :closure). (((= :val -> val -> bool) $1) (CLOSUREval
   $0))))))))))))))) ((/\ ((! :(var # val -> bool) -> bool)
   (\(x13 :var # val). ((? :(var -> bool) -> bool) (\(y :var).
   ((? :(val -> bool) -> bool) (\(y' :val).
   (((= :var # val -> var # val -> bool) $2)
   (((, :var -> val -> var # val) $1) $0))))))))) ((/\
   ((! :((var # val) list -> bool) -> bool) (\(x14 :(var # val) list).
   ((\/ (((= :(var # val) list -> (var # val) list -> bool) $0)
   (NIL :(var # val) list))) ((? :(var # val -> bool) -> bool)
   (\(y :var # val). ((? :((var # val) list -> bool) -> bool)
   (\(y' :(var # val) list).
   (((= :(var # val) list -> (var # val) list -> bool) $2)
   (((CONS :var # val -> (var # val) list -> (var # val) list) $1)
   $0)))))))))) ((/\ ((! :((var # val) list finmap -> bool) -> bool)
   (\(x15 :(var # val) list finmap).
   ((? :((var # val) list -> bool) -> bool) (\(y :(var # val) list).
   (((= :(var # val) list finmap -> (var # val) list finmap -> bool)
   $1) ((FINMAP :(var # val) list -> (var # val) list finmap)
   $0))))))) ((! :(varenv -> bool) -> bool) (\(x16 :varenv).
   ((? :((var # val) list finmap -> bool) -> bool)
   (\(y :(var # val) list finmap). (((= :varenv -> varenv -> bool) $1)
   (VARENV $0)))))))))))))))))))))`),
 ((env_constructors_one_one),
  [],
  `((/\ ((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   ((! :(match -> bool) -> bool) (\(x1' :match).
   ((! :(env -> bool) -> bool) (\(x2' :env).
   ((! :(varenv -> bool) -> bool) (\(x3' :varenv).
   (((= :bool -> bool -> bool) (((= :closure -> closure -> bool)
   (((CLOSURE $5) $4) $3)) (((CLOSURE $2) $1) $0))) ((/\
   (((= :match -> match -> bool) $5) $2)) ((/\
   (((= :env -> env -> bool) $4) $1)) (((= :varenv -> varenv -> bool)
   $3) $0))))))))))))))))) ((/\ ((! :(strenv -> bool) -> bool)
   (\(x1 :strenv). ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   ((! :(strenv -> bool) -> bool) (\(x1' :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2' :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3' :exconenv).
   (((= :bool -> bool -> bool) (((= :env -> env -> bool) (((ENV $5)
   $4) $3)) (((ENV $2) $1) $0))) ((/\ (((= :strenv -> strenv -> bool)
   $5) $2)) ((/\ (((= :varenv -> varenv -> bool) $4) $1))
   (((= :exconenv -> exconenv -> bool) $3) $0))))))))))))))))) ((/\
   ((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(exname -> bool) -> bool) (\(x1' :exname).
   (((= :bool -> bool -> bool) (((= :exval -> exval -> bool)
   (NAMEexval $1)) (NAMEexval $0))) (((= :exname -> exname -> bool)
   $1) $0))))))) ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   ((! :(exname -> bool) -> bool) (\(x1' :exname).
   ((! :(val -> bool) -> bool) (\(x2' :val).
   (((= :bool -> bool -> bool) (((= :exval -> exval -> bool)
   ((NAMEVALexval $3) $2)) ((NAMEVALexval $1) $0))) ((/\
   (((= :exname -> exname -> bool) $3) $1)) (((= :val -> val -> bool)
   $2) $0))))))))))))) ((/\ ((! :(label -> bool) -> bool)
   (\(x1 :label). ((! :(val -> bool) -> bool) (\(x2 :val).
   ((! :(label -> bool) -> bool) (\(x1' :label).
   ((! :(val -> bool) -> bool) (\(x2' :val).
   (((= :bool -> bool -> bool)
   (((= :label # val -> label # val -> bool)
   (((, :label -> val -> label # val) $3) $2))
   (((, :label -> val -> label # val) $1) $0))) ((/\
   (((= :label -> label -> bool) $3) $1)) (((= :val -> val -> bool)
   $2) $0)))))))))))) ((/\ ((! :(label # val -> bool) -> bool)
   (\(x1 :label # val). ((! :((label # val) list -> bool) -> bool)
   (\(x2 :(label # val) list). ((! :(label # val -> bool) -> bool)
   (\(x1' :label # val). ((! :((label # val) list -> bool) -> bool)
   (\(x2' :(label # val) list). (((= :bool -> bool -> bool)
   (((= :(label # val) list -> (label # val) list -> bool)
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $3) $2))
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $1) $0))) ((/\ (((= :label # val -> label # val -> bool) $3) $1))
   (((= :(label # val) list -> (label # val) list -> bool) $2)
   $0)))))))))))) ((/\ ((! :((label # val) list -> bool) -> bool)
   (\(x1 :(label # val) list).
   ((! :((label # val) list -> bool) -> bool)
   (\(x1' :(label # val) list). (((= :bool -> bool -> bool)
   (((= :(label # val) list finmap -> (label # val) list finmap ->
         bool)
   ((FINMAP :(label # val) list -> (label # val) list finmap) $1))
   ((FINMAP :(label # val) list -> (label # val) list finmap) $0)))
   (((= :(label # val) list -> (label # val) list -> bool) $1)
   $0))))))) ((/\ ((! :((label # val) list finmap -> bool) -> bool)
   (\(x1 :(label # val) list finmap).
   ((! :((label # val) list finmap -> bool) -> bool)
   (\(x1' :(label # val) list finmap). (((= :bool -> bool -> bool)
   (((= :record -> record -> bool) (RECORD $1)) (RECORD $0)))
   (((= :(label # val) list finmap -> (label # val) list finmap ->
         bool) $1) $0))))))) ((/\
   ((! :((strid # env) list finmap -> bool) -> bool)
   (\(x1 :(strid # env) list finmap).
   ((! :((strid # env) list finmap -> bool) -> bool)
   (\(x1' :(strid # env) list finmap). (((= :bool -> bool -> bool)
   (((= :strenv -> strenv -> bool) (STRENV $1)) (STRENV $0)))
   (((= :(strid # env) list finmap -> (strid # env) list finmap ->
         bool) $1) $0))))))) ((/\ ((! :(strid -> bool) -> bool)
   (\(x1 :strid). ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(strid -> bool) -> bool) (\(x1' :strid).
   ((! :(env -> bool) -> bool) (\(x2' :env).
   (((= :bool -> bool -> bool)
   (((= :strid # env -> strid # env -> bool)
   (((, :strid -> env -> strid # env) $3) $2))
   (((, :strid -> env -> strid # env) $1) $0))) ((/\
   (((= :strid -> strid -> bool) $3) $1)) (((= :env -> env -> bool)
   $2) $0)))))))))))) ((/\ ((! :(strid # env -> bool) -> bool)
   (\(x1 :strid # env). ((! :((strid # env) list -> bool) -> bool)
   (\(x2 :(strid # env) list). ((! :(strid # env -> bool) -> bool)
   (\(x1' :strid # env). ((! :((strid # env) list -> bool) -> bool)
   (\(x2' :(strid # env) list). (((= :bool -> bool -> bool)
   (((= :(strid # env) list -> (strid # env) list -> bool)
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $3) $2))
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $1) $0))) ((/\ (((= :strid # env -> strid # env -> bool) $3) $1))
   (((= :(strid # env) list -> (strid # env) list -> bool) $2)
   $0)))))))))))) ((/\ ((! :((strid # env) list -> bool) -> bool)
   (\(x1 :(strid # env) list).
   ((! :((strid # env) list -> bool) -> bool)
   (\(x1' :(strid # env) list). (((= :bool -> bool -> bool)
   (((= :(strid # env) list finmap -> (strid # env) list finmap ->
         bool)
   ((FINMAP :(strid # env) list -> (strid # env) list finmap) $1))
   ((FINMAP :(strid # env) list -> (strid # env) list finmap) $0)))
   (((= :(strid # env) list -> (strid # env) list -> bool) $1)
   $0))))))) ((/\ ((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   ((! :(sval -> bool) -> bool) (\(x1' :sval).
   (((= :bool -> bool -> bool) (((= :val -> val -> bool) (SVALval $1))
   (SVALval $0))) (((= :sval -> sval -> bool) $1) $0))))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   ((! :(basval -> bool) -> bool) (\(x1' :basval).
   (((= :bool -> bool -> bool) (((= :val -> val -> bool) (BASval $1))
   (BASval $0))) (((= :basval -> basval -> bool) $1) $0))))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(con -> bool) -> bool) (\(x1' :con).
   (((= :bool -> bool -> bool) (((= :val -> val -> bool) (CONval $1))
   (CONval $0))) (((= :con -> con -> bool) $1) $0))))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   ((! :(con -> bool) -> bool) (\(x1' :con).
   ((! :(val -> bool) -> bool) (\(x2' :val).
   (((= :bool -> bool -> bool) (((= :val -> val -> bool) ((APPCONval
   $3) $2)) ((APPCONval $1) $0))) ((/\ (((= :con -> con -> bool) $3)
   $1)) (((= :val -> val -> bool) $2) $0)))))))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   ((! :(exval -> bool) -> bool) (\(x1' :exval).
   (((= :bool -> bool -> bool) (((= :val -> val -> bool) (EXVALval
   $1)) (EXVALval $0))) (((= :exval -> exval -> bool) $1) $0)))))))
   ((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   ((! :(record -> bool) -> bool) (\(x1' :record).
   (((= :bool -> bool -> bool) (((= :val -> val -> bool) (RECORDval
   $1)) (RECORDval $0))) (((= :record -> record -> bool) $1) $0)))))))
   ((/\ ((! :(addr -> bool) -> bool) (\(x1 :addr).
   ((! :(addr -> bool) -> bool) (\(x1' :addr).
   (((= :bool -> bool -> bool) (((= :val -> val -> bool) (ADDRval $1))
   (ADDRval $0))) (((= :addr -> addr -> bool) $1) $0)))))))
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   ((! :(closure -> bool) -> bool) (\(x1' :closure).
   (((= :bool -> bool -> bool) (((= :val -> val -> bool) (CLOSUREval
   $1)) (CLOSUREval $0))) (((= :closure -> closure -> bool) $1)
   $0)))))))))))))) ((/\ ((! :(var -> bool) -> bool) (\(x1 :var).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   ((! :(var -> bool) -> bool) (\(x1' :var).
   ((! :(val -> bool) -> bool) (\(x2' :val).
   (((= :bool -> bool -> bool) (((= :var # val -> var # val -> bool)
   (((, :var -> val -> var # val) $3) $2))
   (((, :var -> val -> var # val) $1) $0))) ((/\
   (((= :var -> var -> bool) $3) $1)) (((= :val -> val -> bool) $2)
   $0)))))))))))) ((/\ ((! :(var # val -> bool) -> bool)
   (\(x1 :var # val). ((! :((var # val) list -> bool) -> bool)
   (\(x2 :(var # val) list). ((! :(var # val -> bool) -> bool)
   (\(x1' :var # val). ((! :((var # val) list -> bool) -> bool)
   (\(x2' :(var # val) list). (((= :bool -> bool -> bool)
   (((= :(var # val) list -> (var # val) list -> bool)
   (((CONS :var # val -> (var # val) list -> (var # val) list) $3)
   $2)) (((CONS :var # val -> (var # val) list -> (var # val) list)
   $1) $0))) ((/\ (((= :var # val -> var # val -> bool) $3) $1))
   (((= :(var # val) list -> (var # val) list -> bool) $2)
   $0)))))))))))) ((/\ ((! :((var # val) list -> bool) -> bool)
   (\(x1 :(var # val) list). ((! :((var # val) list -> bool) -> bool)
   (\(x1' :(var # val) list). (((= :bool -> bool -> bool)
   (((= :(var # val) list finmap -> (var # val) list finmap -> bool)
   ((FINMAP :(var # val) list -> (var # val) list finmap) $1))
   ((FINMAP :(var # val) list -> (var # val) list finmap) $0)))
   (((= :(var # val) list -> (var # val) list -> bool) $1) $0)))))))
   ((! :((var # val) list finmap -> bool) -> bool)
   (\(x1 :(var # val) list finmap).
   ((! :((var # val) list finmap -> bool) -> bool)
   (\(x1' :(var # val) list finmap). (((= :bool -> bool -> bool)
   (((= :varenv -> varenv -> bool) (VARENV $1)) (VARENV $0)))
   (((= :(var # val) list finmap -> (var # val) list finmap -> bool)
   $1) $0)))))))))))))))))))))`),
 ((env_constructors_distinct),
  [],
  `((/\ ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(exname -> bool) -> bool) (\(x1' :exname).
   ((! :(val -> bool) -> bool) (\(x2' :val). (~
   (((= :exval -> exval -> bool) (NAMEexval $2)) ((NAMEVALexval $1)
   $0)))))))))) ((/\ ((! :(label # val -> bool) -> bool)
   (\(x1' :label # val). ((! :((label # val) list -> bool) -> bool)
   (\(x2' :(label # val) list). (~
   (((= :(label # val) list -> (label # val) list -> bool)
   (NIL :(label # val) list))
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $1) $0)))))))) ((/\ ((! :(strid # env -> bool) -> bool)
   (\(x1' :strid # env). ((! :((strid # env) list -> bool) -> bool)
   (\(x2' :(strid # env) list). (~
   (((= :(strid # env) list -> (strid # env) list -> bool)
   (NIL :(strid # env) list))
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $1) $0)))))))) ((/\ ((/\ ((! :(sval -> bool) -> bool)
   (\(x1' :sval). (~ (((= :val -> val -> bool) ASSGval) (SVALval
   $0)))))) ((/\ ((! :(basval -> bool) -> bool) (\(x1' :basval). (~
   (((= :val -> val -> bool) ASSGval) (BASval $0)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1' :con). (~
   (((= :val -> val -> bool) ASSGval) (CONval $0)))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1' :con).
   ((! :(val -> bool) -> bool) (\(x2' :val). (~
   (((= :val -> val -> bool) ASSGval) ((APPCONval $1) $0)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1' :exval). (~
   (((= :val -> val -> bool) ASSGval) (EXVALval $0)))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1' :record). (~
   (((= :val -> val -> bool) ASSGval) (RECORDval $0)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(x1' :addr). (~
   (((= :val -> val -> bool) ASSGval) (ADDRval $0)))))) ((/\
   ((! :(closure -> bool) -> bool) (\(x1' :closure). (~
   (((= :val -> val -> bool) ASSGval) (CLOSUREval $0)))))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   ((! :(basval -> bool) -> bool) (\(x1' :basval). (~
   (((= :val -> val -> bool) (SVALval $1)) (BASval $0)))))))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   ((! :(con -> bool) -> bool) (\(x1' :con). (~
   (((= :val -> val -> bool) (SVALval $1)) (CONval $0)))))))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   ((! :(con -> bool) -> bool) (\(x1' :con).
   ((! :(val -> bool) -> bool) (\(x2' :val). (~
   (((= :val -> val -> bool) (SVALval $2)) ((APPCONval $1)
   $0)))))))))) ((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   ((! :(exval -> bool) -> bool) (\(x1' :exval). (~
   (((= :val -> val -> bool) (SVALval $1)) (EXVALval $0)))))))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   ((! :(record -> bool) -> bool) (\(x1' :record). (~
   (((= :val -> val -> bool) (SVALval $1)) (RECORDval $0)))))))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   ((! :(addr -> bool) -> bool) (\(x1' :addr). (~
   (((= :val -> val -> bool) (SVALval $1)) (ADDRval $0)))))))) ((/\
   ((! :(sval -> bool) -> bool) (\(x1 :sval).
   ((! :(closure -> bool) -> bool) (\(x1' :closure). (~
   (((= :val -> val -> bool) (SVALval $1)) (CLOSUREval $0)))))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   ((! :(con -> bool) -> bool) (\(x1' :con). (~
   (((= :val -> val -> bool) (BASval $1)) (CONval $0)))))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   ((! :(con -> bool) -> bool) (\(x1' :con).
   ((! :(val -> bool) -> bool) (\(x2' :val). (~
   (((= :val -> val -> bool) (BASval $2)) ((APPCONval $1) $0))))))))))
   ((/\ ((! :(basval -> bool) -> bool) (\(x1 :basval).
   ((! :(exval -> bool) -> bool) (\(x1' :exval). (~
   (((= :val -> val -> bool) (BASval $1)) (EXVALval $0)))))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   ((! :(record -> bool) -> bool) (\(x1' :record). (~
   (((= :val -> val -> bool) (BASval $1)) (RECORDval $0)))))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   ((! :(addr -> bool) -> bool) (\(x1' :addr). (~
   (((= :val -> val -> bool) (BASval $1)) (ADDRval $0)))))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   ((! :(closure -> bool) -> bool) (\(x1' :closure). (~
   (((= :val -> val -> bool) (BASval $1)) (CLOSUREval $0)))))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(con -> bool) -> bool) (\(x1' :con).
   ((! :(val -> bool) -> bool) (\(x2' :val). (~
   (((= :val -> val -> bool) (CONval $2)) ((APPCONval $1) $0))))))))))
   ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(exval -> bool) -> bool) (\(x1' :exval). (~
   (((= :val -> val -> bool) (CONval $1)) (EXVALval $0)))))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(record -> bool) -> bool) (\(x1' :record). (~
   (((= :val -> val -> bool) (CONval $1)) (RECORDval $0)))))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(addr -> bool) -> bool) (\(x1' :addr). (~
   (((= :val -> val -> bool) (CONval $1)) (ADDRval $0)))))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(closure -> bool) -> bool) (\(x1' :closure). (~
   (((= :val -> val -> bool) (CONval $1)) (CLOSUREval $0)))))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   ((! :(exval -> bool) -> bool) (\(x1' :exval). (~
   (((= :val -> val -> bool) ((APPCONval $2) $1)) (EXVALval
   $0)))))))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   ((! :(record -> bool) -> bool) (\(x1' :record). (~
   (((= :val -> val -> bool) ((APPCONval $2) $1)) (RECORDval
   $0)))))))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   ((! :(addr -> bool) -> bool) (\(x1' :addr). (~
   (((= :val -> val -> bool) ((APPCONval $2) $1)) (ADDRval
   $0)))))))))) ((/\ ((! :(con -> bool) -> bool) (\(x1 :con).
   ((! :(val -> bool) -> bool) (\(x2 :val).
   ((! :(closure -> bool) -> bool) (\(x1' :closure). (~
   (((= :val -> val -> bool) ((APPCONval $2) $1)) (CLOSUREval
   $0)))))))))) ((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval).
   ((! :(record -> bool) -> bool) (\(x1' :record). (~
   (((= :val -> val -> bool) (EXVALval $1)) (RECORDval $0)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   ((! :(addr -> bool) -> bool) (\(x1' :addr). (~
   (((= :val -> val -> bool) (EXVALval $1)) (ADDRval $0)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(x1 :exval).
   ((! :(closure -> bool) -> bool) (\(x1' :closure). (~
   (((= :val -> val -> bool) (EXVALval $1)) (CLOSUREval $0))))))))
   ((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   ((! :(addr -> bool) -> bool) (\(x1' :addr). (~
   (((= :val -> val -> bool) (RECORDval $1)) (ADDRval $0)))))))) ((/\
   ((! :(record -> bool) -> bool) (\(x1 :record).
   ((! :(closure -> bool) -> bool) (\(x1' :closure). (~
   (((= :val -> val -> bool) (RECORDval $1)) (CLOSUREval $0))))))))
   ((! :(addr -> bool) -> bool) (\(x1 :addr).
   ((! :(closure -> bool) -> bool) (\(x1' :closure). (~
   (((= :val -> val -> bool) (ADDRval $1)) (CLOSUREval
   $0)))))))))))))))))))))))))))))))))))))))))))
   ((! :(var # val -> bool) -> bool) (\(x1' :var # val).
   ((! :((var # val) list -> bool) -> bool) (\(x2' :(var # val) list).
   (~ (((= :(var # val) list -> (var # val) list -> bool)
   (NIL :(var # val) list))
   (((CONS :var # val -> (var # val) list -> (var # val) list) $1)
   $0)))))))))))`),
 ((env_unique),
  [],
  `((! :(('b -> 'p -> match -> env -> varenv -> 'a) -> bool) -> bool)
   (\(CLOSURE_case :'b -> 'p -> match -> env -> varenv -> 'a).
   ((! :(('h -> 'p -> exconenv -> strenv -> varenv -> 'b) -> bool) ->
        bool)
   (\(ENV_case :'h -> 'p -> exconenv -> strenv -> varenv -> 'b).
   ((! :((exname -> 'c) -> bool) -> bool)
   (\(NAMEexval_case :exname -> 'c).
   ((! :(('l -> exname -> val -> 'c) -> bool) -> bool)
   (\(NAMEVALexval_case :'l -> exname -> val -> 'c).
   ((! :(('l -> label -> val -> 'd) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_ch44_label_val_case :'l ->
                                                                      label ->
                                                                      val ->
                                                                      'd).
   ((! :('e -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv_case :'e).
   ((! :(('d -> 'e -> label # val -> (label # val) list -> 'e) ->
        bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_case :'d ->
                                                                                                                      'e ->
                                                                                                                      label #
                                                                                                                      val ->
                                                                                                                      (label #
                                                                                                                      val)
                                                                                                                      list ->
                                                                                                                      'e).
   ((! :(('e -> (label # val) list -> 'f) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_case :'e ->
                                                                                                                                                                        (label #
                                                                                                                                                                        val)
                                                                                                                                                                        list ->
                                                                                                                                                                        'f).
   ((! :(('f -> (label # val) list finmap -> 'g) -> bool) -> bool)
   (\(RECORD_case :'f -> (label # val) list finmap -> 'g).
   ((! :(('k -> (strid # env) list finmap -> 'h) -> bool) -> bool)
   (\(STRENV_case :'k -> (strid # env) list finmap -> 'h).
   ((! :(('b -> strid -> env -> 'i) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_ch44_strid_env_case :'b ->
                                                                      strid ->
                                                                      env ->
                                                                      'i).
   ((! :('j -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv_case :'j).
   ((! :(('i -> 'j -> strid # env -> (strid # env) list -> 'j) ->
        bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_case :'i ->
                                                                                                                      'j ->
                                                                                                                      strid #
                                                                                                                      env ->
                                                                                                                      (strid #
                                                                                                                      env)
                                                                                                                      list ->
                                                                                                                      'j).
   ((! :(('j -> (strid # env) list -> 'k) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_case :'j ->
                                                                                                                                                                        (strid #
                                                                                                                                                                        env)
                                                                                                                                                                        list ->
                                                                                                                                                                        'k).
   ((! :('l -> bool) -> bool) (\(ASSGval_case :'l).
   ((! :((sval -> 'l) -> bool) -> bool) (\(SVALval_case :sval -> 'l).
   ((! :((basval -> 'l) -> bool) -> bool)
   (\(BASval_case :basval -> 'l). ((! :((con -> 'l) -> bool) -> bool)
   (\(CONval_case :con -> 'l).
   ((! :(('l -> con -> val -> 'l) -> bool) -> bool)
   (\(APPCONval_case :'l -> con -> val -> 'l).
   ((! :(('c -> exval -> 'l) -> bool) -> bool)
   (\(EXVALval_case :'c -> exval -> 'l).
   ((! :(('g -> record -> 'l) -> bool) -> bool)
   (\(RECORDval_case :'g -> record -> 'l).
   ((! :((addr -> 'l) -> bool) -> bool) (\(ADDRval_case :addr -> 'l).
   ((! :(('a -> closure -> 'l) -> bool) -> bool)
   (\(CLOSUREval_case :'a -> closure -> 'l).
   ((! :(('l -> var -> val -> 'm) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_ch44_var_val_case :'l ->
                                                                    var ->
                                                                    val ->
                                                                    'm).
   ((! :('n -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv_case :'n).
   ((! :(('m -> 'n -> var # val -> (var # val) list -> 'n) -> bool) ->
        bool)
   (\(closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_case :'m ->
                                                                                                                    'n ->
                                                                                                                    var #
                                                                                                                    val ->
                                                                                                                    (var #
                                                                                                                    val)
                                                                                                                    list ->
                                                                                                                    'n).
   ((! :(('n -> (var # val) list -> 'o) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_case :'n ->
                                                                                                                                                                      (var #
                                                                                                                                                                      val)
                                                                                                                                                                      list ->
                                                                                                                                                                      'o).
   ((! :(('o -> (var # val) list finmap -> 'p) -> bool) -> bool)
   (\(VARENV_case :'o -> (var # val) list finmap -> 'p).
   ((! :((closure -> 'a) -> bool) -> bool) (\(fn1 :closure -> 'a).
   ((! :((env -> 'b) -> bool) -> bool) (\(fn2 :env -> 'b).
   ((! :((exval -> 'c) -> bool) -> bool) (\(fn3 :exval -> 'c).
   ((! :((label # val -> 'd) -> bool) -> bool)
   (\(fn4 :label # val -> 'd).
   ((! :(((label # val) list -> 'e) -> bool) -> bool)
   (\(fn5 :(label # val) list -> 'e).
   ((! :(((label # val) list finmap -> 'f) -> bool) -> bool)
   (\(fn6 :(label # val) list finmap -> 'f).
   ((! :((record -> 'g) -> bool) -> bool) (\(fn7 :record -> 'g).
   ((! :((strenv -> 'h) -> bool) -> bool) (\(fn8 :strenv -> 'h).
   ((! :((strid # env -> 'i) -> bool) -> bool)
   (\(fn9 :strid # env -> 'i).
   ((! :(((strid # env) list -> 'j) -> bool) -> bool)
   (\(fn10 :(strid # env) list -> 'j).
   ((! :(((strid # env) list finmap -> 'k) -> bool) -> bool)
   (\(fn11 :(strid # env) list finmap -> 'k).
   ((! :((val -> 'l) -> bool) -> bool) (\(fn12 :val -> 'l).
   ((! :((var # val -> 'm) -> bool) -> bool)
   (\(fn13 :var # val -> 'm).
   ((! :(((var # val) list -> 'n) -> bool) -> bool)
   (\(fn14 :(var # val) list -> 'n).
   ((! :(((var # val) list finmap -> 'o) -> bool) -> bool)
   (\(fn15 :(var # val) list finmap -> 'o).
   ((! :((varenv -> 'p) -> bool) -> bool) (\(fn16 :varenv -> 'p).
   ((! :((closure -> 'a) -> bool) -> bool) (\(fn1' :closure -> 'a).
   ((! :((env -> 'b) -> bool) -> bool) (\(fn2' :env -> 'b).
   ((! :((exval -> 'c) -> bool) -> bool) (\(fn3' :exval -> 'c).
   ((! :((label # val -> 'd) -> bool) -> bool)
   (\(fn4' :label # val -> 'd).
   ((! :(((label # val) list -> 'e) -> bool) -> bool)
   (\(fn5' :(label # val) list -> 'e).
   ((! :(((label # val) list finmap -> 'f) -> bool) -> bool)
   (\(fn6' :(label # val) list finmap -> 'f).
   ((! :((record -> 'g) -> bool) -> bool) (\(fn7' :record -> 'g).
   ((! :((strenv -> 'h) -> bool) -> bool) (\(fn8' :strenv -> 'h).
   ((! :((strid # env -> 'i) -> bool) -> bool)
   (\(fn9' :strid # env -> 'i).
   ((! :(((strid # env) list -> 'j) -> bool) -> bool)
   (\(fn10' :(strid # env) list -> 'j).
   ((! :(((strid # env) list finmap -> 'k) -> bool) -> bool)
   (\(fn11' :(strid # env) list finmap -> 'k).
   ((! :((val -> 'l) -> bool) -> bool) (\(fn12' :val -> 'l).
   ((! :((var # val -> 'm) -> bool) -> bool)
   (\(fn13' :var # val -> 'm).
   ((! :(((var # val) list -> 'n) -> bool) -> bool)
   (\(fn14' :(var # val) list -> 'n).
   ((! :(((var # val) list finmap -> 'o) -> bool) -> bool)
   (\(fn15' :(var # val) list finmap -> 'o).
   ((! :((varenv -> 'p) -> bool) -> bool) (\(fn16' :varenv -> 'p).
   ((==> ((/\ ((! :(match -> bool) -> bool) (\(y :match).
   ((! :(env -> bool) -> bool) (\(y'''''''''''' :env).
   ((! :(varenv -> bool) -> bool) (\(y''''''''''' :varenv).
   (((= :'a -> 'a -> bool) ($34 (((CLOSURE $2) $1) $0))) ((((($62 ($33
   $1)) ($19 $0)) $2) $1) $0))))))))) ((/\
   ((! :(strenv -> bool) -> bool) (\(y :strenv).
   ((! :(varenv -> bool) -> bool) (\(y'''''''''' :varenv).
   ((! :(exconenv -> bool) -> bool) (\(y''''''''' :exconenv).
   (((= :'b -> 'b -> bool) ($33 (((ENV $2) $1) $0))) ((((($61 ($27
   $2)) ($19 $1)) $0) $2) $1))))))))) ((/\
   ((! :(exname -> bool) -> bool) (\(y :exname).
   (((= :'c -> 'c -> bool) ($30 (NAMEexval $0))) ($58 $0))))) ((/\
   ((! :(exname -> bool) -> bool) (\(y :exname).
   ((! :(val -> bool) -> bool) (\(y'''''''' :val).
   (((= :'c -> 'c -> bool) ($31 ((NAMEVALexval $1) $0))) ((($58 ($22
   $0)) $1) $0))))))) ((/\ ((! :(label -> bool) -> bool) (\(y :label).
   ((! :(val -> bool) -> bool) (\(y''''''' :val).
   (((= :'d -> 'd -> bool) ($30 (((, :label -> val -> label # val) $1)
   $0))) ((($57 ($22 $0)) $1) $0))))))) ((/\ (((= :'e -> 'e -> bool)
   ($27 (NIL :(label # val) list))) $54)) ((/\
   ((! :(label # val -> bool) -> bool) (\(y :label # val).
   ((! :((label # val) list -> bool) -> bool)
   (\(y'''''' :(label # val) list). (((= :'e -> 'e -> bool) ($29
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $1) $0))) (((($55 ($30 $1)) ($29 $0)) $1) $0))))))) ((/\
   ((! :((label # val) list -> bool) -> bool)
   (\(y :(label # val) list). (((= :'f -> 'f -> bool) ($27
   ((FINMAP :(label # val) list -> (label # val) list finmap) $0)))
   (($53 ($28 $0)) $0))))) ((/\
   ((! :((label # val) list finmap -> bool) -> bool)
   (\(y :(label # val) list finmap). (((= :'g -> 'g -> bool) ($26
   (RECORD $0))) (($52 ($27 $0)) $0))))) ((/\
   ((! :((strid # env) list finmap -> bool) -> bool)
   (\(y :(strid # env) list finmap). (((= :'h -> 'h -> bool) ($25
   (STRENV $0))) (($51 ($22 $0)) $0))))) ((/\
   ((! :(strid -> bool) -> bool) (\(y :strid).
   ((! :(env -> bool) -> bool) (\(y''''' :env).
   (((= :'i -> 'i -> bool) ($25 (((, :strid -> env -> strid # env) $1)
   $0))) ((($51 ($32 $0)) $1) $0))))))) ((/\ (((= :'j -> 'j -> bool)
   ($22 (NIL :(strid # env) list))) $48)) ((/\
   ((! :(strid # env -> bool) -> bool) (\(y :strid # env).
   ((! :((strid # env) list -> bool) -> bool)
   (\(y'''' :(strid # env) list). (((= :'j -> 'j -> bool) ($24
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $1) $0))) (((($49 ($25 $1)) ($24 $0)) $1) $0))))))) ((/\
   ((! :((strid # env) list -> bool) -> bool)
   (\(y :(strid # env) list). (((= :'k -> 'k -> bool) ($22
   ((FINMAP :(strid # env) list -> (strid # env) list finmap) $0)))
   (($47 ($23 $0)) $0))))) ((/\ (((= :'l -> 'l -> bool) ($20 ASSGval))
   $45)) ((/\ ((! :(sval -> bool) -> bool) (\(y :sval).
   (((= :'l -> 'l -> bool) ($21 (SVALval $0))) ($45 $0))))) ((/\
   ((! :(basval -> bool) -> bool) (\(y :basval).
   (((= :'l -> 'l -> bool) ($21 (BASval $0))) ($44 $0))))) ((/\
   ((! :(con -> bool) -> bool) (\(y :con). (((= :'l -> 'l -> bool)
   ($21 (CONval $0))) ($43 $0))))) ((/\ ((! :(con -> bool) -> bool)
   (\(y :con). ((! :(val -> bool) -> bool) (\(y''' :val).
   (((= :'l -> 'l -> bool) ($22 ((APPCONval $1) $0))) ((($43 ($22 $0))
   $1) $0))))))) ((/\ ((! :(exval -> bool) -> bool) (\(y :exval).
   (((= :'l -> 'l -> bool) ($21 (EXVALval $0))) (($41 ($30 $0))
   $0))))) ((/\ ((! :(record -> bool) -> bool) (\(y :record).
   (((= :'l -> 'l -> bool) ($21 (RECORDval $0))) (($40 ($26 $0))
   $0))))) ((/\ ((! :(addr -> bool) -> bool) (\(y :addr).
   (((= :'l -> 'l -> bool) ($21 (ADDRval $0))) ($39 $0))))) ((/\
   ((! :(closure -> bool) -> bool) (\(y :closure).
   (((= :'l -> 'l -> bool) ($21 (CLOSUREval $0))) (($38 ($32 $0))
   $0))))) ((/\ ((! :(var -> bool) -> bool) (\(y :var).
   ((! :(val -> bool) -> bool) (\(y'' :val). (((= :'m -> 'm -> bool)
   ($21 (((, :var -> val -> var # val) $1) $0))) ((($38 ($22 $0)) $1)
   $0))))))) ((/\ (((= :'n -> 'n -> bool) ($18
   (NIL :(var # val) list))) $35)) ((/\
   ((! :(var # val -> bool) -> bool) (\(y :var # val).
   ((! :((var # val) list -> bool) -> bool) (\(y' :(var # val) list).
   (((= :'n -> 'n -> bool) ($20
   (((CONS :var # val -> (var # val) list -> (var # val) list) $1)
   $0))) (((($36 ($21 $1)) ($20 $0)) $1) $0))))))) ((/\
   ((! :((var # val) list -> bool) -> bool) (\(y :(var # val) list).
   (((= :'o -> 'o -> bool) ($18
   ((FINMAP :(var # val) list -> (var # val) list finmap) $0))) (($34
   ($19 $0)) $0))))) ((! :((var # val) list finmap -> bool) -> bool)
   (\(y :(var # val) list finmap). (((= :'p -> 'p -> bool) ($17
   (VARENV $0))) (($33 ($18 $0)) $0))))))))))))))))))))))))))))))))
   ((==> ((/\ ((! :(match -> bool) -> bool) (\(y :match).
   ((! :(env -> bool) -> bool) (\(y'''''''''''' :env).
   ((! :(varenv -> bool) -> bool) (\(y''''''''''' :varenv).
   (((= :'a -> 'a -> bool) ($18 (((CLOSURE $2) $1) $0))) ((((($62 ($17
   $1)) ($3 $0)) $2) $1) $0))))))))) ((/\
   ((! :(strenv -> bool) -> bool) (\(y :strenv).
   ((! :(varenv -> bool) -> bool) (\(y'''''''''' :varenv).
   ((! :(exconenv -> bool) -> bool) (\(y''''''''' :exconenv).
   (((= :'b -> 'b -> bool) ($17 (((ENV $2) $1) $0))) ((((($61 ($11
   $2)) ($3 $1)) $0) $2) $1))))))))) ((/\
   ((! :(exname -> bool) -> bool) (\(y :exname).
   (((= :'c -> 'c -> bool) ($14 (NAMEexval $0))) ($58 $0))))) ((/\
   ((! :(exname -> bool) -> bool) (\(y :exname).
   ((! :(val -> bool) -> bool) (\(y'''''''' :val).
   (((= :'c -> 'c -> bool) ($15 ((NAMEVALexval $1) $0))) ((($58 ($6
   $0)) $1) $0))))))) ((/\ ((! :(label -> bool) -> bool) (\(y :label).
   ((! :(val -> bool) -> bool) (\(y''''''' :val).
   (((= :'d -> 'd -> bool) ($14 (((, :label -> val -> label # val) $1)
   $0))) ((($57 ($6 $0)) $1) $0))))))) ((/\ (((= :'e -> 'e -> bool)
   ($11 (NIL :(label # val) list))) $54)) ((/\
   ((! :(label # val -> bool) -> bool) (\(y :label # val).
   ((! :((label # val) list -> bool) -> bool)
   (\(y'''''' :(label # val) list). (((= :'e -> 'e -> bool) ($13
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $1) $0))) (((($55 ($14 $1)) ($13 $0)) $1) $0))))))) ((/\
   ((! :((label # val) list -> bool) -> bool)
   (\(y :(label # val) list). (((= :'f -> 'f -> bool) ($11
   ((FINMAP :(label # val) list -> (label # val) list finmap) $0)))
   (($53 ($12 $0)) $0))))) ((/\
   ((! :((label # val) list finmap -> bool) -> bool)
   (\(y :(label # val) list finmap). (((= :'g -> 'g -> bool) ($10
   (RECORD $0))) (($52 ($11 $0)) $0))))) ((/\
   ((! :((strid # env) list finmap -> bool) -> bool)
   (\(y :(strid # env) list finmap). (((= :'h -> 'h -> bool) ($9
   (STRENV $0))) (($51 ($6 $0)) $0))))) ((/\
   ((! :(strid -> bool) -> bool) (\(y :strid).
   ((! :(env -> bool) -> bool) (\(y''''' :env).
   (((= :'i -> 'i -> bool) ($9 (((, :strid -> env -> strid # env) $1)
   $0))) ((($51 ($16 $0)) $1) $0))))))) ((/\ (((= :'j -> 'j -> bool)
   ($6 (NIL :(strid # env) list))) $48)) ((/\
   ((! :(strid # env -> bool) -> bool) (\(y :strid # env).
   ((! :((strid # env) list -> bool) -> bool)
   (\(y'''' :(strid # env) list). (((= :'j -> 'j -> bool) ($8
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $1) $0))) (((($49 ($9 $1)) ($8 $0)) $1) $0))))))) ((/\
   ((! :((strid # env) list -> bool) -> bool)
   (\(y :(strid # env) list). (((= :'k -> 'k -> bool) ($6
   ((FINMAP :(strid # env) list -> (strid # env) list finmap) $0)))
   (($47 ($7 $0)) $0))))) ((/\ (((= :'l -> 'l -> bool) ($4 ASSGval))
   $45)) ((/\ ((! :(sval -> bool) -> bool) (\(y :sval).
   (((= :'l -> 'l -> bool) ($5 (SVALval $0))) ($45 $0))))) ((/\
   ((! :(basval -> bool) -> bool) (\(y :basval).
   (((= :'l -> 'l -> bool) ($5 (BASval $0))) ($44 $0))))) ((/\
   ((! :(con -> bool) -> bool) (\(y :con). (((= :'l -> 'l -> bool) ($5
   (CONval $0))) ($43 $0))))) ((/\ ((! :(con -> bool) -> bool)
   (\(y :con). ((! :(val -> bool) -> bool) (\(y''' :val).
   (((= :'l -> 'l -> bool) ($6 ((APPCONval $1) $0))) ((($43 ($6 $0))
   $1) $0))))))) ((/\ ((! :(exval -> bool) -> bool) (\(y :exval).
   (((= :'l -> 'l -> bool) ($5 (EXVALval $0))) (($41 ($14 $0)) $0)))))
   ((/\ ((! :(record -> bool) -> bool) (\(y :record).
   (((= :'l -> 'l -> bool) ($5 (RECORDval $0))) (($40 ($10 $0))
   $0))))) ((/\ ((! :(addr -> bool) -> bool) (\(y :addr).
   (((= :'l -> 'l -> bool) ($5 (ADDRval $0))) ($39 $0))))) ((/\
   ((! :(closure -> bool) -> bool) (\(y :closure).
   (((= :'l -> 'l -> bool) ($5 (CLOSUREval $0))) (($38 ($16 $0))
   $0))))) ((/\ ((! :(var -> bool) -> bool) (\(y :var).
   ((! :(val -> bool) -> bool) (\(y'' :val). (((= :'m -> 'm -> bool)
   ($5 (((, :var -> val -> var # val) $1) $0))) ((($38 ($6 $0)) $1)
   $0))))))) ((/\ (((= :'n -> 'n -> bool) ($2
   (NIL :(var # val) list))) $35)) ((/\
   ((! :(var # val -> bool) -> bool) (\(y :var # val).
   ((! :((var # val) list -> bool) -> bool) (\(y' :(var # val) list).
   (((= :'n -> 'n -> bool) ($4
   (((CONS :var # val -> (var # val) list -> (var # val) list) $1)
   $0))) (((($36 ($5 $1)) ($4 $0)) $1) $0))))))) ((/\
   ((! :((var # val) list -> bool) -> bool) (\(y :(var # val) list).
   (((= :'o -> 'o -> bool) ($2
   ((FINMAP :(var # val) list -> (var # val) list finmap) $0))) (($34
   ($3 $0)) $0))))) ((! :((var # val) list finmap -> bool) -> bool)
   (\(y :(var # val) list finmap). (((= :'p -> 'p -> bool) ($1 (VARENV
   $0))) (($33 ($2 $0)) $0)))))))))))))))))))))))))))))))) ((/\
   (((= :(closure -> 'a) -> (closure -> 'a) -> bool) $31) $15)) ((/\
   (((= :(env -> 'b) -> (env -> 'b) -> bool) $30) $14)) ((/\
   (((= :(exval -> 'c) -> (exval -> 'c) -> bool) $29) $13)) ((/\
   (((= :(label # val -> 'd) -> (label # val -> 'd) -> bool) $28)
   $12)) ((/\
   (((= :((label # val) list -> 'e) -> ((label # val) list -> 'e) ->
         bool) $27) $11)) ((/\
   (((= :((label # val) list finmap -> 'f) ->
         ((label # val) list finmap -> 'f) -> bool) $26) $10)) ((/\
   (((= :(record -> 'g) -> (record -> 'g) -> bool) $25) $9)) ((/\
   (((= :(strenv -> 'h) -> (strenv -> 'h) -> bool) $24) $8)) ((/\
   (((= :(strid # env -> 'i) -> (strid # env -> 'i) -> bool) $23) $7))
   ((/\
   (((= :((strid # env) list -> 'j) -> ((strid # env) list -> 'j) ->
         bool) $22) $6)) ((/\
   (((= :((strid # env) list finmap -> 'k) ->
         ((strid # env) list finmap -> 'k) -> bool) $21) $5)) ((/\
   (((= :(val -> 'l) -> (val -> 'l) -> bool) $20) $4)) ((/\
   (((= :(var # val -> 'm) -> (var # val -> 'm) -> bool) $19) $3))
   ((/\
   (((= :((var # val) list -> 'n) -> ((var # val) list -> 'n) -> bool)
   $18) $2)) ((/\
   (((= :((var # val) list finmap -> 'o) ->
         ((var # val) list finmap -> 'o) -> bool) $17) $1))
   (((= :(varenv -> 'p) -> (varenv -> 'p) -> bool) $16)
   $0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))`),
 ((env_induct),
  [],
  `((! :((closure -> bool) -> bool) -> bool)
   (\(closure_Prop :closure -> bool).
   ((! :((env -> bool) -> bool) -> bool) (\(env_Prop :env -> bool).
   ((! :((exval -> bool) -> bool) -> bool)
   (\(exval_Prop :exval -> bool).
   ((! :((label # val -> bool) -> bool) -> bool)
   (\(label_val_prod_closure_env_exval_record_strenv_val_varenv_Prop :label #
                                                                      val ->
                                                                      bool).
   ((! :(((label # val) list -> bool) -> bool) -> bool)
   (\(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_Prop :(label #
                                                                                                                      val)
                                                                                                                      list ->
                                                                                                                      bool).
   ((! :(((label # val) list finmap -> bool) -> bool) -> bool)
   (\(label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_Prop :(label #
                                                                                                                                                                        val)
                                                                                                                                                                        list
                                                                                                                                                                        finmap ->
                                                                                                                                                                        bool).
   ((! :((record -> bool) -> bool) -> bool)
   (\(record_Prop :record -> bool).
   ((! :((strenv -> bool) -> bool) -> bool)
   (\(strenv_Prop :strenv -> bool).
   ((! :((strid # env -> bool) -> bool) -> bool)
   (\(strid_env_prod_closure_env_exval_record_strenv_val_varenv_Prop :strid #
                                                                      env ->
                                                                      bool).
   ((! :(((strid # env) list -> bool) -> bool) -> bool)
   (\(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_Prop :(strid #
                                                                                                                      env)
                                                                                                                      list ->
                                                                                                                      bool).
   ((! :(((strid # env) list finmap -> bool) -> bool) -> bool)
   (\(strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_Prop :(strid #
                                                                                                                                                                        env)
                                                                                                                                                                        list
                                                                                                                                                                        finmap ->
                                                                                                                                                                        bool).
   ((! :((val -> bool) -> bool) -> bool) (\(val_Prop :val -> bool).
   ((! :((var # val -> bool) -> bool) -> bool)
   (\(var_val_prod_closure_env_exval_record_strenv_val_varenv_Prop :var #
                                                                    val ->
                                                                    bool).
   ((! :(((var # val) list -> bool) -> bool) -> bool)
   (\(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_Prop :(var #
                                                                                                                    val)
                                                                                                                    list ->
                                                                                                                    bool).
   ((! :(((var # val) list finmap -> bool) -> bool) -> bool)
   (\(var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_Prop :(var #
                                                                                                                                                                      val)
                                                                                                                                                                      list
                                                                                                                                                                      finmap ->
                                                                                                                                                                      bool).
   ((! :((varenv -> bool) -> bool) -> bool)
   (\(varenv_Prop :varenv -> bool). ((==> ((/\
   ((! :(match -> bool) -> bool) (\(y :match).
   ((! :(env -> bool) -> bool) (\(y'''''''''''' :env).
   ((! :(varenv -> bool) -> bool) (\(y''''''''''' :varenv). ((==> ($17
   $1)) ((==> ($3 $0)) ($18 (((CLOSURE $2) $1) $0))))))))))) ((/\
   ((! :(strenv -> bool) -> bool) (\(y :strenv).
   ((! :(varenv -> bool) -> bool) (\(y'''''''''' :varenv).
   ((! :(exconenv -> bool) -> bool) (\(y''''''''' :exconenv). ((==>
   ($11 $2)) ((==> ($3 $1)) ($17 (((ENV $2) $1) $0))))))))))) ((/\
   ((! :(exname -> bool) -> bool) (\(y :exname). ($14 (NAMEexval
   $0))))) ((/\ ((! :(exname -> bool) -> bool) (\(y :exname).
   ((! :(val -> bool) -> bool) (\(y'''''''' :val). ((==> ($6 $0)) ($15
   ((NAMEVALexval $1) $0)))))))) ((/\ ((! :(label -> bool) -> bool)
   (\(y :label). ((! :(val -> bool) -> bool) (\(y''''''' :val). ((==>
   ($6 $0)) ($14 (((, :label -> val -> label # val) $1) $0))))))))
   ((/\ ($11 (NIL :(label # val) list))) ((/\
   ((! :(label # val -> bool) -> bool) (\(y :label # val).
   ((! :((label # val) list -> bool) -> bool)
   (\(y'''''' :(label # val) list). ((==> ($14 $1)) ((==> ($13 $0))
   ($13
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $1) $0))))))))) ((/\ ((! :((label # val) list -> bool) -> bool)
   (\(y :(label # val) list). ((==> ($12 $0)) ($11
   ((FINMAP :(label # val) list -> (label # val) list finmap) $0))))))
   ((/\ ((! :((label # val) list finmap -> bool) -> bool)
   (\(y :(label # val) list finmap). ((==> ($11 $0)) ($10 (RECORD
   $0)))))) ((/\ ((! :((strid # env) list finmap -> bool) -> bool)
   (\(y :(strid # env) list finmap). ((==> ($6 $0)) ($9 (STRENV
   $0)))))) ((/\ ((! :(strid -> bool) -> bool) (\(y :strid).
   ((! :(env -> bool) -> bool) (\(y''''' :env). ((==> ($16 $0)) ($9
   (((, :strid -> env -> strid # env) $1) $0)))))))) ((/\ ($6
   (NIL :(strid # env) list))) ((/\
   ((! :(strid # env -> bool) -> bool) (\(y :strid # env).
   ((! :((strid # env) list -> bool) -> bool)
   (\(y'''' :(strid # env) list). ((==> ($9 $1)) ((==> ($8 $0)) ($8
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $1) $0))))))))) ((/\ ((! :((strid # env) list -> bool) -> bool)
   (\(y :(strid # env) list). ((==> ($7 $0)) ($6
   ((FINMAP :(strid # env) list -> (strid # env) list finmap) $0))))))
   ((/\ ($4 ASSGval)) ((/\ ((! :(sval -> bool) -> bool) (\(y :sval).
   ($5 (SVALval $0))))) ((/\ ((! :(basval -> bool) -> bool)
   (\(y :basval). ($5 (BASval $0))))) ((/\ ((! :(con -> bool) -> bool)
   (\(y :con). ($5 (CONval $0))))) ((/\ ((! :(con -> bool) -> bool)
   (\(y :con). ((! :(val -> bool) -> bool) (\(y''' :val). ((==> ($6
   $0)) ($6 ((APPCONval $1) $0)))))))) ((/\
   ((! :(exval -> bool) -> bool) (\(y :exval). ((==> ($14 $0)) ($5
   (EXVALval $0)))))) ((/\ ((! :(record -> bool) -> bool)
   (\(y :record). ((==> ($10 $0)) ($5 (RECORDval $0)))))) ((/\
   ((! :(addr -> bool) -> bool) (\(y :addr). ($5 (ADDRval $0))))) ((/\
   ((! :(closure -> bool) -> bool) (\(y :closure). ((==> ($16 $0)) ($5
   (CLOSUREval $0)))))) ((/\ ((! :(var -> bool) -> bool) (\(y :var).
   ((! :(val -> bool) -> bool) (\(y'' :val). ((==> ($6 $0)) ($5
   (((, :var -> val -> var # val) $1) $0)))))))) ((/\ ($2
   (NIL :(var # val) list))) ((/\ ((! :(var # val -> bool) -> bool)
   (\(y :var # val). ((! :((var # val) list -> bool) -> bool)
   (\(y' :(var # val) list). ((==> ($5 $1)) ((==> ($4 $0)) ($4
   (((CONS :var # val -> (var # val) list -> (var # val) list) $1)
   $0))))))))) ((/\ ((! :((var # val) list -> bool) -> bool)
   (\(y :(var # val) list). ((==> ($3 $0)) ($2
   ((FINMAP :(var # val) list -> (var # val) list finmap) $0))))))
   ((! :((var # val) list finmap -> bool) -> bool)
   (\(y :(var # val) list finmap). ((==> ($2 $0)) ($1 (VARENV
   $0))))))))))))))))))))))))))))))))) ((/\
   ((! :(closure -> bool) -> bool) (\(x1 :closure). ($16 $0)))) ((/\
   ((! :(env -> bool) -> bool) (\(x2 :env). ($15 $0)))) ((/\
   ((! :(exval -> bool) -> bool) (\(x3 :exval). ($14 $0)))) ((/\
   ((! :(label # val -> bool) -> bool) (\(x4 :label # val). ($13
   $0)))) ((/\ ((! :((label # val) list -> bool) -> bool)
   (\(x5 :(label # val) list). ($12 $0)))) ((/\
   ((! :((label # val) list finmap -> bool) -> bool)
   (\(x6 :(label # val) list finmap). ($11 $0)))) ((/\
   ((! :(record -> bool) -> bool) (\(x7 :record). ($10 $0)))) ((/\
   ((! :(strenv -> bool) -> bool) (\(x8 :strenv). ($9 $0)))) ((/\
   ((! :(strid # env -> bool) -> bool) (\(x9 :strid # env). ($8 $0))))
   ((/\ ((! :((strid # env) list -> bool) -> bool)
   (\(x10 :(strid # env) list). ($7 $0)))) ((/\
   ((! :((strid # env) list finmap -> bool) -> bool)
   (\(x11 :(strid # env) list finmap). ($6 $0)))) ((/\
   ((! :(val -> bool) -> bool) (\(x12 :val). ($5 $0)))) ((/\
   ((! :(var # val -> bool) -> bool) (\(x13 :var # val). ($4 $0))))
   ((/\ ((! :((var # val) list -> bool) -> bool)
   (\(x14 :(var # val) list). ($3 $0)))) ((/\
   ((! :((var # val) list finmap -> bool) -> bool)
   (\(x15 :(var # val) list finmap). ($2 $0))))
   ((! :(varenv -> bool) -> bool) (\(x16 :varenv). ($1
   $0)))))))))))))))))))))))))))))))))))))))))))))))))))`),
 ((env_existence),
  [],
  `((! :(('b -> 'p -> match -> env -> varenv -> 'a) -> bool) -> bool)
   (\(CLOSURE_case :'b -> 'p -> match -> env -> varenv -> 'a).
   ((! :(('h -> 'p -> exconenv -> strenv -> varenv -> 'b) -> bool) ->
        bool)
   (\(ENV_case :'h -> 'p -> exconenv -> strenv -> varenv -> 'b).
   ((! :((exname -> 'c) -> bool) -> bool)
   (\(NAMEexval_case :exname -> 'c).
   ((! :(('l -> exname -> val -> 'c) -> bool) -> bool)
   (\(NAMEVALexval_case :'l -> exname -> val -> 'c).
   ((! :(('l -> label -> val -> 'd) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_ch44_label_val_case :'l ->
                                                                      label ->
                                                                      val ->
                                                                      'd).
   ((! :('e -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv_case :'e).
   ((! :(('d -> 'e -> label # val -> (label # val) list -> 'e) ->
        bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv_case :'d ->
                                                                                                                      'e ->
                                                                                                                      label #
                                                                                                                      val ->
                                                                                                                      (label #
                                                                                                                      val)
                                                                                                                      list ->
                                                                                                                      'e).
   ((! :(('e -> (label # val) list -> 'f) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_case :'e ->
                                                                                                                                                                        (label #
                                                                                                                                                                        val)
                                                                                                                                                                        list ->
                                                                                                                                                                        'f).
   ((! :(('f -> (label # val) list finmap -> 'g) -> bool) -> bool)
   (\(RECORD_case :'f -> (label # val) list finmap -> 'g).
   ((! :(('k -> (strid # env) list finmap -> 'h) -> bool) -> bool)
   (\(STRENV_case :'k -> (strid # env) list finmap -> 'h).
   ((! :(('b -> strid -> env -> 'i) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_ch44_strid_env_case :'b ->
                                                                      strid ->
                                                                      env ->
                                                                      'i).
   ((! :('j -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv_case :'j).
   ((! :(('i -> 'j -> strid # env -> (strid # env) list -> 'j) ->
        bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv_case :'i ->
                                                                                                                      'j ->
                                                                                                                      strid #
                                                                                                                      env ->
                                                                                                                      (strid #
                                                                                                                      env)
                                                                                                                      list ->
                                                                                                                      'j).
   ((! :(('j -> (strid # env) list -> 'k) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_case :'j ->
                                                                                                                                                                        (strid #
                                                                                                                                                                        env)
                                                                                                                                                                        list ->
                                                                                                                                                                        'k).
   ((! :('l -> bool) -> bool) (\(ASSGval_case :'l).
   ((! :((sval -> 'l) -> bool) -> bool) (\(SVALval_case :sval -> 'l).
   ((! :((basval -> 'l) -> bool) -> bool)
   (\(BASval_case :basval -> 'l). ((! :((con -> 'l) -> bool) -> bool)
   (\(CONval_case :con -> 'l).
   ((! :(('l -> con -> val -> 'l) -> bool) -> bool)
   (\(APPCONval_case :'l -> con -> val -> 'l).
   ((! :(('c -> exval -> 'l) -> bool) -> bool)
   (\(EXVALval_case :'c -> exval -> 'l).
   ((! :(('g -> record -> 'l) -> bool) -> bool)
   (\(RECORDval_case :'g -> record -> 'l).
   ((! :((addr -> 'l) -> bool) -> bool) (\(ADDRval_case :addr -> 'l).
   ((! :(('a -> closure -> 'l) -> bool) -> bool)
   (\(CLOSUREval_case :'a -> closure -> 'l).
   ((! :(('l -> var -> val -> 'm) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_ch44_var_val_case :'l ->
                                                                    var ->
                                                                    val ->
                                                                    'm).
   ((! :('n -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv_case :'n).
   ((! :(('m -> 'n -> var # val -> (var # val) list -> 'n) -> bool) ->
        bool)
   (\(closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv_case :'m ->
                                                                                                                    'n ->
                                                                                                                    var #
                                                                                                                    val ->
                                                                                                                    (var #
                                                                                                                    val)
                                                                                                                    list ->
                                                                                                                    'n).
   ((! :(('n -> (var # val) list -> 'o) -> bool) -> bool)
   (\(closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_case :'n ->
                                                                                                                                                                      (var #
                                                                                                                                                                      val)
                                                                                                                                                                      list ->
                                                                                                                                                                      'o).
   ((! :(('o -> (var # val) list finmap -> 'p) -> bool) -> bool)
   (\(VARENV_case :'o -> (var # val) list finmap -> 'p).
   ((? :((closure -> 'a) -> bool) -> bool) (\(y :closure -> 'a).
   ((? :((env -> 'b) -> bool) -> bool)
   (\(y''''''''''''''' :env -> 'b).
   ((? :((exval -> 'c) -> bool) -> bool)
   (\(y'''''''''''''' :exval -> 'c).
   ((? :((label # val -> 'd) -> bool) -> bool)
   (\(y''''''''''''' :label # val -> 'd).
   ((? :(((label # val) list -> 'e) -> bool) -> bool)
   (\(y'''''''''''' :(label # val) list -> 'e).
   ((? :(((label # val) list finmap -> 'f) -> bool) -> bool)
   (\(y''''''''''' :(label # val) list finmap -> 'f).
   ((? :((record -> 'g) -> bool) -> bool)
   (\(y'''''''''' :record -> 'g).
   ((? :((strenv -> 'h) -> bool) -> bool)
   (\(y''''''''' :strenv -> 'h).
   ((? :((strid # env -> 'i) -> bool) -> bool)
   (\(y'''''''' :strid # env -> 'i).
   ((? :(((strid # env) list -> 'j) -> bool) -> bool)
   (\(y''''''' :(strid # env) list -> 'j).
   ((? :(((strid # env) list finmap -> 'k) -> bool) -> bool)
   (\(y'''''' :(strid # env) list finmap -> 'k).
   ((? :((val -> 'l) -> bool) -> bool) (\(y''''' :val -> 'l).
   ((? :((var # val -> 'm) -> bool) -> bool)
   (\(y'''' :var # val -> 'm).
   ((? :(((var # val) list -> 'n) -> bool) -> bool)
   (\(y''' :(var # val) list -> 'n).
   ((? :(((var # val) list finmap -> 'o) -> bool) -> bool)
   (\(y'' :(var # val) list finmap -> 'o).
   ((? :((varenv -> 'p) -> bool) -> bool) (\(y' :varenv -> 'p). ((/\
   ((! :(match -> bool) -> bool) (\(x1 :match).
   ((! :(env -> bool) -> bool) (\(x2 :env).
   ((! :(varenv -> bool) -> bool) (\(x3 :varenv).
   (((= :'a -> 'a -> bool) ($18 (((CLOSURE $2) $1) $0))) ((((($46 ($17
   $1)) ($3 $0)) $2) $1) $0))))))))) ((/\
   ((! :(strenv -> bool) -> bool) (\(x1 :strenv).
   ((! :(varenv -> bool) -> bool) (\(x2 :varenv).
   ((! :(exconenv -> bool) -> bool) (\(x3 :exconenv).
   (((= :'b -> 'b -> bool) ($17 (((ENV $2) $1) $0))) ((((($45 ($11
   $2)) ($3 $1)) $0) $2) $1))))))))) ((/\
   ((! :(exname -> bool) -> bool) (\(x1 :exname).
   (((= :'c -> 'c -> bool) ($14 (NAMEexval $0))) ($42 $0))))) ((/\
   ((! :(exname -> bool) -> bool) (\(x1 :exname).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :'c -> 'c -> bool)
   ($15 ((NAMEVALexval $1) $0))) ((($42 ($6 $0)) $1) $0))))))) ((/\
   ((! :(label -> bool) -> bool) (\(x1 :label).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :'d -> 'd -> bool)
   ($14 (((, :label -> val -> label # val) $1) $0))) ((($41 ($6 $0))
   $1) $0))))))) ((/\ (((= :'e -> 'e -> bool) ($11
   (NIL :(label # val) list))) $38)) ((/\
   ((! :(label # val -> bool) -> bool) (\(x1 :label # val).
   ((! :((label # val) list -> bool) -> bool)
   (\(x2 :(label # val) list). (((= :'e -> 'e -> bool) ($13
   (((CONS :label # val -> (label # val) list -> (label # val) list)
   $1) $0))) (((($39 ($14 $1)) ($13 $0)) $1) $0))))))) ((/\
   ((! :((label # val) list -> bool) -> bool)
   (\(x1 :(label # val) list). (((= :'f -> 'f -> bool) ($11
   ((FINMAP :(label # val) list -> (label # val) list finmap) $0)))
   (($37 ($12 $0)) $0))))) ((/\
   ((! :((label # val) list finmap -> bool) -> bool)
   (\(x1 :(label # val) list finmap). (((= :'g -> 'g -> bool) ($10
   (RECORD $0))) (($36 ($11 $0)) $0))))) ((/\
   ((! :((strid # env) list finmap -> bool) -> bool)
   (\(x1 :(strid # env) list finmap). (((= :'h -> 'h -> bool) ($9
   (STRENV $0))) (($35 ($6 $0)) $0))))) ((/\
   ((! :(strid -> bool) -> bool) (\(x1 :strid).
   ((! :(env -> bool) -> bool) (\(x2 :env). (((= :'i -> 'i -> bool)
   ($9 (((, :strid -> env -> strid # env) $1) $0))) ((($35 ($16 $0))
   $1) $0))))))) ((/\ (((= :'j -> 'j -> bool) ($6
   (NIL :(strid # env) list))) $32)) ((/\
   ((! :(strid # env -> bool) -> bool) (\(x1 :strid # env).
   ((! :((strid # env) list -> bool) -> bool)
   (\(x2 :(strid # env) list). (((= :'j -> 'j -> bool) ($8
   (((CONS :strid # env -> (strid # env) list -> (strid # env) list)
   $1) $0))) (((($33 ($9 $1)) ($8 $0)) $1) $0))))))) ((/\
   ((! :((strid # env) list -> bool) -> bool)
   (\(x1 :(strid # env) list). (((= :'k -> 'k -> bool) ($6
   ((FINMAP :(strid # env) list -> (strid # env) list finmap) $0)))
   (($31 ($7 $0)) $0))))) ((/\ (((= :'l -> 'l -> bool) ($4 ASSGval))
   $29)) ((/\ ((! :(sval -> bool) -> bool) (\(x1 :sval).
   (((= :'l -> 'l -> bool) ($5 (SVALval $0))) ($29 $0))))) ((/\
   ((! :(basval -> bool) -> bool) (\(x1 :basval).
   (((= :'l -> 'l -> bool) ($5 (BASval $0))) ($28 $0))))) ((/\
   ((! :(con -> bool) -> bool) (\(x1 :con). (((= :'l -> 'l -> bool)
   ($5 (CONval $0))) ($27 $0))))) ((/\ ((! :(con -> bool) -> bool)
   (\(x1 :con). ((! :(val -> bool) -> bool) (\(x2 :val).
   (((= :'l -> 'l -> bool) ($6 ((APPCONval $1) $0))) ((($27 ($6 $0))
   $1) $0))))))) ((/\ ((! :(exval -> bool) -> bool) (\(x1 :exval).
   (((= :'l -> 'l -> bool) ($5 (EXVALval $0))) (($25 ($14 $0)) $0)))))
   ((/\ ((! :(record -> bool) -> bool) (\(x1 :record).
   (((= :'l -> 'l -> bool) ($5 (RECORDval $0))) (($24 ($10 $0))
   $0))))) ((/\ ((! :(addr -> bool) -> bool) (\(x1 :addr).
   (((= :'l -> 'l -> bool) ($5 (ADDRval $0))) ($23 $0))))) ((/\
   ((! :(closure -> bool) -> bool) (\(x1 :closure).
   (((= :'l -> 'l -> bool) ($5 (CLOSUREval $0))) (($22 ($16 $0))
   $0))))) ((/\ ((! :(var -> bool) -> bool) (\(x1 :var).
   ((! :(val -> bool) -> bool) (\(x2 :val). (((= :'m -> 'm -> bool)
   ($5 (((, :var -> val -> var # val) $1) $0))) ((($22 ($6 $0)) $1)
   $0))))))) ((/\ (((= :'n -> 'n -> bool) ($2
   (NIL :(var # val) list))) $19)) ((/\
   ((! :(var # val -> bool) -> bool) (\(x1 :var # val).
   ((! :((var # val) list -> bool) -> bool) (\(x2 :(var # val) list).
   (((= :'n -> 'n -> bool) ($4
   (((CONS :var # val -> (var # val) list -> (var # val) list) $1)
   $0))) (((($20 ($5 $1)) ($4 $0)) $1) $0))))))) ((/\
   ((! :((var # val) list -> bool) -> bool) (\(x1 :(var # val) list).
   (((= :'o -> 'o -> bool) ($2
   ((FINMAP :(var # val) list -> (var # val) list finmap) $0))) (($18
   ($3 $0)) $0))))) ((! :((var # val) list finmap -> bool) -> bool)
   (\(x1 :(var # val) list finmap). (((= :'p -> 'p -> bool) ($1
   (VARENV $0))) (($17 ($2 $0))
   $0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))`),
 ((joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv_Axiom),
  [],
  `((! :(('a -> 'a -> match ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f0 :'a -> 'a -> match ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a).
   ((! :(('a -> 'a -> exconenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f1 :'a -> 'a -> exconenv ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a). ((! :((exname -> 'a) -> bool) -> bool)
   (\(f2 :exname -> 'a).
   ((! :(('a -> exname ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f3 :'a -> exname ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a).
   ((! :(('a -> label ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f4 :'a -> label ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a). ((! :('a -> bool) -> bool) (\(e0 :'a).
   ((! :(('a -> 'a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f5 :'a -> 'a ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f6 :'a ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f7 :'a ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f8 :'a ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a).
   ((! :(('a -> strid ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f9 :'a -> strid ->
          joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a). ((! :('a -> bool) -> bool) (\(e1 :'a).
   ((! :(('a -> 'a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f10 :'a -> 'a ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f11 :'a ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a). ((! :('a -> bool) -> bool) (\(e2 :'a).
   ((! :((sval -> 'a) -> bool) -> bool) (\(f12 :sval -> 'a).
   ((! :((basval -> 'a) -> bool) -> bool) (\(f13 :basval -> 'a).
   ((! :((con -> 'a) -> bool) -> bool) (\(f14 :con -> 'a).
   ((! :(('a -> con ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f15 :'a -> con ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f16 :'a ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f17 :'a ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a). ((! :((addr -> 'a) -> bool) -> bool)
   (\(f18 :addr -> 'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f19 :'a ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a).
   ((! :(('a -> var ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f20 :'a -> var ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a). ((! :('a -> bool) -> bool) (\(e3 :'a).
   ((! :(('a -> 'a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f21 :'a -> 'a ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f22 :'a ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a).
   ((! :(('a ->
         joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
         'a) -> bool) -> bool)
   (\(f23 :'a ->
           joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
           'a).
   ((?! :((joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a) -> bool) -> bool)
   (\(fn :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
          'a). ((/\ ((! :(match -> bool) -> bool) (\(m :match).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($3 (((JOINT_int_CLOSURE $2) $1) $0)))
   ((((($31 ($3 $1)) ($3 $0)) $2) $1) $0))))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(exconenv -> bool) -> bool) (\(e :exconenv).
   (((= :'a -> 'a -> bool) ($3 (((JOINT_int_ENV $2) $1) $0))) ((((($30
   ($3 $2)) ($3 $1)) $0) $2) $1))))))))) ((/\
   ((! :(exname -> bool) -> bool) (\(e :exname).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_NAMEexval $0))) ($27 $0)))))
   ((/\ ((! :(exname -> bool) -> bool) (\(e :exname).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($2 ((JOINT_int_NAMEVALexval $1) $0)))
   ((($27 ($2 $0)) $1) $0))))))) ((/\ ((! :(label -> bool) -> bool)
   (\(l' :label).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($2
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_label_val
   $1) $0))) ((($26 ($2 $0)) $1) $0))))))) ((/\
   (((= :'a -> 'a -> bool) ($0
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_label_val_prod_closure_env_exval_record_strenv_val_varenv))
   $23)) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($2
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_label_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) (((($24 ($2 $1)) ($2 $0)) $1) $0))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) (($22 ($1 $0)) $0))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_RECORD $0))) (($21 ($1 $0))
   $0))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_STRENV $0))) (($20 ($1 $0))
   $0))))) ((/\ ((! :(strid -> bool) -> bool) (\(s :strid).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($2
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_strid_env
   $1) $0))) ((($20 ($2 $0)) $1) $0))))))) ((/\
   (((= :'a -> 'a -> bool) ($0
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_strid_env_prod_closure_env_exval_record_strenv_val_varenv))
   $17)) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($2
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_strid_env_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) (((($18 ($2 $1)) ($2 $0)) $1) $0))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) (($16 ($1 $0)) $0))))) ((/\ (((= :'a -> 'a -> bool) ($0
   JOINT_int_ASSGval)) $14)) ((/\ ((! :(sval -> bool) -> bool)
   (\(s :sval). (((= :'a -> 'a -> bool) ($1 (JOINT_int_SVALval $0)))
   ($14 $0))))) ((/\ ((! :(basval -> bool) -> bool) (\(b :basval).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_BASval $0))) ($13 $0)))))
   ((/\ ((! :(con -> bool) -> bool) (\(c :con).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_CONval $0))) ($12 $0)))))
   ((/\ ((! :(con -> bool) -> bool) (\(c :con).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($2 ((JOINT_int_APPCONval $1) $0))) ((($12
   ($2 $0)) $1) $0))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_EXVALval $0))) (($10 ($1
   $0)) $0))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_RECORDval $0))) (($9 ($1
   $0)) $0))))) ((/\ ((! :(addr -> bool) -> bool) (\(a :addr).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_ADDRval $0))) ($8 $0)))))
   ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_CLOSUREval $0))) (($7 ($1
   $0)) $0))))) ((/\ ((! :(var -> bool) -> bool) (\(v' :var).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($2
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_ch44_var_val
   $1) $0))) ((($7 ($2 $0)) $1) $0))))))) ((/\ (((= :'a -> 'a -> bool)
   ($0
   JOINT_int_closure_env_exval_record_strenv_val_varenv_NIL_var_val_prod_closure_env_exval_record_strenv_val_varenv))
   $4)) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j1 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j2 :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($2
   ((JOINT_int_closure_env_exval_record_strenv_val_varenv_CONS_var_val_prod_closure_env_exval_record_strenv_val_varenv
   $1) $0))) (((($5 ($2 $1)) ($2 $0)) $1) $0))))))) ((/\
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1
   (JOINT_int_closure_env_exval_record_strenv_val_varenv_FINMAP_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv
   $0))) (($3 ($1 $0)) $0)))))
   ((! :(joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv ->
        bool) -> bool)
   (\(j :joint_ty_closure_env_exval_label_val_prod_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_label_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_record_strenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_strid_env_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_val_var_val_prod_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_var_val_prod_closure_env_exval_record_strenv_val_varenv_list_closure_env_exval_record_strenv_val_varenv_finmap_closure_env_exval_record_strenv_val_varenv_varenv).
   (((= :'a -> 'a -> bool) ($1 (JOINT_int_VARENV $0))) (($2 ($1 $0))
   $0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))`)]
