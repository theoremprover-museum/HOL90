thid = (boolarith1, 784894765, 172421)
axioms = []
definitions = []
theorems =
[((LESS_LESSEQ),
  [],
  `((! :(num -> bool) -> bool) (\(a :num). ((! :(num -> bool) -> bool)
   (\(b :num). (((= :bool -> bool -> bool) ((< $1) $0)) ((<= ((+ $1)
   1)) $0))))))`),
 ((NOT_EQ_LEQ),
  [],
  `((! :(num -> bool) -> bool) (\(a :num). ((! :(num -> bool) -> bool)
   (\(b :num). (((= :bool -> bool -> bool) (~
   (((= :num -> num -> bool) $1) $0))) ((\/ ((< $1) $0)) ((< $0)
   $1)))))))`),
 ((EQ_LEQ),
  [],
  `((! :(num -> bool) -> bool) (\(a :num). ((! :(num -> bool) -> bool)
   (\(b :num). (((= :bool -> bool -> bool) (((= :num -> num -> bool)
   $1) $0)) ((/\ ((<= $1) $0)) ((<= $0) $1)))))))`),
 ((NOT_LEQ),
  [],
  `((! :(num -> bool) -> bool) (\(a :num). ((! :(num -> bool) -> bool)
   (\(b :num). (((= :bool -> bool -> bool) (~ ((<= $1) $0))) ((< $0)
   $1))))))`),
 ((GREATER_EQ),
  [],
  `((! :(num -> bool) -> bool) (\(a :num). ((! :(num -> bool) -> bool)
   (\(b :num). (((= :bool -> bool -> bool) ((>= $1) $0)) ((<= $0)
   $1))))))`),
 ((LEFT_DISJ_CONJ),
  [],
  `((! :(bool -> bool) -> bool) (\(a :bool).
   ((! :(bool -> bool) -> bool) (\(b :bool).
   (((= :bool -> bool -> bool) ((\/ ((/\ $1) $0)) $0)) $0)))))`),
 ((RIGHT_DISJ_DISTRIB),
  [],
  `((! :(bool -> bool) -> bool) (\(t1 :bool).
   ((! :(bool -> bool) -> bool) (\(t2 :bool).
   ((! :(bool -> bool) -> bool) (\(t3 :bool).
   (((= :bool -> bool -> bool) ((\/ ((/\ $1) $0)) $2)) ((/\ ((\/ $1)
   $2)) ((\/ $0) $2)))))))))`),
 ((LEFT_DISJ_DISTRIB),
  [],
  `((! :(bool -> bool) -> bool) (\(t1 :bool).
   ((! :(bool -> bool) -> bool) (\(t2 :bool).
   ((! :(bool -> bool) -> bool) (\(t3 :bool).
   (((= :bool -> bool -> bool) ((\/ $2) ((/\ $1) $0))) ((/\ ((\/ $2)
   $1)) ((\/ $2) $0)))))))))`),
 ((RIGHT_CONJ_DISTRIB),
  [],
  `((! :(bool -> bool) -> bool) (\(t1 :bool).
   ((! :(bool -> bool) -> bool) (\(t2 :bool).
   ((! :(bool -> bool) -> bool) (\(t3 :bool).
   (((= :bool -> bool -> bool) ((/\ ((\/ $1) $0)) $2)) ((\/ ((/\ $1)
   $2)) ((/\ $0) $2)))))))))`),
 ((LEFT_CONJ_DISTRIB),
  [],
  `((! :(bool -> bool) -> bool) (\(t1 :bool).
   ((! :(bool -> bool) -> bool) (\(t2 :bool).
   ((! :(bool -> bool) -> bool) (\(t3 :bool).
   (((= :bool -> bool -> bool) ((/\ $2) ((\/ $1) $0))) ((\/ ((/\ $2)
   $1)) ((/\ $2) $0)))))))))`),
 ((DISJ_ASSOC),
  [],
  `((! :(bool -> bool) -> bool) (\(t1 :bool).
   ((! :(bool -> bool) -> bool) (\(t2 :bool).
   ((! :(bool -> bool) -> bool) (\(t3 :bool).
   (((= :bool -> bool -> bool) ((\/ $2) ((\/ $1) $0))) ((\/ ((\/ $2)
   $1)) $0))))))))`),
 ((NOT_EQ),
  [],
  `((! :(bool -> bool) -> bool) (\(t1 :bool).
   ((! :(bool -> bool) -> bool) (\(t2 :bool).
   (((= :bool -> bool -> bool) (((= :bool -> bool -> bool) $1) $0))
   (((= :bool -> bool -> bool) (~ $1)) (~ $0)))))))`)]
