head	1.1;
branch	1.1.1;
access;
symbols
	HOL97:1.1.1.1.0.6
	bpHOL97:1.1.1.1
	hol90_9_alpha:1.1.1.1
	hol90_pre8_for_multiple_compilers:1.1.1.1.0.4
	hol90_pre8_after_donalds_separate_compilation_changes:1.1.1.1
	hol90_8_after_merging_Konrad_Elsa:1.1.1.1
	hol90_7_cleaned_up_original_branchtag:1.1.1.1.0.2
	hol90_7_cleaned_up_original:1.1.1.1
	hol90_7_cleaned_up_original:1.1.1;
locks; strict;
comment	@# @;


1.1
date	95.10.16.13.35.47;	author rjb;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.16.13.35.47;	author rjb;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@\DOC mk_const

\TYPE {mk_const : {{Name:string, Ty : hol_type}} -> term}

\SYNOPSIS
Constructs a constant.

\DESCRIBE
{mk_const{{Name = "const", Ty = ty}}} returns the constant {{--`const:ty`--}}.


\FAILURE
Fails with 

    HOL_ERR{{origin_structure = "Dsyntax", origin_function = "mk_const", 
            message}}

where {message} is prefixed with {"not in term signature"} if the string
supplied is not the name of a known constant, or {"not a type instance"}
if the string is known as a constant but the type supplied is not an
instance of the declared type of that constant.

\EXAMPLE
{- mk_const {{Name = "T", Ty = ==`:bool`==}};
(--`T`--) : term

- Dsyntax.mk_const {{Name = "T", Ty = ==`:num`==}} handle e => Raise e;
Exception raised at Dsyntax.mk_const:
not a type instance: T

- mk_const {{Name = "test", Ty = ==`:bool`==}} handle e => Raise e;
Exception raised at Dsyntax.mk_const:
not in term signature: test

}
\SEEALSO
dest_const, is_const, mk_var, mk_comb, mk_abs.

\ENDDOC
@


1.1.1.1
log
@Sources of hol90.7 as released, cleaned up by R.J.Boulton and D.R.Syme.

Summary of changes:

 * "contrib" directory not included
 * Machine-generatable files deleted, e.g. .dvi, .ps, .thms, .holsig, .hol_lib
 * Some directory restructuring in "library", in particular help files for
   ML functions have been put in a help/entries subdirectory in cases where
   they were originally in the help directory itself.
@
text
@@
